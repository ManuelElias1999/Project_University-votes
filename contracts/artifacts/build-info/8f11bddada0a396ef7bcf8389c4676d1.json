{
	"id": "8f11bddada0a396ef7bcf8389c4676d1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/CandidatosFactory.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\ncontract Candidatos {\r\n    // Struct para representar la información de un candidato\r\n    struct Candidato {\r\n        string name;\r\n        uint256 votos;\r\n    }\r\n    \r\n    // Array para almacenar la información de los candidatos\r\n    Candidato[] public candidatos;\r\n\r\n    // Evento emitido al agregar un nuevo candidato\r\n    event CandidatoAgregado(string nombre);\r\n\r\n    // Función para añadir un nuevo candidato\r\n    function agregarCandidato(string memory _nombre) public virtual {\r\n        candidatos.push(Candidato(_nombre, 0));\r\n        emit CandidatoAgregado(_nombre);\r\n    }\r\n\r\n    // Función para obtener la información de todos los candidatos\r\n    function getAllCandidatos() public view virtual returns (Candidato[] memory) {\r\n        return candidatos;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 159,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 165,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 167,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 169,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 171,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/CandidatosFactory.sol": {
				"Candidatos": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "nombre",
									"type": "string"
								}
							],
							"name": "CandidatoAgregado",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_nombre",
									"type": "string"
								}
							],
							"name": "agregarCandidato",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "candidatos",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "votos",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllCandidatos",
							"outputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "name",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "votos",
											"type": "uint256"
										}
									],
									"internalType": "struct Candidatos.Candidato[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/CandidatosFactory.sol\":120:901  contract Candidatos {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/CandidatosFactory.sol\":120:901  contract Candidatos {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x198cc691\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x503c560f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8f023f85\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/CandidatosFactory.sol\":785:898  function getAllCandidatos() public view virtual returns (Candidato[] memory) {... */\n    tag_3:\n      tag_6\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CandidatosFactory.sol\":544:707  function agregarCandidato(string memory _nombre) public virtual {... */\n    tag_4:\n      tag_10\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      tag_13\n      jump\t// in\n    tag_10:\n      stop\n        /* \"contracts/CandidatosFactory.sol\":357:386  Candidato[] public candidatos */\n    tag_5:\n      tag_14\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      tag_17\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      tag_18\n      swap3\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/CandidatosFactory.sol\":785:898  function getAllCandidatos() public view virtual returns (Candidato[] memory) {... */\n    tag_7:\n        /* \"contracts/CandidatosFactory.sol\":842:860  Candidato[] memory */\n      0x60\n        /* \"contracts/CandidatosFactory.sol\":880:890  candidatos */\n      0x00\n        /* \"contracts/CandidatosFactory.sol\":873:890  return candidatos */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_21:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_22\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      dup1\n      sload\n      tag_24\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_26\n      swap1\n      tag_25\n      jump\t// in\n    tag_26:\n      dup1\n      iszero\n      tag_27\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_28\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_27)\n    tag_28:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_29:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_29\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_21)\n    tag_22:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/CandidatosFactory.sol\":785:898  function getAllCandidatos() public view virtual returns (Candidato[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/CandidatosFactory.sol\":544:707  function agregarCandidato(string memory _nombre) public virtual {... */\n    tag_13:\n        /* \"contracts/CandidatosFactory.sol\":619:629  candidatos */\n      0x00\n        /* \"contracts/CandidatosFactory.sol\":635:656  Candidato(_nombre, 0) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/CandidatosFactory.sol\":645:652  _nombre */\n      dup4\n        /* \"contracts/CandidatosFactory.sol\":635:656  Candidato(_nombre, 0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/CandidatosFactory.sol\":654:655  0 */\n      0x00\n        /* \"contracts/CandidatosFactory.sol\":635:656  Candidato(_nombre, 0) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/CandidatosFactory.sol\":619:657  candidatos.push(Candidato(_nombre, 0)) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      swap1\n      dup2\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/CandidatosFactory.sol\":673:699  CandidatoAgregado(_nombre) */\n      0x566c2d39711b082cc685ade507dee6291f47044333d9aba4037034cdc3cfac9e\n        /* \"contracts/CandidatosFactory.sol\":691:698  _nombre */\n      dup2\n        /* \"contracts/CandidatosFactory.sol\":673:699  CandidatoAgregado(_nombre) */\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/CandidatosFactory.sol\":544:707  function agregarCandidato(string memory _nombre) public virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/CandidatosFactory.sol\":357:386  Candidato[] public candidatos */\n    tag_17:\n      0x00\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_38\n      swap1\n      tag_25\n      jump\t// in\n    tag_38:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_39\n      swap1\n      tag_25\n      jump\t// in\n    tag_39:\n      dup1\n      iszero\n      tag_40\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_41\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_40)\n    tag_41:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_42:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_42\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"#utility.yul\":7:147   */\n    tag_43:\n        /* \"#utility.yul\":100:106   */\n      0x00\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":128:140   */\n      mload\n        /* \"#utility.yul\":118:140   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:147   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":153:363   */\n    tag_44:\n        /* \"#utility.yul\":278:289   */\n      0x00\n        /* \"#utility.yul\":312:318   */\n      dup3\n        /* \"#utility.yul\":307:310   */\n      dup3\n        /* \"#utility.yul\":300:319   */\n      mstore\n        /* \"#utility.yul\":352:356   */\n      0x20\n        /* \"#utility.yul\":347:350   */\n      dup3\n        /* \"#utility.yul\":343:357   */\n      add\n        /* \"#utility.yul\":328:357   */\n      swap1\n      pop\n        /* \"#utility.yul\":153:363   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":369:527   */\n    tag_45:\n        /* \"#utility.yul\":462:466   */\n      0x00\n        /* \"#utility.yul\":485:488   */\n      dup2\n        /* \"#utility.yul\":477:488   */\n      swap1\n      pop\n        /* \"#utility.yul\":515:519   */\n      0x20\n        /* \"#utility.yul\":510:513   */\n      dup3\n        /* \"#utility.yul\":506:520   */\n      add\n        /* \"#utility.yul\":498:520   */\n      swap1\n      pop\n        /* \"#utility.yul\":369:527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":533:632   */\n    tag_46:\n        /* \"#utility.yul\":585:591   */\n      0x00\n        /* \"#utility.yul\":619:624   */\n      dup2\n        /* \"#utility.yul\":613:625   */\n      mload\n        /* \"#utility.yul\":603:625   */\n      swap1\n      pop\n        /* \"#utility.yul\":533:632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":638:797   */\n    tag_47:\n        /* \"#utility.yul\":712:723   */\n      0x00\n        /* \"#utility.yul\":746:752   */\n      dup3\n        /* \"#utility.yul\":741:744   */\n      dup3\n        /* \"#utility.yul\":734:753   */\n      mstore\n        /* \"#utility.yul\":786:790   */\n      0x20\n        /* \"#utility.yul\":781:784   */\n      dup3\n        /* \"#utility.yul\":777:791   */\n      add\n        /* \"#utility.yul\":762:791   */\n      swap1\n      pop\n        /* \"#utility.yul\":638:797   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":803:942   */\n    tag_48:\n        /* \"#utility.yul\":892:898   */\n      dup3\n        /* \"#utility.yul\":887:890   */\n      dup2\n        /* \"#utility.yul\":882:885   */\n      dup4\n        /* \"#utility.yul\":876:899   */\n      mcopy\n        /* \"#utility.yul\":933:934   */\n      0x00\n        /* \"#utility.yul\":924:930   */\n      dup4\n        /* \"#utility.yul\":919:922   */\n      dup4\n        /* \"#utility.yul\":915:931   */\n      add\n        /* \"#utility.yul\":908:935   */\n      mstore\n        /* \"#utility.yul\":803:942   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":948:1050   */\n    tag_49:\n        /* \"#utility.yul\":989:995   */\n      0x00\n        /* \"#utility.yul\":1040:1042   */\n      0x1f\n        /* \"#utility.yul\":1036:1043   */\n      not\n        /* \"#utility.yul\":1031:1033   */\n      0x1f\n        /* \"#utility.yul\":1024:1029   */\n      dup4\n        /* \"#utility.yul\":1020:1034   */\n      add\n        /* \"#utility.yul\":1016:1044   */\n      and\n        /* \"#utility.yul\":1006:1044   */\n      swap1\n      pop\n        /* \"#utility.yul\":948:1050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1056:1413   */\n    tag_50:\n        /* \"#utility.yul\":1134:1137   */\n      0x00\n        /* \"#utility.yul\":1162:1201   */\n      tag_99\n        /* \"#utility.yul\":1195:1200   */\n      dup3\n        /* \"#utility.yul\":1162:1201   */\n      tag_46\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":1217:1278   */\n      tag_100\n        /* \"#utility.yul\":1271:1277   */\n      dup2\n        /* \"#utility.yul\":1266:1269   */\n      dup6\n        /* \"#utility.yul\":1217:1278   */\n      tag_47\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":1210:1278   */\n      swap4\n      pop\n        /* \"#utility.yul\":1287:1352   */\n      tag_101\n        /* \"#utility.yul\":1345:1351   */\n      dup2\n        /* \"#utility.yul\":1340:1343   */\n      dup6\n        /* \"#utility.yul\":1333:1337   */\n      0x20\n        /* \"#utility.yul\":1326:1331   */\n      dup7\n        /* \"#utility.yul\":1322:1338   */\n      add\n        /* \"#utility.yul\":1287:1352   */\n      tag_48\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":1377:1406   */\n      tag_102\n        /* \"#utility.yul\":1399:1405   */\n      dup2\n        /* \"#utility.yul\":1377:1406   */\n      tag_49\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":1372:1375   */\n      dup5\n        /* \"#utility.yul\":1368:1407   */\n      add\n        /* \"#utility.yul\":1361:1407   */\n      swap2\n      pop\n        /* \"#utility.yul\":1138:1413   */\n      pop\n        /* \"#utility.yul\":1056:1413   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1419:1496   */\n    tag_51:\n        /* \"#utility.yul\":1456:1463   */\n      0x00\n        /* \"#utility.yul\":1485:1490   */\n      dup2\n        /* \"#utility.yul\":1474:1490   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1502:1610   */\n    tag_52:\n        /* \"#utility.yul\":1579:1603   */\n      tag_105\n        /* \"#utility.yul\":1597:1602   */\n      dup2\n        /* \"#utility.yul\":1579:1603   */\n      tag_51\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":1574:1577   */\n      dup3\n        /* \"#utility.yul\":1567:1604   */\n      mstore\n        /* \"#utility.yul\":1502:1610   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1682:2281   */\n    tag_53:\n        /* \"#utility.yul\":1793:1796   */\n      0x00\n        /* \"#utility.yul\":1829:1833   */\n      0x40\n        /* \"#utility.yul\":1824:1827   */\n      dup4\n        /* \"#utility.yul\":1820:1834   */\n      add\n        /* \"#utility.yul\":1916:1920   */\n      0x00\n        /* \"#utility.yul\":1909:1914   */\n      dup4\n        /* \"#utility.yul\":1905:1921   */\n      add\n        /* \"#utility.yul\":1899:1922   */\n      mload\n        /* \"#utility.yul\":1969:1972   */\n      dup5\n        /* \"#utility.yul\":1963:1967   */\n      dup3\n        /* \"#utility.yul\":1959:1973   */\n      sub\n        /* \"#utility.yul\":1952:1956   */\n      0x00\n        /* \"#utility.yul\":1947:1950   */\n      dup7\n        /* \"#utility.yul\":1943:1957   */\n      add\n        /* \"#utility.yul\":1936:1974   */\n      mstore\n        /* \"#utility.yul\":1995:2068   */\n      tag_107\n        /* \"#utility.yul\":2063:2067   */\n      dup3\n        /* \"#utility.yul\":2049:2061   */\n      dup3\n        /* \"#utility.yul\":1995:2068   */\n      tag_50\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":1987:2068   */\n      swap2\n      pop\n        /* \"#utility.yul\":1844:2079   */\n      pop\n        /* \"#utility.yul\":2162:2166   */\n      0x20\n        /* \"#utility.yul\":2155:2160   */\n      dup4\n        /* \"#utility.yul\":2151:2167   */\n      add\n        /* \"#utility.yul\":2145:2168   */\n      mload\n        /* \"#utility.yul\":2181:2244   */\n      tag_108\n        /* \"#utility.yul\":2238:2242   */\n      0x20\n        /* \"#utility.yul\":2233:2236   */\n      dup7\n        /* \"#utility.yul\":2229:2243   */\n      add\n        /* \"#utility.yul\":2215:2227   */\n      dup3\n        /* \"#utility.yul\":2181:2244   */\n      tag_52\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2089:2254   */\n      pop\n        /* \"#utility.yul\":2271:2275   */\n      dup1\n        /* \"#utility.yul\":2264:2275   */\n      swap2\n      pop\n        /* \"#utility.yul\":1798:2281   */\n      pop\n        /* \"#utility.yul\":1682:2281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2547   */\n    tag_54:\n        /* \"#utility.yul\":2408:2418   */\n      0x00\n        /* \"#utility.yul\":2443:2541   */\n      tag_110\n        /* \"#utility.yul\":2537:2540   */\n      dup4\n        /* \"#utility.yul\":2529:2535   */\n      dup4\n        /* \"#utility.yul\":2443:2541   */\n      tag_53\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":2429:2541   */\n      swap1\n      pop\n        /* \"#utility.yul\":2287:2547   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2553:2692   */\n    tag_55:\n        /* \"#utility.yul\":2649:2653   */\n      0x00\n        /* \"#utility.yul\":2681:2685   */\n      0x20\n        /* \"#utility.yul\":2676:2679   */\n      dup3\n        /* \"#utility.yul\":2672:2686   */\n      add\n        /* \"#utility.yul\":2664:2686   */\n      swap1\n      pop\n        /* \"#utility.yul\":2553:2692   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2768:3887   */\n    tag_56:\n        /* \"#utility.yul\":2939:2942   */\n      0x00\n        /* \"#utility.yul\":2968:3048   */\n      tag_113\n        /* \"#utility.yul\":3042:3047   */\n      dup3\n        /* \"#utility.yul\":2968:3048   */\n      tag_43\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3064:3176   */\n      tag_114\n        /* \"#utility.yul\":3169:3175   */\n      dup2\n        /* \"#utility.yul\":3164:3167   */\n      dup6\n        /* \"#utility.yul\":3064:3176   */\n      tag_44\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3057:3176   */\n      swap4\n      pop\n        /* \"#utility.yul\":3202:3205   */\n      dup4\n        /* \"#utility.yul\":3247:3251   */\n      0x20\n        /* \"#utility.yul\":3239:3245   */\n      dup3\n        /* \"#utility.yul\":3235:3252   */\n      mul\n        /* \"#utility.yul\":3230:3233   */\n      dup6\n        /* \"#utility.yul\":3226:3253   */\n      add\n        /* \"#utility.yul\":3277:3359   */\n      tag_115\n        /* \"#utility.yul\":3353:3358   */\n      dup6\n        /* \"#utility.yul\":3277:3359   */\n      tag_45\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3382:3389   */\n      dup1\n        /* \"#utility.yul\":3413:3414   */\n      0x00\n        /* \"#utility.yul\":3398:3842   */\n    tag_116:\n        /* \"#utility.yul\":3423:3429   */\n      dup6\n        /* \"#utility.yul\":3420:3421   */\n      dup2\n        /* \"#utility.yul\":3417:3430   */\n      lt\n        /* \"#utility.yul\":3398:3842   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":3494:3503   */\n      dup5\n        /* \"#utility.yul\":3488:3492   */\n      dup5\n        /* \"#utility.yul\":3484:3504   */\n      sub\n        /* \"#utility.yul\":3479:3482   */\n      dup10\n        /* \"#utility.yul\":3472:3505   */\n      mstore\n        /* \"#utility.yul\":3545:3551   */\n      dup2\n        /* \"#utility.yul\":3539:3552   */\n      mload\n        /* \"#utility.yul\":3573:3689   */\n      tag_119\n        /* \"#utility.yul\":3684:3688   */\n      dup6\n        /* \"#utility.yul\":3669:3682   */\n      dup3\n        /* \"#utility.yul\":3573:3689   */\n      tag_54\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":3565:3689   */\n      swap5\n      pop\n        /* \"#utility.yul\":3712:3798   */\n      tag_120\n        /* \"#utility.yul\":3791:3797   */\n      dup4\n        /* \"#utility.yul\":3712:3798   */\n      tag_55\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3702:3798   */\n      swap3\n      pop\n        /* \"#utility.yul\":3827:3831   */\n      0x20\n        /* \"#utility.yul\":3822:3825   */\n      dup11\n        /* \"#utility.yul\":3818:3832   */\n      add\n        /* \"#utility.yul\":3811:3832   */\n      swap10\n      pop\n        /* \"#utility.yul\":3458:3842   */\n      pop\n        /* \"#utility.yul\":3445:3446   */\n      0x01\n        /* \"#utility.yul\":3442:3443   */\n      dup2\n        /* \"#utility.yul\":3438:3447   */\n      add\n        /* \"#utility.yul\":3433:3447   */\n      swap1\n      pop\n        /* \"#utility.yul\":3398:3842   */\n      jump(tag_116)\n    tag_118:\n        /* \"#utility.yul\":3402:3416   */\n      pop\n        /* \"#utility.yul\":3858:3862   */\n      dup3\n        /* \"#utility.yul\":3851:3862   */\n      swap8\n      pop\n        /* \"#utility.yul\":3878:3881   */\n      dup8\n        /* \"#utility.yul\":3871:3881   */\n      swap6\n      pop\n        /* \"#utility.yul\":2944:3887   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2768:3887   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3893:4370   */\n    tag_9:\n        /* \"#utility.yul\":4088:4092   */\n      0x00\n        /* \"#utility.yul\":4126:4128   */\n      0x20\n        /* \"#utility.yul\":4115:4124   */\n      dup3\n        /* \"#utility.yul\":4111:4129   */\n      add\n        /* \"#utility.yul\":4103:4129   */\n      swap1\n      pop\n        /* \"#utility.yul\":4175:4184   */\n      dup2\n        /* \"#utility.yul\":4169:4173   */\n      dup2\n        /* \"#utility.yul\":4165:4185   */\n      sub\n        /* \"#utility.yul\":4161:4162   */\n      0x00\n        /* \"#utility.yul\":4150:4159   */\n      dup4\n        /* \"#utility.yul\":4146:4163   */\n      add\n        /* \"#utility.yul\":4139:4186   */\n      mstore\n        /* \"#utility.yul\":4203:4363   */\n      tag_122\n        /* \"#utility.yul\":4358:4362   */\n      dup2\n        /* \"#utility.yul\":4349:4355   */\n      dup5\n        /* \"#utility.yul\":4203:4363   */\n      tag_56\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4195:4363   */\n      swap1\n      pop\n        /* \"#utility.yul\":3893:4370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4376:4451   */\n    tag_57:\n        /* \"#utility.yul\":4409:4415   */\n      0x00\n        /* \"#utility.yul\":4442:4444   */\n      0x40\n        /* \"#utility.yul\":4436:4445   */\n      mload\n        /* \"#utility.yul\":4426:4445   */\n      swap1\n      pop\n        /* \"#utility.yul\":4376:4451   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":4457:4574   */\n    tag_58:\n        /* \"#utility.yul\":4566:4567   */\n      0x00\n        /* \"#utility.yul\":4563:4564   */\n      dup1\n        /* \"#utility.yul\":4556:4568   */\n      revert\n        /* \"#utility.yul\":4580:4697   */\n    tag_59:\n        /* \"#utility.yul\":4689:4690   */\n      0x00\n        /* \"#utility.yul\":4686:4687   */\n      dup1\n        /* \"#utility.yul\":4679:4691   */\n      revert\n        /* \"#utility.yul\":4703:4820   */\n    tag_60:\n        /* \"#utility.yul\":4812:4813   */\n      0x00\n        /* \"#utility.yul\":4809:4810   */\n      dup1\n        /* \"#utility.yul\":4802:4814   */\n      revert\n        /* \"#utility.yul\":4826:4943   */\n    tag_61:\n        /* \"#utility.yul\":4935:4936   */\n      0x00\n        /* \"#utility.yul\":4932:4933   */\n      dup1\n        /* \"#utility.yul\":4925:4937   */\n      revert\n        /* \"#utility.yul\":4949:5129   */\n    tag_62:\n        /* \"#utility.yul\":4997:5074   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4994:4995   */\n      0x00\n        /* \"#utility.yul\":4987:5075   */\n      mstore\n        /* \"#utility.yul\":5094:5098   */\n      0x41\n        /* \"#utility.yul\":5091:5092   */\n      0x04\n        /* \"#utility.yul\":5084:5099   */\n      mstore\n        /* \"#utility.yul\":5118:5122   */\n      0x24\n        /* \"#utility.yul\":5115:5116   */\n      0x00\n        /* \"#utility.yul\":5108:5123   */\n      revert\n        /* \"#utility.yul\":5135:5416   */\n    tag_63:\n        /* \"#utility.yul\":5218:5245   */\n      tag_130\n        /* \"#utility.yul\":5240:5244   */\n      dup3\n        /* \"#utility.yul\":5218:5245   */\n      tag_49\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5210:5216   */\n      dup2\n        /* \"#utility.yul\":5206:5246   */\n      add\n        /* \"#utility.yul\":5348:5354   */\n      dup2\n        /* \"#utility.yul\":5336:5346   */\n      dup2\n        /* \"#utility.yul\":5333:5355   */\n      lt\n        /* \"#utility.yul\":5312:5330   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5300:5310   */\n      dup3\n        /* \"#utility.yul\":5297:5331   */\n      gt\n        /* \"#utility.yul\":5294:5356   */\n      or\n        /* \"#utility.yul\":5291:5379   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":5359:5377   */\n      tag_132\n      tag_62\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":5291:5379   */\n    tag_131:\n        /* \"#utility.yul\":5399:5409   */\n      dup1\n        /* \"#utility.yul\":5395:5397   */\n      0x40\n        /* \"#utility.yul\":5388:5410   */\n      mstore\n        /* \"#utility.yul\":5178:5416   */\n      pop\n        /* \"#utility.yul\":5135:5416   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5422:5551   */\n    tag_64:\n        /* \"#utility.yul\":5456:5462   */\n      0x00\n        /* \"#utility.yul\":5483:5503   */\n      tag_134\n      tag_57\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5473:5503   */\n      swap1\n      pop\n        /* \"#utility.yul\":5512:5545   */\n      tag_135\n        /* \"#utility.yul\":5540:5544   */\n      dup3\n        /* \"#utility.yul\":5532:5538   */\n      dup3\n        /* \"#utility.yul\":5512:5545   */\n      tag_63\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5422:5551   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5557:5865   */\n    tag_65:\n        /* \"#utility.yul\":5619:5623   */\n      0x00\n        /* \"#utility.yul\":5709:5727   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5701:5707   */\n      dup3\n        /* \"#utility.yul\":5698:5728   */\n      gt\n        /* \"#utility.yul\":5695:5751   */\n      iszero\n      tag_137\n      jumpi\n        /* \"#utility.yul\":5731:5749   */\n      tag_138\n      tag_62\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5695:5751   */\n    tag_137:\n        /* \"#utility.yul\":5769:5798   */\n      tag_139\n        /* \"#utility.yul\":5791:5797   */\n      dup3\n        /* \"#utility.yul\":5769:5798   */\n      tag_49\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5761:5798   */\n      swap1\n      pop\n        /* \"#utility.yul\":5853:5857   */\n      0x20\n        /* \"#utility.yul\":5847:5851   */\n      dup2\n        /* \"#utility.yul\":5843:5858   */\n      add\n        /* \"#utility.yul\":5835:5858   */\n      swap1\n      pop\n        /* \"#utility.yul\":5557:5865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:6019   */\n    tag_66:\n        /* \"#utility.yul\":5969:5975   */\n      dup3\n        /* \"#utility.yul\":5964:5967   */\n      dup2\n        /* \"#utility.yul\":5959:5962   */\n      dup4\n        /* \"#utility.yul\":5946:5976   */\n      calldatacopy\n        /* \"#utility.yul\":6010:6011   */\n      0x00\n        /* \"#utility.yul\":6001:6007   */\n      dup4\n        /* \"#utility.yul\":5996:5999   */\n      dup4\n        /* \"#utility.yul\":5992:6008   */\n      add\n        /* \"#utility.yul\":5985:6012   */\n      mstore\n        /* \"#utility.yul\":5871:6019   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6025:6450   */\n    tag_67:\n        /* \"#utility.yul\":6103:6108   */\n      0x00\n        /* \"#utility.yul\":6128:6194   */\n      tag_142\n        /* \"#utility.yul\":6144:6193   */\n      tag_143\n        /* \"#utility.yul\":6186:6192   */\n      dup5\n        /* \"#utility.yul\":6144:6193   */\n      tag_65\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6128:6194   */\n      tag_64\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":6119:6194   */\n      swap1\n      pop\n        /* \"#utility.yul\":6217:6223   */\n      dup3\n        /* \"#utility.yul\":6210:6215   */\n      dup2\n        /* \"#utility.yul\":6203:6224   */\n      mstore\n        /* \"#utility.yul\":6255:6259   */\n      0x20\n        /* \"#utility.yul\":6248:6253   */\n      dup2\n        /* \"#utility.yul\":6244:6260   */\n      add\n        /* \"#utility.yul\":6293:6296   */\n      dup5\n        /* \"#utility.yul\":6284:6290   */\n      dup5\n        /* \"#utility.yul\":6279:6282   */\n      dup5\n        /* \"#utility.yul\":6275:6291   */\n      add\n        /* \"#utility.yul\":6272:6297   */\n      gt\n        /* \"#utility.yul\":6269:6381   */\n      iszero\n      tag_144\n      jumpi\n        /* \"#utility.yul\":6300:6379   */\n      tag_145\n      tag_61\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6269:6381   */\n    tag_144:\n        /* \"#utility.yul\":6390:6444   */\n      tag_146\n        /* \"#utility.yul\":6437:6443   */\n      dup5\n        /* \"#utility.yul\":6432:6435   */\n      dup3\n        /* \"#utility.yul\":6427:6430   */\n      dup6\n        /* \"#utility.yul\":6390:6444   */\n      tag_66\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6109:6450   */\n      pop\n        /* \"#utility.yul\":6025:6450   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6470:6810   */\n    tag_68:\n        /* \"#utility.yul\":6526:6531   */\n      0x00\n        /* \"#utility.yul\":6575:6578   */\n      dup3\n        /* \"#utility.yul\":6568:6572   */\n      0x1f\n        /* \"#utility.yul\":6560:6566   */\n      dup4\n        /* \"#utility.yul\":6556:6573   */\n      add\n        /* \"#utility.yul\":6552:6579   */\n      slt\n        /* \"#utility.yul\":6542:6664   */\n      tag_148\n      jumpi\n        /* \"#utility.yul\":6583:6662   */\n      tag_149\n      tag_60\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6542:6664   */\n    tag_148:\n        /* \"#utility.yul\":6700:6706   */\n      dup2\n        /* \"#utility.yul\":6687:6707   */\n      calldataload\n        /* \"#utility.yul\":6725:6804   */\n      tag_150\n        /* \"#utility.yul\":6800:6803   */\n      dup5\n        /* \"#utility.yul\":6792:6798   */\n      dup3\n        /* \"#utility.yul\":6785:6789   */\n      0x20\n        /* \"#utility.yul\":6777:6783   */\n      dup7\n        /* \"#utility.yul\":6773:6790   */\n      add\n        /* \"#utility.yul\":6725:6804   */\n      tag_67\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6716:6804   */\n      swap2\n      pop\n        /* \"#utility.yul\":6532:6810   */\n      pop\n        /* \"#utility.yul\":6470:6810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6816:7325   */\n    tag_12:\n        /* \"#utility.yul\":6885:6891   */\n      0x00\n        /* \"#utility.yul\":6934:6936   */\n      0x20\n        /* \"#utility.yul\":6922:6931   */\n      dup3\n        /* \"#utility.yul\":6913:6920   */\n      dup5\n        /* \"#utility.yul\":6909:6932   */\n      sub\n        /* \"#utility.yul\":6905:6937   */\n      slt\n        /* \"#utility.yul\":6902:7021   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":6940:7019   */\n      tag_153\n      tag_58\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6902:7021   */\n    tag_152:\n        /* \"#utility.yul\":7088:7089   */\n      0x00\n        /* \"#utility.yul\":7077:7086   */\n      dup3\n        /* \"#utility.yul\":7073:7090   */\n      add\n        /* \"#utility.yul\":7060:7091   */\n      calldataload\n        /* \"#utility.yul\":7118:7136   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7110:7116   */\n      dup2\n        /* \"#utility.yul\":7107:7137   */\n      gt\n        /* \"#utility.yul\":7104:7221   */\n      iszero\n      tag_154\n      jumpi\n        /* \"#utility.yul\":7140:7219   */\n      tag_155\n      tag_59\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":7104:7221   */\n    tag_154:\n        /* \"#utility.yul\":7245:7308   */\n      tag_156\n        /* \"#utility.yul\":7300:7307   */\n      dup5\n        /* \"#utility.yul\":7291:7297   */\n      dup3\n        /* \"#utility.yul\":7280:7289   */\n      dup6\n        /* \"#utility.yul\":7276:7298   */\n      add\n        /* \"#utility.yul\":7245:7308   */\n      tag_68\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":7235:7308   */\n      swap2\n      pop\n        /* \"#utility.yul\":7031:7318   */\n      pop\n        /* \"#utility.yul\":6816:7325   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7331:7453   */\n    tag_69:\n        /* \"#utility.yul\":7404:7428   */\n      tag_158\n        /* \"#utility.yul\":7422:7427   */\n      dup2\n        /* \"#utility.yul\":7404:7428   */\n      tag_51\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7397:7402   */\n      dup2\n        /* \"#utility.yul\":7394:7429   */\n      eq\n        /* \"#utility.yul\":7384:7447   */\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7443:7444   */\n      0x00\n        /* \"#utility.yul\":7440:7441   */\n      dup1\n        /* \"#utility.yul\":7433:7445   */\n      revert\n        /* \"#utility.yul\":7384:7447   */\n    tag_159:\n        /* \"#utility.yul\":7331:7453   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7459:7598   */\n    tag_70:\n        /* \"#utility.yul\":7505:7510   */\n      0x00\n        /* \"#utility.yul\":7543:7549   */\n      dup2\n        /* \"#utility.yul\":7530:7550   */\n      calldataload\n        /* \"#utility.yul\":7521:7550   */\n      swap1\n      pop\n        /* \"#utility.yul\":7559:7592   */\n      tag_161\n        /* \"#utility.yul\":7586:7591   */\n      dup2\n        /* \"#utility.yul\":7559:7592   */\n      tag_69\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7459:7598   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7604:7933   */\n    tag_16:\n        /* \"#utility.yul\":7663:7669   */\n      0x00\n        /* \"#utility.yul\":7712:7714   */\n      0x20\n        /* \"#utility.yul\":7700:7709   */\n      dup3\n        /* \"#utility.yul\":7691:7698   */\n      dup5\n        /* \"#utility.yul\":7687:7710   */\n      sub\n        /* \"#utility.yul\":7683:7715   */\n      slt\n        /* \"#utility.yul\":7680:7799   */\n      iszero\n      tag_163\n      jumpi\n        /* \"#utility.yul\":7718:7797   */\n      tag_164\n      tag_58\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":7680:7799   */\n    tag_163:\n        /* \"#utility.yul\":7838:7839   */\n      0x00\n        /* \"#utility.yul\":7863:7916   */\n      tag_165\n        /* \"#utility.yul\":7908:7915   */\n      dup5\n        /* \"#utility.yul\":7899:7905   */\n      dup3\n        /* \"#utility.yul\":7888:7897   */\n      dup6\n        /* \"#utility.yul\":7884:7906   */\n      add\n        /* \"#utility.yul\":7863:7916   */\n      tag_70\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7853:7916   */\n      swap2\n      pop\n        /* \"#utility.yul\":7809:7926   */\n      pop\n        /* \"#utility.yul\":7604:7933   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7939:8108   */\n    tag_71:\n        /* \"#utility.yul\":8023:8034   */\n      0x00\n        /* \"#utility.yul\":8057:8063   */\n      dup3\n        /* \"#utility.yul\":8052:8055   */\n      dup3\n        /* \"#utility.yul\":8045:8064   */\n      mstore\n        /* \"#utility.yul\":8097:8101   */\n      0x20\n        /* \"#utility.yul\":8092:8095   */\n      dup3\n        /* \"#utility.yul\":8088:8102   */\n      add\n        /* \"#utility.yul\":8073:8102   */\n      swap1\n      pop\n        /* \"#utility.yul\":7939:8108   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8114:8491   */\n    tag_72:\n        /* \"#utility.yul\":8202:8205   */\n      0x00\n        /* \"#utility.yul\":8230:8269   */\n      tag_168\n        /* \"#utility.yul\":8263:8268   */\n      dup3\n        /* \"#utility.yul\":8230:8269   */\n      tag_46\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8285:8356   */\n      tag_169\n        /* \"#utility.yul\":8349:8355   */\n      dup2\n        /* \"#utility.yul\":8344:8347   */\n      dup6\n        /* \"#utility.yul\":8285:8356   */\n      tag_71\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":8278:8356   */\n      swap4\n      pop\n        /* \"#utility.yul\":8365:8430   */\n      tag_170\n        /* \"#utility.yul\":8423:8429   */\n      dup2\n        /* \"#utility.yul\":8418:8421   */\n      dup6\n        /* \"#utility.yul\":8411:8415   */\n      0x20\n        /* \"#utility.yul\":8404:8409   */\n      dup7\n        /* \"#utility.yul\":8400:8416   */\n      add\n        /* \"#utility.yul\":8365:8430   */\n      tag_48\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":8455:8484   */\n      tag_171\n        /* \"#utility.yul\":8477:8483   */\n      dup2\n        /* \"#utility.yul\":8455:8484   */\n      tag_49\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":8450:8453   */\n      dup5\n        /* \"#utility.yul\":8446:8485   */\n      add\n        /* \"#utility.yul\":8439:8485   */\n      swap2\n      pop\n        /* \"#utility.yul\":8206:8491   */\n      pop\n        /* \"#utility.yul\":8114:8491   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8497:8615   */\n    tag_73:\n        /* \"#utility.yul\":8584:8608   */\n      tag_173\n        /* \"#utility.yul\":8602:8607   */\n      dup2\n        /* \"#utility.yul\":8584:8608   */\n      tag_51\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":8579:8582   */\n      dup3\n        /* \"#utility.yul\":8572:8609   */\n      mstore\n        /* \"#utility.yul\":8497:8615   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8621:9044   */\n    tag_19:\n        /* \"#utility.yul\":8762:8766   */\n      0x00\n        /* \"#utility.yul\":8800:8802   */\n      0x40\n        /* \"#utility.yul\":8789:8798   */\n      dup3\n        /* \"#utility.yul\":8785:8803   */\n      add\n        /* \"#utility.yul\":8777:8803   */\n      swap1\n      pop\n        /* \"#utility.yul\":8849:8858   */\n      dup2\n        /* \"#utility.yul\":8843:8847   */\n      dup2\n        /* \"#utility.yul\":8839:8859   */\n      sub\n        /* \"#utility.yul\":8835:8836   */\n      0x00\n        /* \"#utility.yul\":8824:8833   */\n      dup4\n        /* \"#utility.yul\":8820:8837   */\n      add\n        /* \"#utility.yul\":8813:8860   */\n      mstore\n        /* \"#utility.yul\":8877:8955   */\n      tag_175\n        /* \"#utility.yul\":8950:8954   */\n      dup2\n        /* \"#utility.yul\":8941:8947   */\n      dup6\n        /* \"#utility.yul\":8877:8955   */\n      tag_72\n      jump\t// in\n    tag_175:\n        /* \"#utility.yul\":8869:8955   */\n      swap1\n      pop\n        /* \"#utility.yul\":8965:9037   */\n      tag_176\n        /* \"#utility.yul\":9033:9035   */\n      0x20\n        /* \"#utility.yul\":9022:9031   */\n      dup4\n        /* \"#utility.yul\":9018:9036   */\n      add\n        /* \"#utility.yul\":9009:9015   */\n      dup5\n        /* \"#utility.yul\":8965:9037   */\n      tag_73\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8621:9044   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9050:9230   */\n    tag_74:\n        /* \"#utility.yul\":9098:9175   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9095:9096   */\n      0x00\n        /* \"#utility.yul\":9088:9176   */\n      mstore\n        /* \"#utility.yul\":9195:9199   */\n      0x22\n        /* \"#utility.yul\":9192:9193   */\n      0x04\n        /* \"#utility.yul\":9185:9200   */\n      mstore\n        /* \"#utility.yul\":9219:9223   */\n      0x24\n        /* \"#utility.yul\":9216:9217   */\n      0x00\n        /* \"#utility.yul\":9209:9224   */\n      revert\n        /* \"#utility.yul\":9236:9556   */\n    tag_25:\n        /* \"#utility.yul\":9280:9286   */\n      0x00\n        /* \"#utility.yul\":9317:9318   */\n      0x02\n        /* \"#utility.yul\":9311:9315   */\n      dup3\n        /* \"#utility.yul\":9307:9319   */\n      div\n        /* \"#utility.yul\":9297:9319   */\n      swap1\n      pop\n        /* \"#utility.yul\":9364:9365   */\n      0x01\n        /* \"#utility.yul\":9358:9362   */\n      dup3\n        /* \"#utility.yul\":9354:9366   */\n      and\n        /* \"#utility.yul\":9385:9403   */\n      dup1\n        /* \"#utility.yul\":9375:9456   */\n      tag_179\n      jumpi\n        /* \"#utility.yul\":9441:9445   */\n      0x7f\n        /* \"#utility.yul\":9433:9439   */\n      dup3\n        /* \"#utility.yul\":9429:9446   */\n      and\n        /* \"#utility.yul\":9419:9446   */\n      swap2\n      pop\n        /* \"#utility.yul\":9375:9456   */\n    tag_179:\n        /* \"#utility.yul\":9503:9505   */\n      0x20\n        /* \"#utility.yul\":9495:9501   */\n      dup3\n        /* \"#utility.yul\":9492:9506   */\n      lt\n        /* \"#utility.yul\":9472:9490   */\n      dup2\n        /* \"#utility.yul\":9469:9507   */\n      sub\n        /* \"#utility.yul\":9466:9550   */\n      tag_180\n      jumpi\n        /* \"#utility.yul\":9522:9540   */\n      tag_181\n      tag_74\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":9466:9550   */\n    tag_180:\n        /* \"#utility.yul\":9287:9556   */\n      pop\n        /* \"#utility.yul\":9236:9556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9562:9703   */\n    tag_75:\n        /* \"#utility.yul\":9611:9615   */\n      0x00\n        /* \"#utility.yul\":9634:9637   */\n      dup2\n        /* \"#utility.yul\":9626:9637   */\n      swap1\n      pop\n        /* \"#utility.yul\":9657:9660   */\n      dup2\n        /* \"#utility.yul\":9654:9655   */\n      0x00\n        /* \"#utility.yul\":9647:9661   */\n      mstore\n        /* \"#utility.yul\":9691:9695   */\n      0x20\n        /* \"#utility.yul\":9688:9689   */\n      0x00\n        /* \"#utility.yul\":9678:9696   */\n      keccak256\n        /* \"#utility.yul\":9670:9696   */\n      swap1\n      pop\n        /* \"#utility.yul\":9562:9703   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9709:9802   */\n    tag_76:\n        /* \"#utility.yul\":9746:9752   */\n      0x00\n        /* \"#utility.yul\":9793:9795   */\n      0x20\n        /* \"#utility.yul\":9788:9790   */\n      0x1f\n        /* \"#utility.yul\":9781:9786   */\n      dup4\n        /* \"#utility.yul\":9777:9791   */\n      add\n        /* \"#utility.yul\":9773:9796   */\n      div\n        /* \"#utility.yul\":9763:9796   */\n      swap1\n      pop\n        /* \"#utility.yul\":9709:9802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9808:9915   */\n    tag_77:\n        /* \"#utility.yul\":9852:9860   */\n      0x00\n        /* \"#utility.yul\":9902:9907   */\n      dup3\n        /* \"#utility.yul\":9896:9900   */\n      dup3\n        /* \"#utility.yul\":9892:9908   */\n      shl\n        /* \"#utility.yul\":9871:9908   */\n      swap1\n      pop\n        /* \"#utility.yul\":9808:9915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9921:10314   */\n    tag_78:\n        /* \"#utility.yul\":9990:9996   */\n      0x00\n        /* \"#utility.yul\":10040:10041   */\n      0x08\n        /* \"#utility.yul\":10028:10038   */\n      dup4\n        /* \"#utility.yul\":10024:10042   */\n      mul\n        /* \"#utility.yul\":10063:10160   */\n      tag_186\n        /* \"#utility.yul\":10093:10159   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10082:10091   */\n      dup3\n        /* \"#utility.yul\":10063:10160   */\n      tag_77\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":10181:10220   */\n      tag_187\n        /* \"#utility.yul\":10211:10219   */\n      dup7\n        /* \"#utility.yul\":10200:10209   */\n      dup4\n        /* \"#utility.yul\":10181:10220   */\n      tag_77\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":10169:10220   */\n      swap6\n      pop\n        /* \"#utility.yul\":10253:10257   */\n      dup1\n        /* \"#utility.yul\":10249:10258   */\n      not\n        /* \"#utility.yul\":10242:10247   */\n      dup5\n        /* \"#utility.yul\":10238:10259   */\n      and\n        /* \"#utility.yul\":10229:10259   */\n      swap4\n      pop\n        /* \"#utility.yul\":10302:10306   */\n      dup1\n        /* \"#utility.yul\":10292:10300   */\n      dup7\n        /* \"#utility.yul\":10288:10307   */\n      and\n        /* \"#utility.yul\":10281:10286   */\n      dup5\n        /* \"#utility.yul\":10278:10308   */\n      or\n        /* \"#utility.yul\":10268:10308   */\n      swap3\n      pop\n        /* \"#utility.yul\":9997:10314   */\n      pop\n      pop\n        /* \"#utility.yul\":9921:10314   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10320:10380   */\n    tag_79:\n        /* \"#utility.yul\":10348:10351   */\n      0x00\n        /* \"#utility.yul\":10369:10374   */\n      dup2\n        /* \"#utility.yul\":10362:10374   */\n      swap1\n      pop\n        /* \"#utility.yul\":10320:10380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10386:10528   */\n    tag_80:\n        /* \"#utility.yul\":10436:10445   */\n      0x00\n        /* \"#utility.yul\":10469:10522   */\n      tag_190\n        /* \"#utility.yul\":10487:10521   */\n      tag_191\n        /* \"#utility.yul\":10496:10520   */\n      tag_192\n        /* \"#utility.yul\":10514:10519   */\n      dup5\n        /* \"#utility.yul\":10496:10520   */\n      tag_51\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":10487:10521   */\n      tag_79\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":10469:10522   */\n      tag_51\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":10456:10522   */\n      swap1\n      pop\n        /* \"#utility.yul\":10386:10528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10534:10609   */\n    tag_81:\n        /* \"#utility.yul\":10577:10580   */\n      0x00\n        /* \"#utility.yul\":10598:10603   */\n      dup2\n        /* \"#utility.yul\":10591:10603   */\n      swap1\n      pop\n        /* \"#utility.yul\":10534:10609   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10615:10884   */\n    tag_82:\n        /* \"#utility.yul\":10725:10764   */\n      tag_195\n        /* \"#utility.yul\":10756:10763   */\n      dup4\n        /* \"#utility.yul\":10725:10764   */\n      tag_80\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":10786:10877   */\n      tag_196\n        /* \"#utility.yul\":10835:10876   */\n      tag_197\n        /* \"#utility.yul\":10859:10875   */\n      dup3\n        /* \"#utility.yul\":10835:10876   */\n      tag_81\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":10827:10833   */\n      dup5\n        /* \"#utility.yul\":10820:10824   */\n      dup5\n        /* \"#utility.yul\":10814:10825   */\n      sload\n        /* \"#utility.yul\":10786:10877   */\n      tag_78\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":10780:10784   */\n      dup3\n        /* \"#utility.yul\":10773:10878   */\n      sstore\n        /* \"#utility.yul\":10691:10884   */\n      pop\n        /* \"#utility.yul\":10615:10884   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10890:10963   */\n    tag_83:\n        /* \"#utility.yul\":10935:10938   */\n      0x00\n        /* \"#utility.yul\":10890:10963   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":10969:11158   */\n    tag_84:\n        /* \"#utility.yul\":11046:11078   */\n      tag_200\n      tag_83\n      jump\t// in\n    tag_200:\n        /* \"#utility.yul\":11087:11152   */\n      tag_201\n        /* \"#utility.yul\":11145:11151   */\n      dup2\n        /* \"#utility.yul\":11137:11143   */\n      dup5\n        /* \"#utility.yul\":11131:11135   */\n      dup5\n        /* \"#utility.yul\":11087:11152   */\n      tag_82\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":11022:11158   */\n      pop\n        /* \"#utility.yul\":10969:11158   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11164:11350   */\n    tag_85:\n        /* \"#utility.yul\":11224:11344   */\n    tag_203:\n        /* \"#utility.yul\":11241:11244   */\n      dup2\n        /* \"#utility.yul\":11234:11239   */\n      dup2\n        /* \"#utility.yul\":11231:11245   */\n      lt\n        /* \"#utility.yul\":11224:11344   */\n      iszero\n      tag_205\n      jumpi\n        /* \"#utility.yul\":11295:11334   */\n      tag_206\n        /* \"#utility.yul\":11332:11333   */\n      0x00\n        /* \"#utility.yul\":11325:11330   */\n      dup3\n        /* \"#utility.yul\":11295:11334   */\n      tag_84\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":11268:11269   */\n      0x01\n        /* \"#utility.yul\":11261:11266   */\n      dup2\n        /* \"#utility.yul\":11257:11270   */\n      add\n        /* \"#utility.yul\":11248:11270   */\n      swap1\n      pop\n        /* \"#utility.yul\":11224:11344   */\n      jump(tag_203)\n    tag_205:\n        /* \"#utility.yul\":11164:11350   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11356:11899   */\n    tag_86:\n        /* \"#utility.yul\":11457:11459   */\n      0x1f\n        /* \"#utility.yul\":11452:11455   */\n      dup3\n        /* \"#utility.yul\":11449:11460   */\n      gt\n        /* \"#utility.yul\":11446:11892   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":11491:11529   */\n      tag_209\n        /* \"#utility.yul\":11523:11528   */\n      dup2\n        /* \"#utility.yul\":11491:11529   */\n      tag_75\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":11575:11604   */\n      tag_210\n        /* \"#utility.yul\":11593:11603   */\n      dup5\n        /* \"#utility.yul\":11575:11604   */\n      tag_76\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":11565:11573   */\n      dup2\n        /* \"#utility.yul\":11561:11605   */\n      add\n        /* \"#utility.yul\":11758:11760   */\n      0x20\n        /* \"#utility.yul\":11746:11756   */\n      dup6\n        /* \"#utility.yul\":11743:11761   */\n      lt\n        /* \"#utility.yul\":11740:11789   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":11779:11787   */\n      dup2\n        /* \"#utility.yul\":11764:11787   */\n      swap1\n      pop\n        /* \"#utility.yul\":11740:11789   */\n    tag_211:\n        /* \"#utility.yul\":11802:11882   */\n      tag_212\n        /* \"#utility.yul\":11858:11880   */\n      tag_213\n        /* \"#utility.yul\":11876:11879   */\n      dup6\n        /* \"#utility.yul\":11858:11880   */\n      tag_76\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":11848:11856   */\n      dup4\n        /* \"#utility.yul\":11844:11881   */\n      add\n        /* \"#utility.yul\":11831:11842   */\n      dup3\n        /* \"#utility.yul\":11802:11882   */\n      tag_85\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":11461:11892   */\n      pop\n      pop\n        /* \"#utility.yul\":11446:11892   */\n    tag_208:\n        /* \"#utility.yul\":11356:11899   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11905:12022   */\n    tag_87:\n        /* \"#utility.yul\":11959:11967   */\n      0x00\n        /* \"#utility.yul\":12009:12014   */\n      dup3\n        /* \"#utility.yul\":12003:12007   */\n      dup3\n        /* \"#utility.yul\":11999:12015   */\n      shr\n        /* \"#utility.yul\":11978:12015   */\n      swap1\n      pop\n        /* \"#utility.yul\":11905:12022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12028:12197   */\n    tag_88:\n        /* \"#utility.yul\":12072:12078   */\n      0x00\n        /* \"#utility.yul\":12105:12156   */\n      tag_216\n        /* \"#utility.yul\":12153:12154   */\n      0x00\n        /* \"#utility.yul\":12149:12155   */\n      not\n        /* \"#utility.yul\":12141:12146   */\n      dup5\n        /* \"#utility.yul\":12138:12139   */\n      0x08\n        /* \"#utility.yul\":12134:12147   */\n      mul\n        /* \"#utility.yul\":12105:12156   */\n      tag_87\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":12101:12157   */\n      not\n        /* \"#utility.yul\":12186:12190   */\n      dup1\n        /* \"#utility.yul\":12180:12184   */\n      dup4\n        /* \"#utility.yul\":12176:12191   */\n      and\n        /* \"#utility.yul\":12166:12191   */\n      swap2\n      pop\n        /* \"#utility.yul\":12079:12197   */\n      pop\n        /* \"#utility.yul\":12028:12197   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12202:12497   */\n    tag_89:\n        /* \"#utility.yul\":12278:12282   */\n      0x00\n        /* \"#utility.yul\":12424:12453   */\n      tag_218\n        /* \"#utility.yul\":12449:12452   */\n      dup4\n        /* \"#utility.yul\":12443:12447   */\n      dup4\n        /* \"#utility.yul\":12424:12453   */\n      tag_88\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":12416:12453   */\n      swap2\n      pop\n        /* \"#utility.yul\":12486:12489   */\n      dup3\n        /* \"#utility.yul\":12483:12484   */\n      0x02\n        /* \"#utility.yul\":12479:12490   */\n      mul\n        /* \"#utility.yul\":12473:12477   */\n      dup3\n        /* \"#utility.yul\":12470:12491   */\n      or\n        /* \"#utility.yul\":12462:12491   */\n      swap1\n      pop\n        /* \"#utility.yul\":12202:12497   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12502:13897   */\n    tag_33:\n        /* \"#utility.yul\":12619:12656   */\n      tag_220\n        /* \"#utility.yul\":12652:12655   */\n      dup3\n        /* \"#utility.yul\":12619:12656   */\n      tag_46\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":12721:12739   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12713:12719   */\n      dup2\n        /* \"#utility.yul\":12710:12740   */\n      gt\n        /* \"#utility.yul\":12707:12763   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":12743:12761   */\n      tag_222\n      tag_62\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":12707:12763   */\n    tag_221:\n        /* \"#utility.yul\":12787:12825   */\n      tag_223\n        /* \"#utility.yul\":12819:12823   */\n      dup3\n        /* \"#utility.yul\":12813:12824   */\n      sload\n        /* \"#utility.yul\":12787:12825   */\n      tag_25\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":12872:12939   */\n      tag_224\n        /* \"#utility.yul\":12932:12938   */\n      dup3\n        /* \"#utility.yul\":12924:12930   */\n      dup3\n        /* \"#utility.yul\":12918:12922   */\n      dup6\n        /* \"#utility.yul\":12872:12939   */\n      tag_86\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":12966:12967   */\n      0x00\n        /* \"#utility.yul\":12990:12994   */\n      0x20\n        /* \"#utility.yul\":12977:12994   */\n      swap1\n      pop\n        /* \"#utility.yul\":13022:13024   */\n      0x1f\n        /* \"#utility.yul\":13014:13020   */\n      dup4\n        /* \"#utility.yul\":13011:13025   */\n      gt\n        /* \"#utility.yul\":13039:13040   */\n      0x01\n        /* \"#utility.yul\":13034:13652   */\n      dup2\n      eq\n      tag_226\n      jumpi\n        /* \"#utility.yul\":13696:13697   */\n      0x00\n        /* \"#utility.yul\":13713:13719   */\n      dup5\n        /* \"#utility.yul\":13710:13787   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":13762:13771   */\n      dup3\n        /* \"#utility.yul\":13757:13760   */\n      dup8\n        /* \"#utility.yul\":13753:13772   */\n      add\n        /* \"#utility.yul\":13747:13773   */\n      mload\n        /* \"#utility.yul\":13738:13773   */\n      swap1\n      pop\n        /* \"#utility.yul\":13710:13787   */\n    tag_227:\n        /* \"#utility.yul\":13813:13880   */\n      tag_228\n        /* \"#utility.yul\":13873:13879   */\n      dup6\n        /* \"#utility.yul\":13866:13871   */\n      dup3\n        /* \"#utility.yul\":13813:13880   */\n      tag_89\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":13807:13811   */\n      dup7\n        /* \"#utility.yul\":13800:13881   */\n      sstore\n        /* \"#utility.yul\":13669:13891   */\n      pop\n        /* \"#utility.yul\":13004:13891   */\n      jump(tag_225)\n        /* \"#utility.yul\":13034:13652   */\n    tag_226:\n        /* \"#utility.yul\":13086:13090   */\n      0x1f\n        /* \"#utility.yul\":13082:13091   */\n      not\n        /* \"#utility.yul\":13074:13080   */\n      dup5\n        /* \"#utility.yul\":13070:13092   */\n      and\n        /* \"#utility.yul\":13120:13157   */\n      tag_229\n        /* \"#utility.yul\":13152:13156   */\n      dup7\n        /* \"#utility.yul\":13120:13157   */\n      tag_75\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":13179:13180   */\n      0x00\n        /* \"#utility.yul\":13193:13401   */\n    tag_230:\n        /* \"#utility.yul\":13207:13214   */\n      dup3\n        /* \"#utility.yul\":13204:13205   */\n      dup2\n        /* \"#utility.yul\":13201:13215   */\n      lt\n        /* \"#utility.yul\":13193:13401   */\n      iszero\n      tag_232\n      jumpi\n        /* \"#utility.yul\":13286:13295   */\n      dup5\n        /* \"#utility.yul\":13281:13284   */\n      dup10\n        /* \"#utility.yul\":13277:13296   */\n      add\n        /* \"#utility.yul\":13271:13297   */\n      mload\n        /* \"#utility.yul\":13263:13269   */\n      dup3\n        /* \"#utility.yul\":13256:13298   */\n      sstore\n        /* \"#utility.yul\":13337:13338   */\n      0x01\n        /* \"#utility.yul\":13329:13335   */\n      dup3\n        /* \"#utility.yul\":13325:13339   */\n      add\n        /* \"#utility.yul\":13315:13339   */\n      swap2\n      pop\n        /* \"#utility.yul\":13384:13386   */\n      0x20\n        /* \"#utility.yul\":13373:13382   */\n      dup6\n        /* \"#utility.yul\":13369:13387   */\n      add\n        /* \"#utility.yul\":13356:13387   */\n      swap5\n      pop\n        /* \"#utility.yul\":13230:13234   */\n      0x20\n        /* \"#utility.yul\":13227:13228   */\n      dup2\n        /* \"#utility.yul\":13223:13235   */\n      add\n        /* \"#utility.yul\":13218:13235   */\n      swap1\n      pop\n        /* \"#utility.yul\":13193:13401   */\n      jump(tag_230)\n    tag_232:\n        /* \"#utility.yul\":13429:13435   */\n      dup7\n        /* \"#utility.yul\":13420:13427   */\n      dup4\n        /* \"#utility.yul\":13417:13436   */\n      lt\n        /* \"#utility.yul\":13414:13593   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":13487:13496   */\n      dup5\n        /* \"#utility.yul\":13482:13485   */\n      dup10\n        /* \"#utility.yul\":13478:13497   */\n      add\n        /* \"#utility.yul\":13472:13498   */\n      mload\n        /* \"#utility.yul\":13530:13578   */\n      tag_234\n        /* \"#utility.yul\":13572:13576   */\n      0x1f\n        /* \"#utility.yul\":13564:13570   */\n      dup10\n        /* \"#utility.yul\":13560:13577   */\n      and\n        /* \"#utility.yul\":13549:13558   */\n      dup3\n        /* \"#utility.yul\":13530:13578   */\n      tag_88\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":13522:13528   */\n      dup4\n        /* \"#utility.yul\":13515:13579   */\n      sstore\n        /* \"#utility.yul\":13437:13593   */\n      pop\n        /* \"#utility.yul\":13414:13593   */\n    tag_233:\n        /* \"#utility.yul\":13639:13640   */\n      0x01\n        /* \"#utility.yul\":13635:13636   */\n      0x02\n        /* \"#utility.yul\":13627:13633   */\n      dup9\n        /* \"#utility.yul\":13623:13637   */\n      mul\n        /* \"#utility.yul\":13619:13641   */\n      add\n        /* \"#utility.yul\":13613:13617   */\n      dup9\n        /* \"#utility.yul\":13606:13642   */\n      sstore\n        /* \"#utility.yul\":13041:13652   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13004:13891   */\n    tag_225:\n      pop\n        /* \"#utility.yul\":12594:13897   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12502:13897   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13903:14216   */\n    tag_35:\n        /* \"#utility.yul\":14016:14020   */\n      0x00\n        /* \"#utility.yul\":14054:14056   */\n      0x20\n        /* \"#utility.yul\":14043:14052   */\n      dup3\n        /* \"#utility.yul\":14039:14057   */\n      add\n        /* \"#utility.yul\":14031:14057   */\n      swap1\n      pop\n        /* \"#utility.yul\":14103:14112   */\n      dup2\n        /* \"#utility.yul\":14097:14101   */\n      dup2\n        /* \"#utility.yul\":14093:14113   */\n      sub\n        /* \"#utility.yul\":14089:14090   */\n      0x00\n        /* \"#utility.yul\":14078:14087   */\n      dup4\n        /* \"#utility.yul\":14074:14091   */\n      add\n        /* \"#utility.yul\":14067:14114   */\n      mstore\n        /* \"#utility.yul\":14131:14209   */\n      tag_236\n        /* \"#utility.yul\":14204:14208   */\n      dup2\n        /* \"#utility.yul\":14195:14201   */\n      dup5\n        /* \"#utility.yul\":14131:14209   */\n      tag_72\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":14123:14209   */\n      swap1\n      pop\n        /* \"#utility.yul\":13903:14216   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122072265078d568fd3eed930ff89df0eacbd131fad9a98f6d722efc76b280b53dba64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50610a068061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063198cc69114610043578063503c560f146100615780638f023f851461007d575b5f80fd5b61004b6100ae565b6040516100589190610469565b60405180910390f35b61007b600480360381019061007691906105c6565b6101a2565b005b61009760048036038101906100929190610637565b610238565b6040516100a59291906106b9565b60405180910390f35b60605f805480602002602001604051908101604052809291908181526020015f905b82821015610199578382905f5260205f2090600202016040518060400160405290815f8201805461010090610714565b80601f016020809104026020016040519081016040528092919081815260200182805461012c90610714565b80156101775780601f1061014e57610100808354040283529160200191610177565b820191905f5260205f20905b81548152906001019060200180831161015a57829003601f168201915b50505050508152602001600182015481525050815260200190600101906100d0565b50505050905090565b5f60405180604001604052808381526020015f815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0190816101f191906108e1565b506020820151816001015550507f566c2d39711b082cc685ade507dee6291f47044333d9aba4037034cdc3cfac9e8160405161022d91906109b0565b60405180910390a150565b5f8181548110610246575f80fd5b905f5260205f2090600202015f91509050805f01805461026590610714565b80601f016020809104026020016040519081016040528092919081815260200182805461029190610714565b80156102dc5780601f106102b3576101008083540402835291602001916102dc565b820191905f5260205f20905b8154815290600101906020018083116102bf57829003601f168201915b5050505050908060010154905082565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61035782610315565b610361818561031f565b935061037181856020860161032f565b61037a8161033d565b840191505092915050565b5f819050919050565b61039781610385565b82525050565b5f604083015f8301518482035f8601526103b7828261034d565b91505060208301516103cc602086018261038e565b508091505092915050565b5f6103e2838361039d565b905092915050565b5f602082019050919050565b5f610400826102ec565b61040a81856102f6565b93508360208202850161041c85610306565b805f5b85811015610457578484038952815161043885826103d7565b9450610443836103ea565b925060208a0199505060018101905061041f565b50829750879550505050505092915050565b5f6020820190508181035f83015261048181846103f6565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104d88261033d565b810181811067ffffffffffffffff821117156104f7576104f66104a2565b5b80604052505050565b5f610509610489565b905061051582826104cf565b919050565b5f67ffffffffffffffff821115610534576105336104a2565b5b61053d8261033d565b9050602081019050919050565b828183375f83830152505050565b5f61056a6105658461051a565b610500565b9050828152602081018484840111156105865761058561049e565b5b61059184828561054a565b509392505050565b5f82601f8301126105ad576105ac61049a565b5b81356105bd848260208601610558565b91505092915050565b5f602082840312156105db576105da610492565b5b5f82013567ffffffffffffffff8111156105f8576105f7610496565b5b61060484828501610599565b91505092915050565b61061681610385565b8114610620575f80fd5b50565b5f813590506106318161060d565b92915050565b5f6020828403121561064c5761064b610492565b5b5f61065984828501610623565b91505092915050565b5f82825260208201905092915050565b5f61067c82610315565b6106868185610662565b935061069681856020860161032f565b61069f8161033d565b840191505092915050565b6106b381610385565b82525050565b5f6040820190508181035f8301526106d18185610672565b90506106e060208301846106aa565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061072b57607f821691505b60208210810361073e5761073d6106e7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610765565b6107aa8683610765565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107e56107e06107db84610385565b6107c2565b610385565b9050919050565b5f819050919050565b6107fe836107cb565b61081261080a826107ec565b848454610771565b825550505050565b5f90565b61082661081a565b6108318184846107f5565b505050565b5b81811015610854576108495f8261081e565b600181019050610837565b5050565b601f8211156108995761086a81610744565b61087384610756565b81016020851015610882578190505b61089661088e85610756565b830182610836565b50505b505050565b5f82821c905092915050565b5f6108b95f198460080261089e565b1980831691505092915050565b5f6108d183836108aa565b9150826002028217905092915050565b6108ea82610315565b67ffffffffffffffff811115610903576109026104a2565b5b61090d8254610714565b610918828285610858565b5f60209050601f831160018114610949575f8415610937578287015190505b61094185826108c6565b8655506109a8565b601f19841661095786610744565b5f5b8281101561097e57848901518255600182019150602085019450602081019050610959565b8683101561099b5784890151610997601f8916826108aa565b8355505b6001600288020188555050505b505050505050565b5f6020820190508181035f8301526109c88184610672565b90509291505056fea264697066735822122072265078d568fd3eed930ff89df0eacbd131fad9a98f6d722efc76b280b53dba64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xA06 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x198CC691 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x503C560F EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x8F023F85 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x199 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12C SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x177 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x177 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH32 0x566C2D39711B082CC685ADE507DEE6291F47044333D9ABA4037034CDC3CFAC9E DUP2 PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x265 SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x357 DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x361 DUP2 DUP6 PUSH2 0x31F JUMP JUMPDEST SWAP4 POP PUSH2 0x371 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x32F JUMP JUMPDEST PUSH2 0x37A DUP2 PUSH2 0x33D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x397 DUP2 PUSH2 0x385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x3B7 DUP3 DUP3 PUSH2 0x34D JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3CC PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x38E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E2 DUP4 DUP4 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x400 DUP3 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x40A DUP2 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x41C DUP6 PUSH2 0x306 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x457 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x438 DUP6 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP5 POP PUSH2 0x443 DUP4 PUSH2 0x3EA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x41F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x481 DUP2 DUP5 PUSH2 0x3F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4D8 DUP3 PUSH2 0x33D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x509 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP PUSH2 0x515 DUP3 DUP3 PUSH2 0x4CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x534 JUMPI PUSH2 0x533 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH2 0x53D DUP3 PUSH2 0x33D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56A PUSH2 0x565 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x49E JUMP JUMPDEST JUMPDEST PUSH2 0x591 DUP5 DUP3 DUP6 PUSH2 0x54A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5AD JUMPI PUSH2 0x5AC PUSH2 0x49A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x558 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x492 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F8 JUMPI PUSH2 0x5F7 PUSH2 0x496 JUMP JUMPDEST JUMPDEST PUSH2 0x604 DUP5 DUP3 DUP6 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x616 DUP2 PUSH2 0x385 JUMP JUMPDEST DUP2 EQ PUSH2 0x620 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x631 DUP2 PUSH2 0x60D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64B PUSH2 0x492 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x659 DUP5 DUP3 DUP6 ADD PUSH2 0x623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x67C DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x686 DUP2 DUP6 PUSH2 0x662 JUMP JUMPDEST SWAP4 POP PUSH2 0x696 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x32F JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x33D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0x385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6D1 DUP2 DUP6 PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x72B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x6E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x7AA DUP7 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E5 PUSH2 0x7E0 PUSH2 0x7DB DUP5 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE DUP4 PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x812 PUSH2 0x80A DUP3 PUSH2 0x7EC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x771 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x826 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x831 DUP2 DUP5 DUP5 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH2 0x849 PUSH0 DUP3 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x837 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x899 JUMPI PUSH2 0x86A DUP2 PUSH2 0x744 JUMP JUMPDEST PUSH2 0x873 DUP5 PUSH2 0x756 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x882 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x896 PUSH2 0x88E DUP6 PUSH2 0x756 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x836 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x89E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D1 DUP4 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8EA DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x903 JUMPI PUSH2 0x902 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH2 0x90D DUP3 SLOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x918 DUP3 DUP3 DUP6 PUSH2 0x858 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x949 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x937 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x941 DUP6 DUP3 PUSH2 0x8C6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x957 DUP7 PUSH2 0x744 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x97E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x959 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x99B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x997 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8AA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C8 DUP2 DUP5 PUSH2 0x672 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x265078D568FD3EED930FF89DF0EACBD131FAD9 0xA9 DUP16 PUSH14 0x722EFC76B280B53DBA64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "120:781:5:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@agregarCandidato_820": {
									"entryPoint": 418,
									"id": 820,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@candidatos_797": {
									"entryPoint": 568,
									"id": 797,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAllCandidatos_830": {
									"entryPoint": 174,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1571,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr": {
									"entryPoint": 983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr": {
									"entryPoint": 925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 910,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 1721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 748,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr": {
									"entryPoint": 799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 2136,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 2102,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 1354,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1878,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2218,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 1767,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1186,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 2028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1170,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 2078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1905,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1549,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14219:6",
										"nodeType": "YulBlock",
										"src": "0:14219:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "107:40:6",
													"nodeType": "YulBlock",
													"src": "107:40:6",
													"statements": [
														{
															"nativeSrc": "118:22:6",
															"nodeType": "YulAssignment",
															"src": "118:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "134:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "128:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "128:5:6"
																},
																"nativeSrc": "128:12:6",
																"nodeType": "YulFunctionCall",
																"src": "128:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7:140:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "90:5:6",
														"nodeType": "YulTypedName",
														"src": "90:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "100:6:6",
														"nodeType": "YulTypedName",
														"src": "100:6:6",
														"type": ""
													}
												],
												"src": "7:140:6"
											},
											{
												"body": {
													"nativeSrc": "290:73:6",
													"nodeType": "YulBlock",
													"src": "290:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "307:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "307:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "312:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "312:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "300:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "300:6:6"
																},
																"nativeSrc": "300:19:6",
																"nodeType": "YulFunctionCall",
																"src": "300:19:6"
															},
															"nativeSrc": "300:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "300:19:6"
														},
														{
															"nativeSrc": "328:29:6",
															"nodeType": "YulAssignment",
															"src": "328:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "347:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "347:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "352:4:6",
																		"nodeType": "YulLiteral",
																		"src": "352:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "343:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "343:3:6"
																},
																"nativeSrc": "343:14:6",
																"nodeType": "YulFunctionCall",
																"src": "343:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "328:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "328:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "153:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "262:3:6",
														"nodeType": "YulTypedName",
														"src": "262:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "267:6:6",
														"nodeType": "YulTypedName",
														"src": "267:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "278:11:6",
														"nodeType": "YulTypedName",
														"src": "278:11:6",
														"type": ""
													}
												],
												"src": "153:210:6"
											},
											{
												"body": {
													"nativeSrc": "467:60:6",
													"nodeType": "YulBlock",
													"src": "467:60:6",
													"statements": [
														{
															"nativeSrc": "477:11:6",
															"nodeType": "YulAssignment",
															"src": "477:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "485:3:6",
																"nodeType": "YulIdentifier",
																"src": "485:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "477:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "477:4:6"
																}
															]
														},
														{
															"nativeSrc": "498:22:6",
															"nodeType": "YulAssignment",
															"src": "498:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "510:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "510:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "515:4:6",
																		"nodeType": "YulLiteral",
																		"src": "515:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "506:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "506:3:6"
																},
																"nativeSrc": "506:14:6",
																"nodeType": "YulFunctionCall",
																"src": "506:14:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "498:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "498:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "369:158:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "454:3:6",
														"nodeType": "YulTypedName",
														"src": "454:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "462:4:6",
														"nodeType": "YulTypedName",
														"src": "462:4:6",
														"type": ""
													}
												],
												"src": "369:158:6"
											},
											{
												"body": {
													"nativeSrc": "592:40:6",
													"nodeType": "YulBlock",
													"src": "592:40:6",
													"statements": [
														{
															"nativeSrc": "603:22:6",
															"nodeType": "YulAssignment",
															"src": "603:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "619:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "619:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "613:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "613:5:6"
																},
																"nativeSrc": "613:12:6",
																"nodeType": "YulFunctionCall",
																"src": "613:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "603:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "533:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "575:5:6",
														"nodeType": "YulTypedName",
														"src": "575:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "585:6:6",
														"nodeType": "YulTypedName",
														"src": "585:6:6",
														"type": ""
													}
												],
												"src": "533:99:6"
											},
											{
												"body": {
													"nativeSrc": "724:73:6",
													"nodeType": "YulBlock",
													"src": "724:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "741:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "741:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "746:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "746:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "734:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:6"
																},
																"nativeSrc": "734:19:6",
																"nodeType": "YulFunctionCall",
																"src": "734:19:6"
															},
															"nativeSrc": "734:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "734:19:6"
														},
														{
															"nativeSrc": "762:29:6",
															"nodeType": "YulAssignment",
															"src": "762:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "781:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "781:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "786:4:6",
																		"nodeType": "YulLiteral",
																		"src": "786:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "777:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "777:3:6"
																},
																"nativeSrc": "777:14:6",
																"nodeType": "YulFunctionCall",
																"src": "777:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "762:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "762:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr",
												"nativeSrc": "638:159:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "696:3:6",
														"nodeType": "YulTypedName",
														"src": "696:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "701:6:6",
														"nodeType": "YulTypedName",
														"src": "701:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "712:11:6",
														"nodeType": "YulTypedName",
														"src": "712:11:6",
														"type": ""
													}
												],
												"src": "638:159:6"
											},
											{
												"body": {
													"nativeSrc": "865:77:6",
													"nodeType": "YulBlock",
													"src": "865:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "882:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "882:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "887:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "887:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "892:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "892:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "876:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "876:5:6"
																},
																"nativeSrc": "876:23:6",
																"nodeType": "YulFunctionCall",
																"src": "876:23:6"
															},
															"nativeSrc": "876:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "876:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "919:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "919:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "924:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "924:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "915:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "915:3:6"
																		},
																		"nativeSrc": "915:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "915:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "933:1:6",
																		"nodeType": "YulLiteral",
																		"src": "933:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "908:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "908:6:6"
																},
																"nativeSrc": "908:27:6",
																"nodeType": "YulFunctionCall",
																"src": "908:27:6"
															},
															"nativeSrc": "908:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "908:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "803:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "847:3:6",
														"nodeType": "YulTypedName",
														"src": "847:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "852:3:6",
														"nodeType": "YulTypedName",
														"src": "852:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "857:6:6",
														"nodeType": "YulTypedName",
														"src": "857:6:6",
														"type": ""
													}
												],
												"src": "803:139:6"
											},
											{
												"body": {
													"nativeSrc": "996:54:6",
													"nodeType": "YulBlock",
													"src": "996:54:6",
													"statements": [
														{
															"nativeSrc": "1006:38:6",
															"nodeType": "YulAssignment",
															"src": "1006:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1024:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1024:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1031:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1031:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1020:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1020:3:6"
																		},
																		"nativeSrc": "1020:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1020:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1040:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1040:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1036:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1036:3:6"
																		},
																		"nativeSrc": "1036:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1016:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1016:3:6"
																},
																"nativeSrc": "1016:28:6",
																"nodeType": "YulFunctionCall",
																"src": "1016:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1006:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1006:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "948:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "979:5:6",
														"nodeType": "YulTypedName",
														"src": "979:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "989:6:6",
														"nodeType": "YulTypedName",
														"src": "989:6:6",
														"type": ""
													}
												],
												"src": "948:102:6"
											},
											{
												"body": {
													"nativeSrc": "1138:275:6",
													"nodeType": "YulBlock",
													"src": "1138:275:6",
													"statements": [
														{
															"nativeSrc": "1148:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1148:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1195:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "1162:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "1162:32:6"
																},
																"nativeSrc": "1162:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1162:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1152:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1152:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1210:68:6",
															"nodeType": "YulAssignment",
															"src": "1210:68:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1266:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1266:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1271:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr",
																	"nativeSrc": "1217:48:6",
																	"nodeType": "YulIdentifier",
																	"src": "1217:48:6"
																},
																"nativeSrc": "1217:61:6",
																"nodeType": "YulFunctionCall",
																"src": "1217:61:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1210:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1326:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1326:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1333:4:6",
																				"nodeType": "YulLiteral",
																				"src": "1333:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1322:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1322:3:6"
																		},
																		"nativeSrc": "1322:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1322:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1340:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1340:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1345:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1345:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1287:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "1287:34:6"
																},
																"nativeSrc": "1287:65:6",
																"nodeType": "YulFunctionCall",
																"src": "1287:65:6"
															},
															"nativeSrc": "1287:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "1287:65:6"
														},
														{
															"nativeSrc": "1361:46:6",
															"nodeType": "YulAssignment",
															"src": "1361:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1372:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1372:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1399:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1399:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "1377:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "1377:21:6"
																		},
																		"nativeSrc": "1377:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1377:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1368:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1368:3:6"
																},
																"nativeSrc": "1368:39:6",
																"nodeType": "YulFunctionCall",
																"src": "1368:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1361:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1361:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
												"nativeSrc": "1056:357:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1119:5:6",
														"nodeType": "YulTypedName",
														"src": "1119:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1126:3:6",
														"nodeType": "YulTypedName",
														"src": "1126:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1134:3:6",
														"nodeType": "YulTypedName",
														"src": "1134:3:6",
														"type": ""
													}
												],
												"src": "1056:357:6"
											},
											{
												"body": {
													"nativeSrc": "1464:32:6",
													"nodeType": "YulBlock",
													"src": "1464:32:6",
													"statements": [
														{
															"nativeSrc": "1474:16:6",
															"nodeType": "YulAssignment",
															"src": "1474:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "1485:5:6",
																"nodeType": "YulIdentifier",
																"src": "1485:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1474:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1474:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1419:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1446:5:6",
														"nodeType": "YulTypedName",
														"src": "1446:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1456:7:6",
														"nodeType": "YulTypedName",
														"src": "1456:7:6",
														"type": ""
													}
												],
												"src": "1419:77:6"
											},
											{
												"body": {
													"nativeSrc": "1557:53:6",
													"nodeType": "YulBlock",
													"src": "1557:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1574:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1574:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1597:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1597:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1579:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1579:17:6"
																		},
																		"nativeSrc": "1579:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1579:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1567:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:6"
																},
																"nativeSrc": "1567:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1567:37:6"
															},
															"nativeSrc": "1567:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1567:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "1502:108:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:6",
														"nodeType": "YulTypedName",
														"src": "1545:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1552:3:6",
														"nodeType": "YulTypedName",
														"src": "1552:3:6",
														"type": ""
													}
												],
												"src": "1502:108:6"
											},
											{
												"body": {
													"nativeSrc": "1798:483:6",
													"nodeType": "YulBlock",
													"src": "1798:483:6",
													"statements": [
														{
															"nativeSrc": "1808:26:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1808:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1824:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1824:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1829:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1829:4:6",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1820:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1820:3:6"
																},
																"nativeSrc": "1820:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1820:14:6"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1812:4:6",
																	"nodeType": "YulTypedName",
																	"src": "1812:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1844:235:6",
															"nodeType": "YulBlock",
															"src": "1844:235:6",
															"statements": [
																{
																	"nativeSrc": "1879:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1909:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1909:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1916:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1916:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1905:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1905:3:6"
																				},
																				"nativeSrc": "1905:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1905:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1899:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "1899:5:6"
																		},
																		"nativeSrc": "1899:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1899:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1883:12:6",
																			"nodeType": "YulTypedName",
																			"src": "1883:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "1947:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1947:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1952:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1952:4:6",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1943:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1943:3:6"
																				},
																				"nativeSrc": "1943:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1943:14:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "tail",
																						"nativeSrc": "1963:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "1963:4:6"
																					},
																					{
																						"name": "pos",
																						"nativeSrc": "1969:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "1969:3:6"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "1959:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1959:3:6"
																				},
																				"nativeSrc": "1959:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1959:14:6"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nativeSrc": "1936:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1936:6:6"
																		},
																		"nativeSrc": "1936:38:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1936:38:6"
																	},
																	"nativeSrc": "1936:38:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "1936:38:6"
																},
																{
																	"nativeSrc": "1987:81:6",
																	"nodeType": "YulAssignment",
																	"src": "1987:81:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2049:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "2049:12:6"
																			},
																			{
																				"name": "tail",
																				"nativeSrc": "2063:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2063:4:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr",
																			"nativeSrc": "1995:53:6",
																			"nodeType": "YulIdentifier",
																			"src": "1995:53:6"
																		},
																		"nativeSrc": "1995:73:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1995:73:6"
																	},
																	"variableNames": [
																		{
																			"name": "tail",
																			"nativeSrc": "1987:4:6",
																			"nodeType": "YulIdentifier",
																			"src": "1987:4:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2089:165:6",
															"nodeType": "YulBlock",
															"src": "2089:165:6",
															"statements": [
																{
																	"nativeSrc": "2125:43:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2125:43:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2155:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2155:5:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2162:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2162:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2151:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2151:3:6"
																				},
																				"nativeSrc": "2151:16:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2151:16:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2145:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "2145:5:6"
																		},
																		"nativeSrc": "2145:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2145:23:6"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2129:12:6",
																			"nodeType": "YulTypedName",
																			"src": "2129:12:6",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2215:12:6",
																				"nodeType": "YulIdentifier",
																				"src": "2215:12:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2233:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2233:3:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2238:4:6",
																						"nodeType": "YulLiteral",
																						"src": "2238:4:6",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2229:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2229:3:6"
																				},
																				"nativeSrc": "2229:14:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2229:14:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2181:33:6",
																			"nodeType": "YulIdentifier",
																			"src": "2181:33:6"
																		},
																		"nativeSrc": "2181:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2181:63:6"
																	},
																	"nativeSrc": "2181:63:6",
																	"nodeType": "YulExpressionStatement",
																	"src": "2181:63:6"
																}
															]
														},
														{
															"nativeSrc": "2264:11:6",
															"nodeType": "YulAssignment",
															"src": "2264:11:6",
															"value": {
																"name": "tail",
																"nativeSrc": "2271:4:6",
																"nodeType": "YulIdentifier",
																"src": "2271:4:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2264:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2264:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr",
												"nativeSrc": "1682:599:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1777:5:6",
														"nodeType": "YulTypedName",
														"src": "1777:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1784:3:6",
														"nodeType": "YulTypedName",
														"src": "1784:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1793:3:6",
														"nodeType": "YulTypedName",
														"src": "1793:3:6",
														"type": ""
													}
												],
												"src": "1682:599:6"
											},
											{
												"body": {
													"nativeSrc": "2419:128:6",
													"nodeType": "YulBlock",
													"src": "2419:128:6",
													"statements": [
														{
															"nativeSrc": "2429:112:6",
															"nodeType": "YulAssignment",
															"src": "2429:112:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2529:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2529:6:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2537:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2537:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr",
																	"nativeSrc": "2443:85:6",
																	"nodeType": "YulIdentifier",
																	"src": "2443:85:6"
																},
																"nativeSrc": "2443:98:6",
																"nodeType": "YulFunctionCall",
																"src": "2443:98:6"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "2429:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "2429:10:6"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr",
												"nativeSrc": "2287:260:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "2392:6:6",
														"nodeType": "YulTypedName",
														"src": "2392:6:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2400:3:6",
														"nodeType": "YulTypedName",
														"src": "2400:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "2408:10:6",
														"nodeType": "YulTypedName",
														"src": "2408:10:6",
														"type": ""
													}
												],
												"src": "2287:260:6"
											},
											{
												"body": {
													"nativeSrc": "2654:38:6",
													"nodeType": "YulBlock",
													"src": "2654:38:6",
													"statements": [
														{
															"nativeSrc": "2664:22:6",
															"nodeType": "YulAssignment",
															"src": "2664:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2676:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2676:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2681:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2681:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2672:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2672:3:6"
																},
																"nativeSrc": "2672:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2672:14:6"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "2664:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2664:4:6"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "2553:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2641:3:6",
														"nodeType": "YulTypedName",
														"src": "2641:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "2649:4:6",
														"nodeType": "YulTypedName",
														"src": "2649:4:6",
														"type": ""
													}
												],
												"src": "2553:139:6"
											},
											{
												"body": {
													"nativeSrc": "2944:943:6",
													"nodeType": "YulBlock",
													"src": "2944:943:6",
													"statements": [
														{
															"nativeSrc": "2954:94:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2954:94:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3042:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3042:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "2968:73:6",
																	"nodeType": "YulIdentifier",
																	"src": "2968:73:6"
																},
																"nativeSrc": "2968:80:6",
																"nodeType": "YulFunctionCall",
																"src": "2968:80:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2958:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2958:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3057:119:6",
															"nodeType": "YulAssignment",
															"src": "3057:119:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3164:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3164:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3169:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3169:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3064:99:6",
																	"nodeType": "YulIdentifier",
																	"src": "3064:99:6"
																},
																"nativeSrc": "3064:112:6",
																"nodeType": "YulFunctionCall",
																"src": "3064:112:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3057:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3057:3:6"
																}
															]
														},
														{
															"nativeSrc": "3185:20:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3185:20:6",
															"value": {
																"name": "pos",
																"nativeSrc": "3202:3:6",
																"nodeType": "YulIdentifier",
																"src": "3202:3:6"
															},
															"variables": [
																{
																	"name": "headStart",
																	"nativeSrc": "3189:9:6",
																	"nodeType": "YulTypedName",
																	"src": "3189:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3214:39:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3214:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3230:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3230:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3239:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3239:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3247:4:6",
																				"nodeType": "YulLiteral",
																				"src": "3247:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3235:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3235:3:6"
																		},
																		"nativeSrc": "3235:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3235:17:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3226:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3226:3:6"
																},
																"nativeSrc": "3226:27:6",
																"nodeType": "YulFunctionCall",
																"src": "3226:27:6"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "3218:4:6",
																	"nodeType": "YulTypedName",
																	"src": "3218:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3262:97:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3262:97:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3353:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3353:5:6"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3277:75:6",
																	"nodeType": "YulIdentifier",
																	"src": "3277:75:6"
																},
																"nativeSrc": "3277:82:6",
																"nodeType": "YulFunctionCall",
																"src": "3277:82:6"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3266:7:6",
																	"nodeType": "YulTypedName",
																	"src": "3266:7:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3368:21:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3368:21:6",
															"value": {
																"name": "baseRef",
																"nativeSrc": "3382:7:6",
																"nodeType": "YulIdentifier",
																"src": "3382:7:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "3372:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3372:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3458:384:6",
																"nodeType": "YulBlock",
																"src": "3458:384:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3479:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3479:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "tail",
																							"nativeSrc": "3488:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "3488:4:6"
																						},
																						{
																							"name": "headStart",
																							"nativeSrc": "3494:9:6",
																							"nodeType": "YulIdentifier",
																							"src": "3494:9:6"
																						}
																					],
																					"functionName": {
																						"name": "sub",
																						"nativeSrc": "3484:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3484:3:6"
																					},
																					"nativeSrc": "3484:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3484:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3472:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3472:6:6"
																			},
																			"nativeSrc": "3472:33:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3472:33:6"
																		},
																		"nativeSrc": "3472:33:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3472:33:6"
																	},
																	{
																		"nativeSrc": "3518:34:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3518:34:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3545:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3545:6:6"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "3539:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3539:5:6"
																			},
																			"nativeSrc": "3539:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3539:13:6"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "3522:13:6",
																				"nodeType": "YulTypedName",
																				"src": "3522:13:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3565:124:6",
																		"nodeType": "YulAssignment",
																		"src": "3565:124:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "3669:13:6",
																					"nodeType": "YulIdentifier",
																					"src": "3669:13:6"
																				},
																				{
																					"name": "tail",
																					"nativeSrc": "3684:4:6",
																					"nodeType": "YulIdentifier",
																					"src": "3684:4:6"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr",
																				"nativeSrc": "3573:95:6",
																				"nodeType": "YulIdentifier",
																				"src": "3573:95:6"
																			},
																			"nativeSrc": "3573:116:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3573:116:6"
																		},
																		"variableNames": [
																			{
																				"name": "tail",
																				"nativeSrc": "3565:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3565:4:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3702:96:6",
																		"nodeType": "YulAssignment",
																		"src": "3702:96:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "3791:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3791:6:6"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "3712:78:6",
																				"nodeType": "YulIdentifier",
																				"src": "3712:78:6"
																			},
																			"nativeSrc": "3712:86:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3712:86:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "3702:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3702:6:6"
																			}
																		]
																	},
																	{
																		"nativeSrc": "3811:21:6",
																		"nodeType": "YulAssignment",
																		"src": "3811:21:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "3822:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3822:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3827:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3827:4:6",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3818:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3818:3:6"
																			},
																			"nativeSrc": "3818:14:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3818:14:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "3811:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3811:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "3420:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3420:1:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3423:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3423:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3417:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3417:2:6"
																},
																"nativeSrc": "3417:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3417:13:6"
															},
															"nativeSrc": "3398:444:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3431:18:6",
																"nodeType": "YulBlock",
																"src": "3431:18:6",
																"statements": [
																	{
																		"nativeSrc": "3433:14:6",
																		"nodeType": "YulAssignment",
																		"src": "3433:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "3442:1:6",
																					"nodeType": "YulIdentifier",
																					"src": "3442:1:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3445:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3445:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3438:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3438:3:6"
																			},
																			"nativeSrc": "3438:9:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3438:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "3433:1:6",
																				"nodeType": "YulIdentifier",
																				"src": "3433:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3402:14:6",
																"nodeType": "YulBlock",
																"src": "3402:14:6",
																"statements": [
																	{
																		"nativeSrc": "3404:10:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3404:10:6",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "3413:1:6",
																			"nodeType": "YulLiteral",
																			"src": "3413:1:6",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "3408:1:6",
																				"nodeType": "YulTypedName",
																				"src": "3408:1:6",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "3398:444:6"
														},
														{
															"nativeSrc": "3851:11:6",
															"nodeType": "YulAssignment",
															"src": "3851:11:6",
															"value": {
																"name": "tail",
																"nativeSrc": "3858:4:6",
																"nodeType": "YulIdentifier",
																"src": "3858:4:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3851:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3851:3:6"
																}
															]
														},
														{
															"nativeSrc": "3871:10:6",
															"nodeType": "YulAssignment",
															"src": "3871:10:6",
															"value": {
																"name": "pos",
																"nativeSrc": "3878:3:6",
																"nodeType": "YulIdentifier",
																"src": "3878:3:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3871:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3871:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "2768:1119:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2923:5:6",
														"nodeType": "YulTypedName",
														"src": "2923:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2930:3:6",
														"nodeType": "YulTypedName",
														"src": "2930:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2939:3:6",
														"nodeType": "YulTypedName",
														"src": "2939:3:6",
														"type": ""
													}
												],
												"src": "2768:1119:6"
											},
											{
												"body": {
													"nativeSrc": "4093:277:6",
													"nodeType": "YulBlock",
													"src": "4093:277:6",
													"statements": [
														{
															"nativeSrc": "4103:26:6",
															"nodeType": "YulAssignment",
															"src": "4103:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4115:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4115:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4126:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4126:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4111:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4111:3:6"
																},
																"nativeSrc": "4111:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4111:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4103:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4103:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4150:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4150:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4161:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4161:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4146:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4146:3:6"
																		},
																		"nativeSrc": "4146:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4146:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4169:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "4169:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4175:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4175:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4165:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4165:3:6"
																		},
																		"nativeSrc": "4165:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4165:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4139:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4139:6:6"
																},
																"nativeSrc": "4139:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4139:47:6"
															},
															"nativeSrc": "4139:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4139:47:6"
														},
														{
															"nativeSrc": "4195:168:6",
															"nodeType": "YulAssignment",
															"src": "4195:168:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4349:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4358:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4358:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4203:145:6",
																	"nodeType": "YulIdentifier",
																	"src": "4203:145:6"
																},
																"nativeSrc": "4203:160:6",
																"nodeType": "YulFunctionCall",
																"src": "4203:160:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4195:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4195:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "3893:477:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4065:9:6",
														"nodeType": "YulTypedName",
														"src": "4065:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4077:6:6",
														"nodeType": "YulTypedName",
														"src": "4077:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4088:4:6",
														"nodeType": "YulTypedName",
														"src": "4088:4:6",
														"type": ""
													}
												],
												"src": "3893:477:6"
											},
											{
												"body": {
													"nativeSrc": "4416:35:6",
													"nodeType": "YulBlock",
													"src": "4416:35:6",
													"statements": [
														{
															"nativeSrc": "4426:19:6",
															"nodeType": "YulAssignment",
															"src": "4426:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4442:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4442:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4436:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4436:5:6"
																},
																"nativeSrc": "4436:9:6",
																"nodeType": "YulFunctionCall",
																"src": "4436:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4426:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4426:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "4376:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4409:6:6",
														"nodeType": "YulTypedName",
														"src": "4409:6:6",
														"type": ""
													}
												],
												"src": "4376:75:6"
											},
											{
												"body": {
													"nativeSrc": "4546:28:6",
													"nodeType": "YulBlock",
													"src": "4546:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4563:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4563:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4566:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4566:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4556:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:6"
																},
																"nativeSrc": "4556:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4556:12:6"
															},
															"nativeSrc": "4556:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4556:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "4457:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4457:117:6"
											},
											{
												"body": {
													"nativeSrc": "4669:28:6",
													"nodeType": "YulBlock",
													"src": "4669:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4686:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4689:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4689:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4679:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4679:6:6"
																},
																"nativeSrc": "4679:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4679:12:6"
															},
															"nativeSrc": "4679:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4679:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "4580:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4580:117:6"
											},
											{
												"body": {
													"nativeSrc": "4792:28:6",
													"nodeType": "YulBlock",
													"src": "4792:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4809:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4809:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4812:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4812:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4802:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4802:6:6"
																},
																"nativeSrc": "4802:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4802:12:6"
															},
															"nativeSrc": "4802:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4802:12:6"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4703:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4703:117:6"
											},
											{
												"body": {
													"nativeSrc": "4915:28:6",
													"nodeType": "YulBlock",
													"src": "4915:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4932:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4932:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4935:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4935:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4925:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4925:6:6"
																},
																"nativeSrc": "4925:12:6",
																"nodeType": "YulFunctionCall",
																"src": "4925:12:6"
															},
															"nativeSrc": "4925:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "4925:12:6"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4826:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4826:117:6"
											},
											{
												"body": {
													"nativeSrc": "4977:152:6",
													"nodeType": "YulBlock",
													"src": "4977:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4994:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4994:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4997:77:6",
																		"nodeType": "YulLiteral",
																		"src": "4997:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4987:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4987:6:6"
																},
																"nativeSrc": "4987:88:6",
																"nodeType": "YulFunctionCall",
																"src": "4987:88:6"
															},
															"nativeSrc": "4987:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "4987:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5091:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5091:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5094:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5094:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5084:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5084:6:6"
																},
																"nativeSrc": "5084:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5084:15:6"
															},
															"nativeSrc": "5084:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5084:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5115:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5115:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5118:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5118:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5108:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5108:6:6"
																},
																"nativeSrc": "5108:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5108:15:6"
															},
															"nativeSrc": "5108:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5108:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4949:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4949:180:6"
											},
											{
												"body": {
													"nativeSrc": "5178:238:6",
													"nodeType": "YulBlock",
													"src": "5178:238:6",
													"statements": [
														{
															"nativeSrc": "5188:58:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5188:58:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5210:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5210:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5240:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5240:4:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5218:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "5218:21:6"
																		},
																		"nativeSrc": "5218:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5218:27:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5206:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5206:3:6"
																},
																"nativeSrc": "5206:40:6",
																"nodeType": "YulFunctionCall",
																"src": "5206:40:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5192:10:6",
																	"nodeType": "YulTypedName",
																	"src": "5192:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5357:22:6",
																"nodeType": "YulBlock",
																"src": "5357:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5359:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5359:16:6"
																			},
																			"nativeSrc": "5359:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5359:18:6"
																		},
																		"nativeSrc": "5359:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5359:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5300:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "5300:10:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5312:18:6",
																				"nodeType": "YulLiteral",
																				"src": "5312:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5297:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5297:2:6"
																		},
																		"nativeSrc": "5297:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5297:34:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5336:10:6",
																				"nodeType": "YulIdentifier",
																				"src": "5336:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5348:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5348:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5333:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "5333:2:6"
																		},
																		"nativeSrc": "5333:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5333:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5294:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5294:2:6"
																},
																"nativeSrc": "5294:62:6",
																"nodeType": "YulFunctionCall",
																"src": "5294:62:6"
															},
															"nativeSrc": "5291:88:6",
															"nodeType": "YulIf",
															"src": "5291:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5395:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5395:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5399:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "5399:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5388:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5388:6:6"
																},
																"nativeSrc": "5388:22:6",
																"nodeType": "YulFunctionCall",
																"src": "5388:22:6"
															},
															"nativeSrc": "5388:22:6",
															"nodeType": "YulExpressionStatement",
															"src": "5388:22:6"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5135:281:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5164:6:6",
														"nodeType": "YulTypedName",
														"src": "5164:6:6",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5172:4:6",
														"nodeType": "YulTypedName",
														"src": "5172:4:6",
														"type": ""
													}
												],
												"src": "5135:281:6"
											},
											{
												"body": {
													"nativeSrc": "5463:88:6",
													"nodeType": "YulBlock",
													"src": "5463:88:6",
													"statements": [
														{
															"nativeSrc": "5473:30:6",
															"nodeType": "YulAssignment",
															"src": "5473:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5483:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5483:18:6"
																},
																"nativeSrc": "5483:20:6",
																"nodeType": "YulFunctionCall",
																"src": "5483:20:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5473:6:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5532:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5532:6:6"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5540:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5540:4:6"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5512:19:6",
																	"nodeType": "YulIdentifier",
																	"src": "5512:19:6"
																},
																"nativeSrc": "5512:33:6",
																"nodeType": "YulFunctionCall",
																"src": "5512:33:6"
															},
															"nativeSrc": "5512:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "5512:33:6"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5422:129:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5447:4:6",
														"nodeType": "YulTypedName",
														"src": "5447:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5456:6:6",
														"nodeType": "YulTypedName",
														"src": "5456:6:6",
														"type": ""
													}
												],
												"src": "5422:129:6"
											},
											{
												"body": {
													"nativeSrc": "5624:241:6",
													"nodeType": "YulBlock",
													"src": "5624:241:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5729:22:6",
																"nodeType": "YulBlock",
																"src": "5729:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5731:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5731:16:6"
																			},
																			"nativeSrc": "5731:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5731:18:6"
																		},
																		"nativeSrc": "5731:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5731:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5701:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5701:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5709:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5709:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5698:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5698:2:6"
																},
																"nativeSrc": "5698:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5698:30:6"
															},
															"nativeSrc": "5695:56:6",
															"nodeType": "YulIf",
															"src": "5695:56:6"
														},
														{
															"nativeSrc": "5761:37:6",
															"nodeType": "YulAssignment",
															"src": "5761:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5791:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5791:6:6"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5769:21:6",
																	"nodeType": "YulIdentifier",
																	"src": "5769:21:6"
																},
																"nativeSrc": "5769:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5769:29:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5761:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5761:4:6"
																}
															]
														},
														{
															"nativeSrc": "5835:23:6",
															"nodeType": "YulAssignment",
															"src": "5835:23:6",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5847:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5847:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5853:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5853:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5843:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5843:3:6"
																},
																"nativeSrc": "5843:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5843:15:6"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5835:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5835:4:6"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5557:308:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5608:6:6",
														"nodeType": "YulTypedName",
														"src": "5608:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5619:4:6",
														"nodeType": "YulTypedName",
														"src": "5619:4:6",
														"type": ""
													}
												],
												"src": "5557:308:6"
											},
											{
												"body": {
													"nativeSrc": "5935:84:6",
													"nodeType": "YulBlock",
													"src": "5935:84:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5959:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5959:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5964:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5964:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5969:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5969:6:6"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5946:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "5946:12:6"
																},
																"nativeSrc": "5946:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5946:30:6"
															},
															"nativeSrc": "5946:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "5946:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5996:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5996:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6001:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6001:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5992:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5992:3:6"
																		},
																		"nativeSrc": "5992:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5992:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6010:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6010:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5985:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5985:6:6"
																},
																"nativeSrc": "5985:27:6",
																"nodeType": "YulFunctionCall",
																"src": "5985:27:6"
															},
															"nativeSrc": "5985:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "5985:27:6"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5871:148:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5917:3:6",
														"nodeType": "YulTypedName",
														"src": "5917:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5922:3:6",
														"nodeType": "YulTypedName",
														"src": "5922:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5927:6:6",
														"nodeType": "YulTypedName",
														"src": "5927:6:6",
														"type": ""
													}
												],
												"src": "5871:148:6"
											},
											{
												"body": {
													"nativeSrc": "6109:341:6",
													"nodeType": "YulBlock",
													"src": "6109:341:6",
													"statements": [
														{
															"nativeSrc": "6119:75:6",
															"nodeType": "YulAssignment",
															"src": "6119:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6186:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6186:6:6"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6144:41:6",
																			"nodeType": "YulIdentifier",
																			"src": "6144:41:6"
																		},
																		"nativeSrc": "6144:49:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6144:49:6"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6128:15:6",
																	"nodeType": "YulIdentifier",
																	"src": "6128:15:6"
																},
																"nativeSrc": "6128:66:6",
																"nodeType": "YulFunctionCall",
																"src": "6128:66:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6119:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6119:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6210:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6210:5:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6217:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6217:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6203:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6203:6:6"
																},
																"nativeSrc": "6203:21:6",
																"nodeType": "YulFunctionCall",
																"src": "6203:21:6"
															},
															"nativeSrc": "6203:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "6203:21:6"
														},
														{
															"nativeSrc": "6233:27:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6233:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6248:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6248:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6255:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6255:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6244:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6244:3:6"
																},
																"nativeSrc": "6244:16:6",
																"nodeType": "YulFunctionCall",
																"src": "6244:16:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6237:3:6",
																	"nodeType": "YulTypedName",
																	"src": "6237:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6298:83:6",
																"nodeType": "YulBlock",
																"src": "6298:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6300:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6300:77:6"
																			},
																			"nativeSrc": "6300:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6300:79:6"
																		},
																		"nativeSrc": "6300:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6300:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6279:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6279:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6284:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6284:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6275:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6275:3:6"
																		},
																		"nativeSrc": "6275:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6275:16:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6293:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6293:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6272:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6272:2:6"
																},
																"nativeSrc": "6272:25:6",
																"nodeType": "YulFunctionCall",
																"src": "6272:25:6"
															},
															"nativeSrc": "6269:112:6",
															"nodeType": "YulIf",
															"src": "6269:112:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6427:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6427:3:6"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6432:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6432:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6437:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6437:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6390:36:6",
																	"nodeType": "YulIdentifier",
																	"src": "6390:36:6"
																},
																"nativeSrc": "6390:54:6",
																"nodeType": "YulFunctionCall",
																"src": "6390:54:6"
															},
															"nativeSrc": "6390:54:6",
															"nodeType": "YulExpressionStatement",
															"src": "6390:54:6"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6025:425:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6082:3:6",
														"nodeType": "YulTypedName",
														"src": "6082:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6087:6:6",
														"nodeType": "YulTypedName",
														"src": "6087:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6095:3:6",
														"nodeType": "YulTypedName",
														"src": "6095:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6103:5:6",
														"nodeType": "YulTypedName",
														"src": "6103:5:6",
														"type": ""
													}
												],
												"src": "6025:425:6"
											},
											{
												"body": {
													"nativeSrc": "6532:278:6",
													"nodeType": "YulBlock",
													"src": "6532:278:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6581:83:6",
																"nodeType": "YulBlock",
																"src": "6581:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6583:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6583:77:6"
																			},
																			"nativeSrc": "6583:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6583:79:6"
																		},
																		"nativeSrc": "6583:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6583:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6560:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6560:6:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6568:4:6",
																						"nodeType": "YulLiteral",
																						"src": "6568:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6556:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "6556:3:6"
																				},
																				"nativeSrc": "6556:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6556:17:6"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6575:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "6575:3:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6552:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6552:3:6"
																		},
																		"nativeSrc": "6552:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6552:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6545:6:6"
																},
																"nativeSrc": "6545:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6545:35:6"
															},
															"nativeSrc": "6542:122:6",
															"nodeType": "YulIf",
															"src": "6542:122:6"
														},
														{
															"nativeSrc": "6673:34:6",
															"nodeType": "YulVariableDeclaration",
															"src": "6673:34:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6700:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6700:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6687:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6687:12:6"
																},
																"nativeSrc": "6687:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6687:20:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6677:6:6",
																	"nodeType": "YulTypedName",
																	"src": "6677:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6716:88:6",
															"nodeType": "YulAssignment",
															"src": "6716:88:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6777:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6777:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6785:4:6",
																				"nodeType": "YulLiteral",
																				"src": "6785:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6773:3:6"
																		},
																		"nativeSrc": "6773:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6773:17:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6792:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6792:6:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6800:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6800:3:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6725:47:6",
																	"nodeType": "YulIdentifier",
																	"src": "6725:47:6"
																},
																"nativeSrc": "6725:79:6",
																"nodeType": "YulFunctionCall",
																"src": "6725:79:6"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6716:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6716:5:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6470:340:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6510:6:6",
														"nodeType": "YulTypedName",
														"src": "6510:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6518:3:6",
														"nodeType": "YulTypedName",
														"src": "6518:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6526:5:6",
														"nodeType": "YulTypedName",
														"src": "6526:5:6",
														"type": ""
													}
												],
												"src": "6470:340:6"
											},
											{
												"body": {
													"nativeSrc": "6892:433:6",
													"nodeType": "YulBlock",
													"src": "6892:433:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6938:83:6",
																"nodeType": "YulBlock",
																"src": "6938:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6940:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6940:77:6"
																			},
																			"nativeSrc": "6940:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6940:79:6"
																		},
																		"nativeSrc": "6940:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6940:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6913:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6913:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6922:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6922:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6909:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:6"
																		},
																		"nativeSrc": "6909:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6909:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6934:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6934:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6905:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6905:3:6"
																},
																"nativeSrc": "6905:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6905:32:6"
															},
															"nativeSrc": "6902:119:6",
															"nodeType": "YulIf",
															"src": "6902:119:6"
														},
														{
															"nativeSrc": "7031:287:6",
															"nodeType": "YulBlock",
															"src": "7031:287:6",
															"statements": [
																{
																	"nativeSrc": "7046:45:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7046:45:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7077:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7077:9:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7088:1:6",
																						"nodeType": "YulLiteral",
																						"src": "7088:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7073:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7073:3:6"
																				},
																				"nativeSrc": "7073:17:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7073:17:6"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7060:12:6",
																			"nodeType": "YulIdentifier",
																			"src": "7060:12:6"
																		},
																		"nativeSrc": "7060:31:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7060:31:6"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7050:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7050:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7138:83:6",
																		"nodeType": "YulBlock",
																		"src": "7138:83:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7140:77:6",
																						"nodeType": "YulIdentifier",
																						"src": "7140:77:6"
																					},
																					"nativeSrc": "7140:79:6",
																					"nodeType": "YulFunctionCall",
																					"src": "7140:79:6"
																				},
																				"nativeSrc": "7140:79:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "7140:79:6"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7110:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7110:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7118:18:6",
																				"nodeType": "YulLiteral",
																				"src": "7118:18:6",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7107:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7107:2:6"
																		},
																		"nativeSrc": "7107:30:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7107:30:6"
																	},
																	"nativeSrc": "7104:117:6",
																	"nodeType": "YulIf",
																	"src": "7104:117:6"
																},
																{
																	"nativeSrc": "7235:73:6",
																	"nodeType": "YulAssignment",
																	"src": "7235:73:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7280:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7280:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7291:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7291:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7276:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7276:3:6"
																				},
																				"nativeSrc": "7276:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7276:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7300:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7300:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7245:30:6",
																			"nodeType": "YulIdentifier",
																			"src": "7245:30:6"
																		},
																		"nativeSrc": "7245:63:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7245:63:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7235:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7235:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "6816:509:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6862:9:6",
														"nodeType": "YulTypedName",
														"src": "6862:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6873:7:6",
														"nodeType": "YulTypedName",
														"src": "6873:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6885:6:6",
														"nodeType": "YulTypedName",
														"src": "6885:6:6",
														"type": ""
													}
												],
												"src": "6816:509:6"
											},
											{
												"body": {
													"nativeSrc": "7374:79:6",
													"nodeType": "YulBlock",
													"src": "7374:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7431:16:6",
																"nodeType": "YulBlock",
																"src": "7431:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7440:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7440:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7443:1:6",
																					"nodeType": "YulLiteral",
																					"src": "7443:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7433:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "7433:6:6"
																			},
																			"nativeSrc": "7433:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7433:12:6"
																		},
																		"nativeSrc": "7433:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7433:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7397:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7397:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7422:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "7422:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7404:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "7404:17:6"
																				},
																				"nativeSrc": "7404:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7404:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7394:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "7394:2:6"
																		},
																		"nativeSrc": "7394:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7394:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7387:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7387:6:6"
																},
																"nativeSrc": "7387:43:6",
																"nodeType": "YulFunctionCall",
																"src": "7387:43:6"
															},
															"nativeSrc": "7384:63:6",
															"nodeType": "YulIf",
															"src": "7384:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7331:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7367:5:6",
														"nodeType": "YulTypedName",
														"src": "7367:5:6",
														"type": ""
													}
												],
												"src": "7331:122:6"
											},
											{
												"body": {
													"nativeSrc": "7511:87:6",
													"nodeType": "YulBlock",
													"src": "7511:87:6",
													"statements": [
														{
															"nativeSrc": "7521:29:6",
															"nodeType": "YulAssignment",
															"src": "7521:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7543:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7543:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7530:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "7530:12:6"
																},
																"nativeSrc": "7530:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7530:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7521:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "7521:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7586:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "7586:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7559:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "7559:26:6"
																},
																"nativeSrc": "7559:33:6",
																"nodeType": "YulFunctionCall",
																"src": "7559:33:6"
															},
															"nativeSrc": "7559:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "7559:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7459:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7489:6:6",
														"nodeType": "YulTypedName",
														"src": "7489:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7497:3:6",
														"nodeType": "YulTypedName",
														"src": "7497:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7505:5:6",
														"nodeType": "YulTypedName",
														"src": "7505:5:6",
														"type": ""
													}
												],
												"src": "7459:139:6"
											},
											{
												"body": {
													"nativeSrc": "7670:263:6",
													"nodeType": "YulBlock",
													"src": "7670:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7716:83:6",
																"nodeType": "YulBlock",
																"src": "7716:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7718:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7718:77:6"
																			},
																			"nativeSrc": "7718:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7718:79:6"
																		},
																		"nativeSrc": "7718:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7718:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7691:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7691:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7700:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7700:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7687:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7687:3:6"
																		},
																		"nativeSrc": "7687:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7687:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7712:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7712:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7683:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7683:3:6"
																},
																"nativeSrc": "7683:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7683:32:6"
															},
															"nativeSrc": "7680:119:6",
															"nodeType": "YulIf",
															"src": "7680:119:6"
														},
														{
															"nativeSrc": "7809:117:6",
															"nodeType": "YulBlock",
															"src": "7809:117:6",
															"statements": [
																{
																	"nativeSrc": "7824:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7824:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7838:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7838:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7828:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7828:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7853:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7853:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7888:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7888:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7899:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7899:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7884:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7884:3:6"
																				},
																				"nativeSrc": "7884:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7884:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7908:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7908:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7863:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7863:20:6"
																		},
																		"nativeSrc": "7863:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7863:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7853:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7853:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "7604:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7640:9:6",
														"nodeType": "YulTypedName",
														"src": "7640:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7651:7:6",
														"nodeType": "YulTypedName",
														"src": "7651:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7663:6:6",
														"nodeType": "YulTypedName",
														"src": "7663:6:6",
														"type": ""
													}
												],
												"src": "7604:329:6"
											},
											{
												"body": {
													"nativeSrc": "8035:73:6",
													"nodeType": "YulBlock",
													"src": "8035:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8052:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8052:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8057:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8057:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8045:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8045:6:6"
																},
																"nativeSrc": "8045:19:6",
																"nodeType": "YulFunctionCall",
																"src": "8045:19:6"
															},
															"nativeSrc": "8045:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "8045:19:6"
														},
														{
															"nativeSrc": "8073:29:6",
															"nodeType": "YulAssignment",
															"src": "8073:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8092:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8092:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8097:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8097:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8088:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8088:3:6"
																},
																"nativeSrc": "8088:14:6",
																"nodeType": "YulFunctionCall",
																"src": "8088:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8073:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8073:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7939:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8007:3:6",
														"nodeType": "YulTypedName",
														"src": "8007:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8012:6:6",
														"nodeType": "YulTypedName",
														"src": "8012:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8023:11:6",
														"nodeType": "YulTypedName",
														"src": "8023:11:6",
														"type": ""
													}
												],
												"src": "7939:169:6"
											},
											{
												"body": {
													"nativeSrc": "8206:285:6",
													"nodeType": "YulBlock",
													"src": "8206:285:6",
													"statements": [
														{
															"nativeSrc": "8216:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8216:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8263:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8263:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "8230:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "8230:32:6"
																},
																"nativeSrc": "8230:39:6",
																"nodeType": "YulFunctionCall",
																"src": "8230:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8220:6:6",
																	"nodeType": "YulTypedName",
																	"src": "8220:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8278:78:6",
															"nodeType": "YulAssignment",
															"src": "8278:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8344:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8344:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8349:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8349:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8285:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "8285:58:6"
																},
																"nativeSrc": "8285:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8285:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8278:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8278:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8404:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8404:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8411:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8411:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8400:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8400:3:6"
																		},
																		"nativeSrc": "8400:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8400:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8418:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8418:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8423:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8423:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "8365:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "8365:34:6"
																},
																"nativeSrc": "8365:65:6",
																"nodeType": "YulFunctionCall",
																"src": "8365:65:6"
															},
															"nativeSrc": "8365:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "8365:65:6"
														},
														{
															"nativeSrc": "8439:46:6",
															"nodeType": "YulAssignment",
															"src": "8439:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8450:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8450:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8477:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8477:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "8455:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "8455:21:6"
																		},
																		"nativeSrc": "8455:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8455:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8446:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8446:3:6"
																},
																"nativeSrc": "8446:39:6",
																"nodeType": "YulFunctionCall",
																"src": "8446:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8439:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8439:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8114:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8187:5:6",
														"nodeType": "YulTypedName",
														"src": "8187:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8194:3:6",
														"nodeType": "YulTypedName",
														"src": "8194:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8202:3:6",
														"nodeType": "YulTypedName",
														"src": "8202:3:6",
														"type": ""
													}
												],
												"src": "8114:377:6"
											},
											{
												"body": {
													"nativeSrc": "8562:53:6",
													"nodeType": "YulBlock",
													"src": "8562:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8579:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "8579:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8602:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8602:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "8584:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "8584:17:6"
																		},
																		"nativeSrc": "8584:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8584:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8572:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8572:6:6"
																},
																"nativeSrc": "8572:37:6",
																"nodeType": "YulFunctionCall",
																"src": "8572:37:6"
															},
															"nativeSrc": "8572:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "8572:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "8497:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8550:5:6",
														"nodeType": "YulTypedName",
														"src": "8550:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8557:3:6",
														"nodeType": "YulTypedName",
														"src": "8557:3:6",
														"type": ""
													}
												],
												"src": "8497:118:6"
											},
											{
												"body": {
													"nativeSrc": "8767:277:6",
													"nodeType": "YulBlock",
													"src": "8767:277:6",
													"statements": [
														{
															"nativeSrc": "8777:26:6",
															"nodeType": "YulAssignment",
															"src": "8777:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8789:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8789:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8800:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8800:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8785:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8785:3:6"
																},
																"nativeSrc": "8785:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8785:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8777:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8777:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8824:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8824:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8835:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8835:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8820:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8820:3:6"
																		},
																		"nativeSrc": "8820:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8820:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8843:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8843:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8849:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8849:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8839:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8839:3:6"
																		},
																		"nativeSrc": "8839:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8839:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8813:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8813:6:6"
																},
																"nativeSrc": "8813:47:6",
																"nodeType": "YulFunctionCall",
																"src": "8813:47:6"
															},
															"nativeSrc": "8813:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "8813:47:6"
														},
														{
															"nativeSrc": "8869:86:6",
															"nodeType": "YulAssignment",
															"src": "8869:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8941:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8941:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8950:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "8950:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8877:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "8877:63:6"
																},
																"nativeSrc": "8877:78:6",
																"nodeType": "YulFunctionCall",
																"src": "8877:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8869:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8869:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9009:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "9009:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9022:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9022:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9033:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9033:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9018:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9018:3:6"
																		},
																		"nativeSrc": "9018:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9018:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8965:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8965:43:6"
																},
																"nativeSrc": "8965:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8965:72:6"
															},
															"nativeSrc": "8965:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8965:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nativeSrc": "8621:423:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8731:9:6",
														"nodeType": "YulTypedName",
														"src": "8731:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8743:6:6",
														"nodeType": "YulTypedName",
														"src": "8743:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8751:6:6",
														"nodeType": "YulTypedName",
														"src": "8751:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8762:4:6",
														"nodeType": "YulTypedName",
														"src": "8762:4:6",
														"type": ""
													}
												],
												"src": "8621:423:6"
											},
											{
												"body": {
													"nativeSrc": "9078:152:6",
													"nodeType": "YulBlock",
													"src": "9078:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9095:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9095:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9098:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9098:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9088:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9088:6:6"
																},
																"nativeSrc": "9088:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9088:88:6"
															},
															"nativeSrc": "9088:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9088:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9192:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9192:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9195:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9195:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9185:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9185:6:6"
																},
																"nativeSrc": "9185:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9185:15:6"
															},
															"nativeSrc": "9185:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9185:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9216:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9216:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9219:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9219:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9209:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9209:6:6"
																},
																"nativeSrc": "9209:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9209:15:6"
															},
															"nativeSrc": "9209:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9209:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9050:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9050:180:6"
											},
											{
												"body": {
													"nativeSrc": "9287:269:6",
													"nodeType": "YulBlock",
													"src": "9287:269:6",
													"statements": [
														{
															"nativeSrc": "9297:22:6",
															"nodeType": "YulAssignment",
															"src": "9297:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9311:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9311:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9317:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9307:3:6"
																},
																"nativeSrc": "9307:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9307:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9297:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9297:6:6"
																}
															]
														},
														{
															"nativeSrc": "9328:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "9328:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9358:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9358:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9364:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9364:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9354:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9354:3:6"
																},
																"nativeSrc": "9354:12:6",
																"nodeType": "YulFunctionCall",
																"src": "9354:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9332:18:6",
																	"nodeType": "YulTypedName",
																	"src": "9332:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9405:51:6",
																"nodeType": "YulBlock",
																"src": "9405:51:6",
																"statements": [
																	{
																		"nativeSrc": "9419:27:6",
																		"nodeType": "YulAssignment",
																		"src": "9419:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9433:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "9433:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9441:4:6",
																					"nodeType": "YulLiteral",
																					"src": "9441:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9429:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "9429:3:6"
																			},
																			"nativeSrc": "9429:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9429:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9419:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9419:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9385:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "9385:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9378:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9378:6:6"
																},
																"nativeSrc": "9378:26:6",
																"nodeType": "YulFunctionCall",
																"src": "9378:26:6"
															},
															"nativeSrc": "9375:81:6",
															"nodeType": "YulIf",
															"src": "9375:81:6"
														},
														{
															"body": {
																"nativeSrc": "9508:42:6",
																"nodeType": "YulBlock",
																"src": "9508:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9522:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "9522:16:6"
																			},
																			"nativeSrc": "9522:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9522:18:6"
																		},
																		"nativeSrc": "9522:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9522:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9472:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "9472:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9495:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "9495:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9503:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9503:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9492:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "9492:2:6"
																		},
																		"nativeSrc": "9492:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9492:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9469:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "9469:2:6"
																},
																"nativeSrc": "9469:38:6",
																"nodeType": "YulFunctionCall",
																"src": "9469:38:6"
															},
															"nativeSrc": "9466:84:6",
															"nodeType": "YulIf",
															"src": "9466:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9236:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9271:4:6",
														"nodeType": "YulTypedName",
														"src": "9271:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9280:6:6",
														"nodeType": "YulTypedName",
														"src": "9280:6:6",
														"type": ""
													}
												],
												"src": "9236:320:6"
											},
											{
												"body": {
													"nativeSrc": "9616:87:6",
													"nodeType": "YulBlock",
													"src": "9616:87:6",
													"statements": [
														{
															"nativeSrc": "9626:11:6",
															"nodeType": "YulAssignment",
															"src": "9626:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "9634:3:6",
																"nodeType": "YulIdentifier",
																"src": "9634:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9626:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9626:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9654:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9654:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "9657:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "9657:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9647:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9647:6:6"
																},
																"nativeSrc": "9647:14:6",
																"nodeType": "YulFunctionCall",
																"src": "9647:14:6"
															},
															"nativeSrc": "9647:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "9647:14:6"
														},
														{
															"nativeSrc": "9670:26:6",
															"nodeType": "YulAssignment",
															"src": "9670:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9688:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9688:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9691:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9691:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "9678:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "9678:9:6"
																},
																"nativeSrc": "9678:18:6",
																"nodeType": "YulFunctionCall",
																"src": "9678:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "9670:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9670:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "9562:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9603:3:6",
														"nodeType": "YulTypedName",
														"src": "9603:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9611:4:6",
														"nodeType": "YulTypedName",
														"src": "9611:4:6",
														"type": ""
													}
												],
												"src": "9562:141:6"
											},
											{
												"body": {
													"nativeSrc": "9753:49:6",
													"nodeType": "YulBlock",
													"src": "9753:49:6",
													"statements": [
														{
															"nativeSrc": "9763:33:6",
															"nodeType": "YulAssignment",
															"src": "9763:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9781:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "9781:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9788:2:6",
																				"nodeType": "YulLiteral",
																				"src": "9788:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9777:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9777:3:6"
																		},
																		"nativeSrc": "9777:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9777:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9793:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9793:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9773:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9773:3:6"
																},
																"nativeSrc": "9773:23:6",
																"nodeType": "YulFunctionCall",
																"src": "9773:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "9763:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9763:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "9709:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9736:5:6",
														"nodeType": "YulTypedName",
														"src": "9736:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9746:6:6",
														"nodeType": "YulTypedName",
														"src": "9746:6:6",
														"type": ""
													}
												],
												"src": "9709:93:6"
											},
											{
												"body": {
													"nativeSrc": "9861:54:6",
													"nodeType": "YulBlock",
													"src": "9861:54:6",
													"statements": [
														{
															"nativeSrc": "9871:37:6",
															"nodeType": "YulAssignment",
															"src": "9871:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "9896:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "9896:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "9902:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9902:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "9892:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9892:3:6"
																},
																"nativeSrc": "9892:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9892:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "9871:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "9871:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "9808:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "9836:4:6",
														"nodeType": "YulTypedName",
														"src": "9836:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "9842:5:6",
														"nodeType": "YulTypedName",
														"src": "9842:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "9852:8:6",
														"nodeType": "YulTypedName",
														"src": "9852:8:6",
														"type": ""
													}
												],
												"src": "9808:107:6"
											},
											{
												"body": {
													"nativeSrc": "9997:317:6",
													"nodeType": "YulBlock",
													"src": "9997:317:6",
													"statements": [
														{
															"nativeSrc": "10007:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10007:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "10028:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "10028:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10040:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10040:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10024:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10024:3:6"
																},
																"nativeSrc": "10024:18:6",
																"nodeType": "YulFunctionCall",
																"src": "10024:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "10011:9:6",
																	"nodeType": "YulTypedName",
																	"src": "10011:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10051:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10051:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10082:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10082:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10093:66:6",
																		"nodeType": "YulLiteral",
																		"src": "10093:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10063:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "10063:18:6"
																},
																"nativeSrc": "10063:97:6",
																"nodeType": "YulFunctionCall",
																"src": "10063:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "10055:4:6",
																	"nodeType": "YulTypedName",
																	"src": "10055:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10169:51:6",
															"nodeType": "YulAssignment",
															"src": "10169:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "10200:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "10200:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "10211:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "10211:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "10181:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "10181:18:6"
																},
																"nativeSrc": "10181:39:6",
																"nodeType": "YulFunctionCall",
																"src": "10181:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "10169:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "10169:8:6"
																}
															]
														},
														{
															"nativeSrc": "10229:30:6",
															"nodeType": "YulAssignment",
															"src": "10229:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10242:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10242:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "10253:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10253:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "10249:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10249:3:6"
																		},
																		"nativeSrc": "10249:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10249:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10238:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10238:3:6"
																},
																"nativeSrc": "10238:21:6",
																"nodeType": "YulFunctionCall",
																"src": "10238:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10229:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "10229:5:6"
																}
															]
														},
														{
															"nativeSrc": "10268:40:6",
															"nodeType": "YulAssignment",
															"src": "10268:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10281:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "10281:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "10292:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "10292:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "10302:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "10302:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10288:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "10288:3:6"
																		},
																		"nativeSrc": "10288:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10288:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10278:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10278:2:6"
																},
																"nativeSrc": "10278:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10278:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "10268:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10268:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "9921:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9958:5:6",
														"nodeType": "YulTypedName",
														"src": "9958:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "9965:10:6",
														"nodeType": "YulTypedName",
														"src": "9965:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "9977:8:6",
														"nodeType": "YulTypedName",
														"src": "9977:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "9990:6:6",
														"nodeType": "YulTypedName",
														"src": "9990:6:6",
														"type": ""
													}
												],
												"src": "9921:393:6"
											},
											{
												"body": {
													"nativeSrc": "10352:28:6",
													"nodeType": "YulBlock",
													"src": "10352:28:6",
													"statements": [
														{
															"nativeSrc": "10362:12:6",
															"nodeType": "YulAssignment",
															"src": "10362:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "10369:5:6",
																"nodeType": "YulIdentifier",
																"src": "10369:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10362:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10362:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "10320:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10338:5:6",
														"nodeType": "YulTypedName",
														"src": "10338:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10348:3:6",
														"nodeType": "YulTypedName",
														"src": "10348:3:6",
														"type": ""
													}
												],
												"src": "10320:60:6"
											},
											{
												"body": {
													"nativeSrc": "10446:82:6",
													"nodeType": "YulBlock",
													"src": "10446:82:6",
													"statements": [
														{
															"nativeSrc": "10456:66:6",
															"nodeType": "YulAssignment",
															"src": "10456:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10514:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "10514:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "10496:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "10496:17:6"
																				},
																				"nativeSrc": "10496:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10496:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10487:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "10487:8:6"
																		},
																		"nativeSrc": "10487:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10487:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10469:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10469:17:6"
																},
																"nativeSrc": "10469:53:6",
																"nodeType": "YulFunctionCall",
																"src": "10469:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10456:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "10456:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "10386:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10426:5:6",
														"nodeType": "YulTypedName",
														"src": "10426:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10436:9:6",
														"nodeType": "YulTypedName",
														"src": "10436:9:6",
														"type": ""
													}
												],
												"src": "10386:142:6"
											},
											{
												"body": {
													"nativeSrc": "10581:28:6",
													"nodeType": "YulBlock",
													"src": "10581:28:6",
													"statements": [
														{
															"nativeSrc": "10591:12:6",
															"nodeType": "YulAssignment",
															"src": "10591:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "10598:5:6",
																"nodeType": "YulIdentifier",
																"src": "10598:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10591:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10591:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "10534:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10567:5:6",
														"nodeType": "YulTypedName",
														"src": "10567:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10577:3:6",
														"nodeType": "YulTypedName",
														"src": "10577:3:6",
														"type": ""
													}
												],
												"src": "10534:75:6"
											},
											{
												"body": {
													"nativeSrc": "10691:193:6",
													"nodeType": "YulBlock",
													"src": "10691:193:6",
													"statements": [
														{
															"nativeSrc": "10701:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10701:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "10756:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "10756:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "10725:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "10725:30:6"
																},
																"nativeSrc": "10725:39:6",
																"nodeType": "YulFunctionCall",
																"src": "10725:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "10705:16:6",
																	"nodeType": "YulTypedName",
																	"src": "10705:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10780:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "10780:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "10820:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "10820:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "10814:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "10814:5:6"
																				},
																				"nativeSrc": "10814:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10814:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "10827:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "10827:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "10859:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "10859:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "10835:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "10835:23:6"
																				},
																				"nativeSrc": "10835:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10835:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "10786:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "10786:27:6"
																		},
																		"nativeSrc": "10786:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10786:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "10773:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10773:6:6"
																},
																"nativeSrc": "10773:105:6",
																"nodeType": "YulFunctionCall",
																"src": "10773:105:6"
															},
															"nativeSrc": "10773:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "10773:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "10615:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10668:4:6",
														"nodeType": "YulTypedName",
														"src": "10668:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "10674:6:6",
														"nodeType": "YulTypedName",
														"src": "10674:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "10682:7:6",
														"nodeType": "YulTypedName",
														"src": "10682:7:6",
														"type": ""
													}
												],
												"src": "10615:269:6"
											},
											{
												"body": {
													"nativeSrc": "10939:24:6",
													"nodeType": "YulBlock",
													"src": "10939:24:6",
													"statements": [
														{
															"nativeSrc": "10949:8:6",
															"nodeType": "YulAssignment",
															"src": "10949:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "10956:1:6",
																"nodeType": "YulLiteral",
																"src": "10956:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "10949:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10949:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "10890:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10935:3:6",
														"nodeType": "YulTypedName",
														"src": "10935:3:6",
														"type": ""
													}
												],
												"src": "10890:73:6"
											},
											{
												"body": {
													"nativeSrc": "11022:136:6",
													"nodeType": "YulBlock",
													"src": "11022:136:6",
													"statements": [
														{
															"nativeSrc": "11032:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11032:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "11046:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "11046:30:6"
																},
																"nativeSrc": "11046:32:6",
																"nodeType": "YulFunctionCall",
																"src": "11046:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "11036:6:6",
																	"nodeType": "YulTypedName",
																	"src": "11036:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11131:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11131:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "11137:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11137:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "11145:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11145:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "11087:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11087:43:6"
																},
																"nativeSrc": "11087:65:6",
																"nodeType": "YulFunctionCall",
																"src": "11087:65:6"
															},
															"nativeSrc": "11087:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "11087:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "10969:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11008:4:6",
														"nodeType": "YulTypedName",
														"src": "11008:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "11014:6:6",
														"nodeType": "YulTypedName",
														"src": "11014:6:6",
														"type": ""
													}
												],
												"src": "10969:189:6"
											},
											{
												"body": {
													"nativeSrc": "11214:136:6",
													"nodeType": "YulBlock",
													"src": "11214:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11281:63:6",
																"nodeType": "YulBlock",
																"src": "11281:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11325:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "11325:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11332:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11332:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "11295:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "11295:29:6"
																			},
																			"nativeSrc": "11295:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11295:39:6"
																		},
																		"nativeSrc": "11295:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11295:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "11234:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11234:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11241:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11241:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "11231:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11231:2:6"
																},
																"nativeSrc": "11231:14:6",
																"nodeType": "YulFunctionCall",
																"src": "11231:14:6"
															},
															"nativeSrc": "11224:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "11246:26:6",
																"nodeType": "YulBlock",
																"src": "11246:26:6",
																"statements": [
																	{
																		"nativeSrc": "11248:22:6",
																		"nodeType": "YulAssignment",
																		"src": "11248:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "11261:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "11261:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "11268:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11257:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11257:3:6"
																			},
																			"nativeSrc": "11257:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11257:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "11248:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11248:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "11228:2:6",
																"nodeType": "YulBlock",
																"src": "11228:2:6",
																"statements": []
															},
															"src": "11224:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "11164:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "11202:5:6",
														"nodeType": "YulTypedName",
														"src": "11202:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11209:3:6",
														"nodeType": "YulTypedName",
														"src": "11209:3:6",
														"type": ""
													}
												],
												"src": "11164:186:6"
											},
											{
												"body": {
													"nativeSrc": "11435:464:6",
													"nodeType": "YulBlock",
													"src": "11435:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "11461:431:6",
																"nodeType": "YulBlock",
																"src": "11461:431:6",
																"statements": [
																	{
																		"nativeSrc": "11475:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11475:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "11523:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "11523:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "11491:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "11491:31:6"
																			},
																			"nativeSrc": "11491:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11491:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "11479:8:6",
																				"nodeType": "YulTypedName",
																				"src": "11479:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "11542:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "11542:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "11565:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "11565:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "11593:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "11593:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "11575:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "11575:17:6"
																					},
																					"nativeSrc": "11575:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11575:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "11561:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11561:3:6"
																			},
																			"nativeSrc": "11561:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11561:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "11546:11:6",
																				"nodeType": "YulTypedName",
																				"src": "11546:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11762:27:6",
																			"nodeType": "YulBlock",
																			"src": "11762:27:6",
																			"statements": [
																				{
																					"nativeSrc": "11764:23:6",
																					"nodeType": "YulAssignment",
																					"src": "11764:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "11779:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "11779:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "11764:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "11764:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "11746:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "11746:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11758:2:6",
																					"nodeType": "YulLiteral",
																					"src": "11758:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "11743:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "11743:2:6"
																			},
																			"nativeSrc": "11743:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11743:18:6"
																		},
																		"nativeSrc": "11740:49:6",
																		"nodeType": "YulIf",
																		"src": "11740:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "11831:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "11831:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "11848:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "11848:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "11876:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "11876:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "11858:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "11858:17:6"
																							},
																							"nativeSrc": "11858:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "11858:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11844:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "11844:3:6"
																					},
																					"nativeSrc": "11844:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "11844:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "11802:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "11802:28:6"
																			},
																			"nativeSrc": "11802:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11802:80:6"
																		},
																		"nativeSrc": "11802:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11802:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11452:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11452:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11457:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11449:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11449:2:6"
																},
																"nativeSrc": "11449:11:6",
																"nodeType": "YulFunctionCall",
																"src": "11449:11:6"
															},
															"nativeSrc": "11446:446:6",
															"nodeType": "YulIf",
															"src": "11446:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "11356:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11411:5:6",
														"nodeType": "YulTypedName",
														"src": "11411:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11418:3:6",
														"nodeType": "YulTypedName",
														"src": "11418:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11423:10:6",
														"nodeType": "YulTypedName",
														"src": "11423:10:6",
														"type": ""
													}
												],
												"src": "11356:543:6"
											},
											{
												"body": {
													"nativeSrc": "11968:54:6",
													"nodeType": "YulBlock",
													"src": "11968:54:6",
													"statements": [
														{
															"nativeSrc": "11978:37:6",
															"nodeType": "YulAssignment",
															"src": "11978:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12003:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12003:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12009:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12009:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "11999:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11999:3:6"
																},
																"nativeSrc": "11999:16:6",
																"nodeType": "YulFunctionCall",
																"src": "11999:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11978:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "11978:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "11905:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11943:4:6",
														"nodeType": "YulTypedName",
														"src": "11943:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11949:5:6",
														"nodeType": "YulTypedName",
														"src": "11949:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11959:8:6",
														"nodeType": "YulTypedName",
														"src": "11959:8:6",
														"type": ""
													}
												],
												"src": "11905:117:6"
											},
											{
												"body": {
													"nativeSrc": "12079:118:6",
													"nodeType": "YulBlock",
													"src": "12079:118:6",
													"statements": [
														{
															"nativeSrc": "12089:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12089:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12138:1:6",
																						"nodeType": "YulLiteral",
																						"src": "12138:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "12141:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "12141:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "12134:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12134:3:6"
																				},
																				"nativeSrc": "12134:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12134:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "12153:1:6",
																						"nodeType": "YulLiteral",
																						"src": "12153:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12149:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12149:3:6"
																				},
																				"nativeSrc": "12149:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12149:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "12105:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "12105:28:6"
																		},
																		"nativeSrc": "12105:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12105:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "12101:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:6"
																},
																"nativeSrc": "12101:56:6",
																"nodeType": "YulFunctionCall",
																"src": "12101:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12093:4:6",
																	"nodeType": "YulTypedName",
																	"src": "12093:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12166:25:6",
															"nodeType": "YulAssignment",
															"src": "12166:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12180:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12180:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "12186:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12186:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12176:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12176:3:6"
																},
																"nativeSrc": "12176:15:6",
																"nodeType": "YulFunctionCall",
																"src": "12176:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12166:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12166:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "12028:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12056:4:6",
														"nodeType": "YulTypedName",
														"src": "12056:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "12062:5:6",
														"nodeType": "YulTypedName",
														"src": "12062:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12072:6:6",
														"nodeType": "YulTypedName",
														"src": "12072:6:6",
														"type": ""
													}
												],
												"src": "12028:169:6"
											},
											{
												"body": {
													"nativeSrc": "12283:214:6",
													"nodeType": "YulBlock",
													"src": "12283:214:6",
													"statements": [
														{
															"nativeSrc": "12416:37:6",
															"nodeType": "YulAssignment",
															"src": "12416:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12443:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12443:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "12449:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12449:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "12424:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "12424:18:6"
																},
																"nativeSrc": "12424:29:6",
																"nodeType": "YulFunctionCall",
																"src": "12424:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12416:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12416:4:6"
																}
															]
														},
														{
															"nativeSrc": "12462:29:6",
															"nodeType": "YulAssignment",
															"src": "12462:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12473:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12473:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12483:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12483:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12486:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "12486:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "12479:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12479:3:6"
																		},
																		"nativeSrc": "12479:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12479:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12470:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12470:2:6"
																},
																"nativeSrc": "12470:21:6",
																"nodeType": "YulFunctionCall",
																"src": "12470:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12462:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12462:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12202:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12264:4:6",
														"nodeType": "YulTypedName",
														"src": "12264:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12270:3:6",
														"nodeType": "YulTypedName",
														"src": "12270:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12278:4:6",
														"nodeType": "YulTypedName",
														"src": "12278:4:6",
														"type": ""
													}
												],
												"src": "12202:295:6"
											},
											{
												"body": {
													"nativeSrc": "12594:1303:6",
													"nodeType": "YulBlock",
													"src": "12594:1303:6",
													"statements": [
														{
															"nativeSrc": "12605:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12605:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12652:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "12652:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "12619:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "12619:32:6"
																},
																"nativeSrc": "12619:37:6",
																"nodeType": "YulFunctionCall",
																"src": "12619:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12609:6:6",
																	"nodeType": "YulTypedName",
																	"src": "12609:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12741:22:6",
																"nodeType": "YulBlock",
																"src": "12741:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12743:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "12743:16:6"
																			},
																			"nativeSrc": "12743:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12743:18:6"
																		},
																		"nativeSrc": "12743:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12743:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12713:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12713:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12721:18:6",
																		"nodeType": "YulLiteral",
																		"src": "12721:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12710:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "12710:2:6"
																},
																"nativeSrc": "12710:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12710:30:6"
															},
															"nativeSrc": "12707:56:6",
															"nodeType": "YulIf",
															"src": "12707:56:6"
														},
														{
															"nativeSrc": "12773:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12773:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "12819:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "12819:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "12813:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "12813:5:6"
																		},
																		"nativeSrc": "12813:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12813:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "12787:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "12787:25:6"
																},
																"nativeSrc": "12787:38:6",
																"nodeType": "YulFunctionCall",
																"src": "12787:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "12777:6:6",
																	"nodeType": "YulTypedName",
																	"src": "12777:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12918:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "12918:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "12924:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12924:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12932:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12932:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "12872:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "12872:45:6"
																},
																"nativeSrc": "12872:67:6",
																"nodeType": "YulFunctionCall",
																"src": "12872:67:6"
															},
															"nativeSrc": "12872:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "12872:67:6"
														},
														{
															"nativeSrc": "12949:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "12949:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "12966:1:6",
																"nodeType": "YulLiteral",
																"src": "12966:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12953:9:6",
																	"nodeType": "YulTypedName",
																	"src": "12953:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12977:17:6",
															"nodeType": "YulAssignment",
															"src": "12977:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "12990:4:6",
																"nodeType": "YulLiteral",
																"src": "12990:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12977:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "12977:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13041:611:6",
																		"nodeType": "YulBlock",
																		"src": "13041:611:6",
																		"statements": [
																			{
																				"nativeSrc": "13055:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13055:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13074:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "13074:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13086:4:6",
																									"nodeType": "YulLiteral",
																									"src": "13086:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13082:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "13082:3:6"
																							},
																							"nativeSrc": "13082:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "13082:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13070:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "13070:3:6"
																					},
																					"nativeSrc": "13070:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13070:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13059:7:6",
																						"nodeType": "YulTypedName",
																						"src": "13059:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13106:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13106:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13152:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "13152:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "13120:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "13120:31:6"
																					},
																					"nativeSrc": "13120:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13120:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13110:6:6",
																						"nodeType": "YulTypedName",
																						"src": "13110:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13170:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13170:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13179:1:6",
																					"nodeType": "YulLiteral",
																					"src": "13179:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13174:1:6",
																						"nodeType": "YulTypedName",
																						"src": "13174:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13238:163:6",
																					"nodeType": "YulBlock",
																					"src": "13238:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13263:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "13263:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13281:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "13281:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13286:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "13286:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13277:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "13277:3:6"
																												},
																												"nativeSrc": "13277:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "13277:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13271:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "13271:5:6"
																										},
																										"nativeSrc": "13271:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13271:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13256:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "13256:6:6"
																								},
																								"nativeSrc": "13256:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13256:42:6"
																							},
																							"nativeSrc": "13256:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "13256:42:6"
																						},
																						{
																							"nativeSrc": "13315:24:6",
																							"nodeType": "YulAssignment",
																							"src": "13315:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13329:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "13329:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13337:1:6",
																										"nodeType": "YulLiteral",
																										"src": "13337:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13325:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "13325:3:6"
																								},
																								"nativeSrc": "13325:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13325:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13315:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "13315:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13356:31:6",
																							"nodeType": "YulAssignment",
																							"src": "13356:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13373:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "13373:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13384:2:6",
																										"nodeType": "YulLiteral",
																										"src": "13384:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13369:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "13369:3:6"
																								},
																								"nativeSrc": "13369:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13369:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13356:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "13356:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13204:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "13204:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13207:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "13207:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13201:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "13201:2:6"
																					},
																					"nativeSrc": "13201:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13201:14:6"
																				},
																				"nativeSrc": "13193:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13216:21:6",
																					"nodeType": "YulBlock",
																					"src": "13216:21:6",
																					"statements": [
																						{
																							"nativeSrc": "13218:17:6",
																							"nodeType": "YulAssignment",
																							"src": "13218:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13227:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "13227:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13230:4:6",
																										"nodeType": "YulLiteral",
																										"src": "13230:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13223:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "13223:3:6"
																								},
																								"nativeSrc": "13223:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13223:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13218:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "13218:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13197:3:6",
																					"nodeType": "YulBlock",
																					"src": "13197:3:6",
																					"statements": []
																				},
																				"src": "13193:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "13437:156:6",
																					"nodeType": "YulBlock",
																					"src": "13437:156:6",
																					"statements": [
																						{
																							"nativeSrc": "13455:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13455:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13482:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "13482:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13487:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "13487:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13478:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "13478:3:6"
																										},
																										"nativeSrc": "13478:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13478:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13472:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13472:5:6"
																								},
																								"nativeSrc": "13472:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13472:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13459:9:6",
																									"nodeType": "YulTypedName",
																									"src": "13459:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13522:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "13522:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13549:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "13549:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "13564:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "13564:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "13572:4:6",
																														"nodeType": "YulLiteral",
																														"src": "13572:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "13560:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "13560:3:6"
																												},
																												"nativeSrc": "13560:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "13560:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "13530:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "13530:18:6"
																										},
																										"nativeSrc": "13530:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13530:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13515:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "13515:6:6"
																								},
																								"nativeSrc": "13515:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13515:64:6"
																							},
																							"nativeSrc": "13515:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "13515:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13420:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "13420:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13429:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "13429:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13417:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "13417:2:6"
																					},
																					"nativeSrc": "13417:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13417:19:6"
																				},
																				"nativeSrc": "13414:179:6",
																				"nodeType": "YulIf",
																				"src": "13414:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13613:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "13613:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "13627:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "13627:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "13635:1:6",
																											"nodeType": "YulLiteral",
																											"src": "13635:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "13623:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "13623:3:6"
																									},
																									"nativeSrc": "13623:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "13623:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13639:1:6",
																									"nodeType": "YulLiteral",
																									"src": "13639:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13619:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "13619:3:6"
																							},
																							"nativeSrc": "13619:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "13619:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13606:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13606:6:6"
																					},
																					"nativeSrc": "13606:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13606:36:6"
																				},
																				"nativeSrc": "13606:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "13606:36:6"
																			}
																		]
																	},
																	"nativeSrc": "13034:618:6",
																	"nodeType": "YulCase",
																	"src": "13034:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13039:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13039:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13669:222:6",
																		"nodeType": "YulBlock",
																		"src": "13669:222:6",
																		"statements": [
																			{
																				"nativeSrc": "13683:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13683:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13696:1:6",
																					"nodeType": "YulLiteral",
																					"src": "13696:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13687:5:6",
																						"nodeType": "YulTypedName",
																						"src": "13687:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13720:67:6",
																					"nodeType": "YulBlock",
																					"src": "13720:67:6",
																					"statements": [
																						{
																							"nativeSrc": "13738:35:6",
																							"nodeType": "YulAssignment",
																							"src": "13738:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13757:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "13757:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13762:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "13762:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13753:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "13753:3:6"
																										},
																										"nativeSrc": "13753:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "13753:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13747:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13747:5:6"
																								},
																								"nativeSrc": "13747:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "13747:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13738:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13738:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13713:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "13713:6:6"
																				},
																				"nativeSrc": "13710:77:6",
																				"nodeType": "YulIf",
																				"src": "13710:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13807:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "13807:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13866:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "13866:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13873:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "13873:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13813:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "13813:52:6"
																							},
																							"nativeSrc": "13813:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "13813:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13800:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13800:6:6"
																					},
																					"nativeSrc": "13800:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "13800:81:6"
																				},
																				"nativeSrc": "13800:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "13800:81:6"
																			}
																		]
																	},
																	"nativeSrc": "13661:230:6",
																	"nodeType": "YulCase",
																	"src": "13661:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "13014:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13014:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13022:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13022:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "13011:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "13011:2:6"
																},
																"nativeSrc": "13011:14:6",
																"nodeType": "YulFunctionCall",
																"src": "13011:14:6"
															},
															"nativeSrc": "13004:887:6",
															"nodeType": "YulSwitch",
															"src": "13004:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12502:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12583:4:6",
														"nodeType": "YulTypedName",
														"src": "12583:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12589:3:6",
														"nodeType": "YulTypedName",
														"src": "12589:3:6",
														"type": ""
													}
												],
												"src": "12502:1395:6"
											},
											{
												"body": {
													"nativeSrc": "14021:195:6",
													"nodeType": "YulBlock",
													"src": "14021:195:6",
													"statements": [
														{
															"nativeSrc": "14031:26:6",
															"nodeType": "YulAssignment",
															"src": "14031:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14043:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14043:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14054:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14054:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14039:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14039:3:6"
																},
																"nativeSrc": "14039:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14039:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14031:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14031:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14078:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14078:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14089:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14089:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14074:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14074:3:6"
																		},
																		"nativeSrc": "14074:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14074:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14097:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "14097:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14103:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14103:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14093:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14093:3:6"
																		},
																		"nativeSrc": "14093:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14093:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14067:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "14067:6:6"
																},
																"nativeSrc": "14067:47:6",
																"nodeType": "YulFunctionCall",
																"src": "14067:47:6"
															},
															"nativeSrc": "14067:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "14067:47:6"
														},
														{
															"nativeSrc": "14123:86:6",
															"nodeType": "YulAssignment",
															"src": "14123:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14195:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14195:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "14204:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "14204:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14131:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "14131:63:6"
																},
																"nativeSrc": "14131:78:6",
																"nodeType": "YulFunctionCall",
																"src": "14131:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14123:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14123:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13903:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13993:9:6",
														"nodeType": "YulTypedName",
														"src": "13993:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14005:6:6",
														"nodeType": "YulTypedName",
														"src": "14005:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14016:4:6",
														"nodeType": "YulTypedName",
														"src": "14016:4:6",
														"type": ""
													}
												],
												"src": "13903:313:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct Candidatos.Candidato -> struct Candidatos.Candidato\n    function abi_encode_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // name\n\n            let memberValue0 := mload(add(value, 0x00))\n\n            mstore(add(pos, 0x00), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // votos\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Candidatos.Candidato[] -> struct Candidatos.Candidato[]\n    function abi_encode_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Candidato_$793_memory_ptr_to_t_struct$_Candidato_$793_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061003f575f3560e01c8063198cc69114610043578063503c560f146100615780638f023f851461007d575b5f80fd5b61004b6100ae565b6040516100589190610469565b60405180910390f35b61007b600480360381019061007691906105c6565b6101a2565b005b61009760048036038101906100929190610637565b610238565b6040516100a59291906106b9565b60405180910390f35b60605f805480602002602001604051908101604052809291908181526020015f905b82821015610199578382905f5260205f2090600202016040518060400160405290815f8201805461010090610714565b80601f016020809104026020016040519081016040528092919081815260200182805461012c90610714565b80156101775780601f1061014e57610100808354040283529160200191610177565b820191905f5260205f20905b81548152906001019060200180831161015a57829003601f168201915b50505050508152602001600182015481525050815260200190600101906100d0565b50505050905090565b5f60405180604001604052808381526020015f815250908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f0190816101f191906108e1565b506020820151816001015550507f566c2d39711b082cc685ade507dee6291f47044333d9aba4037034cdc3cfac9e8160405161022d91906109b0565b60405180910390a150565b5f8181548110610246575f80fd5b905f5260205f2090600202015f91509050805f01805461026590610714565b80601f016020809104026020016040519081016040528092919081815260200182805461029190610714565b80156102dc5780601f106102b3576101008083540402835291602001916102dc565b820191905f5260205f20905b8154815290600101906020018083116102bf57829003601f168201915b5050505050908060010154905082565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61035782610315565b610361818561031f565b935061037181856020860161032f565b61037a8161033d565b840191505092915050565b5f819050919050565b61039781610385565b82525050565b5f604083015f8301518482035f8601526103b7828261034d565b91505060208301516103cc602086018261038e565b508091505092915050565b5f6103e2838361039d565b905092915050565b5f602082019050919050565b5f610400826102ec565b61040a81856102f6565b93508360208202850161041c85610306565b805f5b85811015610457578484038952815161043885826103d7565b9450610443836103ea565b925060208a0199505060018101905061041f565b50829750879550505050505092915050565b5f6020820190508181035f83015261048181846103f6565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6104d88261033d565b810181811067ffffffffffffffff821117156104f7576104f66104a2565b5b80604052505050565b5f610509610489565b905061051582826104cf565b919050565b5f67ffffffffffffffff821115610534576105336104a2565b5b61053d8261033d565b9050602081019050919050565b828183375f83830152505050565b5f61056a6105658461051a565b610500565b9050828152602081018484840111156105865761058561049e565b5b61059184828561054a565b509392505050565b5f82601f8301126105ad576105ac61049a565b5b81356105bd848260208601610558565b91505092915050565b5f602082840312156105db576105da610492565b5b5f82013567ffffffffffffffff8111156105f8576105f7610496565b5b61060484828501610599565b91505092915050565b61061681610385565b8114610620575f80fd5b50565b5f813590506106318161060d565b92915050565b5f6020828403121561064c5761064b610492565b5b5f61065984828501610623565b91505092915050565b5f82825260208201905092915050565b5f61067c82610315565b6106868185610662565b935061069681856020860161032f565b61069f8161033d565b840191505092915050565b6106b381610385565b82525050565b5f6040820190508181035f8301526106d18185610672565b90506106e060208301846106aa565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061072b57607f821691505b60208210810361073e5761073d6106e7565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026107a07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610765565b6107aa8683610765565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6107e56107e06107db84610385565b6107c2565b610385565b9050919050565b5f819050919050565b6107fe836107cb565b61081261080a826107ec565b848454610771565b825550505050565b5f90565b61082661081a565b6108318184846107f5565b505050565b5b81811015610854576108495f8261081e565b600181019050610837565b5050565b601f8211156108995761086a81610744565b61087384610756565b81016020851015610882578190505b61089661088e85610756565b830182610836565b50505b505050565b5f82821c905092915050565b5f6108b95f198460080261089e565b1980831691505092915050565b5f6108d183836108aa565b9150826002028217905092915050565b6108ea82610315565b67ffffffffffffffff811115610903576109026104a2565b5b61090d8254610714565b610918828285610858565b5f60209050601f831160018114610949575f8415610937578287015190505b61094185826108c6565b8655506109a8565b601f19841661095786610744565b5f5b8281101561097e57848901518255600182019150602085019450602081019050610959565b8683101561099b5784890151610997601f8916826108aa565b8355505b6001600288020188555050505b505050505050565b5f6020820190508181035f8301526109c88184610672565b90509291505056fea264697066735822122072265078d568fd3eed930ff89df0eacbd131fad9a98f6d722efc76b280b53dba64736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x198CC691 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x503C560F EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0x8F023F85 EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0xAE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x469 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x97 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x637 JUMP JUMPDEST PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP3 SWAP2 SWAP1 PUSH2 0x6B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x199 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD DUP1 SLOAD PUSH2 0x100 SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x12C SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x177 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x14E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x177 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x15A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD0 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SWAP1 DUP2 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x8E1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP PUSH32 0x566C2D39711B082CC685ADE507DEE6291F47044333D9ABA4037034CDC3CFAC9E DUP2 PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x9B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x265 SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x291 SWAP1 PUSH2 0x714 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x357 DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x361 DUP2 DUP6 PUSH2 0x31F JUMP JUMPDEST SWAP4 POP PUSH2 0x371 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x32F JUMP JUMPDEST PUSH2 0x37A DUP2 PUSH2 0x33D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x397 DUP2 PUSH2 0x385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP4 ADD PUSH0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH0 DUP7 ADD MSTORE PUSH2 0x3B7 DUP3 DUP3 PUSH2 0x34D JUMP JUMPDEST SWAP2 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x3CC PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x38E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3E2 DUP4 DUP4 PUSH2 0x39D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x400 DUP3 PUSH2 0x2EC JUMP JUMPDEST PUSH2 0x40A DUP2 DUP6 PUSH2 0x2F6 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x41C DUP6 PUSH2 0x306 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x457 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x438 DUP6 DUP3 PUSH2 0x3D7 JUMP JUMPDEST SWAP5 POP PUSH2 0x443 DUP4 PUSH2 0x3EA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x41F JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x481 DUP2 DUP5 PUSH2 0x3F6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x4D8 DUP3 PUSH2 0x33D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x4F7 JUMPI PUSH2 0x4F6 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x509 PUSH2 0x489 JUMP JUMPDEST SWAP1 POP PUSH2 0x515 DUP3 DUP3 PUSH2 0x4CF JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x534 JUMPI PUSH2 0x533 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH2 0x53D DUP3 PUSH2 0x33D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x56A PUSH2 0x565 DUP5 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x500 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x586 JUMPI PUSH2 0x585 PUSH2 0x49E JUMP JUMPDEST JUMPDEST PUSH2 0x591 DUP5 DUP3 DUP6 PUSH2 0x54A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x5AD JUMPI PUSH2 0x5AC PUSH2 0x49A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x5BD DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x558 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DB JUMPI PUSH2 0x5DA PUSH2 0x492 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5F8 JUMPI PUSH2 0x5F7 PUSH2 0x496 JUMP JUMPDEST JUMPDEST PUSH2 0x604 DUP5 DUP3 DUP6 ADD PUSH2 0x599 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x616 DUP2 PUSH2 0x385 JUMP JUMPDEST DUP2 EQ PUSH2 0x620 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x631 DUP2 PUSH2 0x60D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64B PUSH2 0x492 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x659 DUP5 DUP3 DUP6 ADD PUSH2 0x623 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x67C DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH2 0x686 DUP2 DUP6 PUSH2 0x662 JUMP JUMPDEST SWAP4 POP PUSH2 0x696 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x32F JUMP JUMPDEST PUSH2 0x69F DUP2 PUSH2 0x33D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x6B3 DUP2 PUSH2 0x385 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6D1 DUP2 DUP6 PUSH2 0x672 JUMP JUMPDEST SWAP1 POP PUSH2 0x6E0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x6AA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x72B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x73E JUMPI PUSH2 0x73D PUSH2 0x6E7 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x7A0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x765 JUMP JUMPDEST PUSH2 0x7AA DUP7 DUP4 PUSH2 0x765 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x7E5 PUSH2 0x7E0 PUSH2 0x7DB DUP5 PUSH2 0x385 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST PUSH2 0x385 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7FE DUP4 PUSH2 0x7CB JUMP JUMPDEST PUSH2 0x812 PUSH2 0x80A DUP3 PUSH2 0x7EC JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x771 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x826 PUSH2 0x81A JUMP JUMPDEST PUSH2 0x831 DUP2 DUP5 DUP5 PUSH2 0x7F5 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x854 JUMPI PUSH2 0x849 PUSH0 DUP3 PUSH2 0x81E JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x837 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x899 JUMPI PUSH2 0x86A DUP2 PUSH2 0x744 JUMP JUMPDEST PUSH2 0x873 DUP5 PUSH2 0x756 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x882 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x896 PUSH2 0x88E DUP6 PUSH2 0x756 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x836 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8B9 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x89E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x8D1 DUP4 DUP4 PUSH2 0x8AA JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8EA DUP3 PUSH2 0x315 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x903 JUMPI PUSH2 0x902 PUSH2 0x4A2 JUMP JUMPDEST JUMPDEST PUSH2 0x90D DUP3 SLOAD PUSH2 0x714 JUMP JUMPDEST PUSH2 0x918 DUP3 DUP3 DUP6 PUSH2 0x858 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x949 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x937 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x941 DUP6 DUP3 PUSH2 0x8C6 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x9A8 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x957 DUP7 PUSH2 0x744 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x97E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x959 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x99B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x997 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x8AA JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x9C8 DUP2 DUP5 PUSH2 0x672 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x265078D568FD3EED930FF89DF0EACBD131FAD9 0xA9 DUP16 PUSH14 0x722EFC76B280B53DBA64736F6C63 NUMBER STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "120:781:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:113;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;544:163;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;357:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;785:113;842:18;880:10;873:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:113;:::o;544:163::-;619:10;635:21;;;;;;;;645:7;635:21;;;;654:1;635:21;;;619:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;673:26;691:7;673:26;;;;;;:::i;:::-;;;;;;;;544:163;:::o;357:29::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:140:6:-;100:6;134:5;128:12;118:22;;7:140;;;:::o;153:210::-;278:11;312:6;307:3;300:19;352:4;347:3;343:14;328:29;;153:210;;;;:::o;369:158::-;462:4;485:3;477:11;;515:4;510:3;506:14;498:22;;369:158;;;:::o;533:99::-;585:6;619:5;613:12;603:22;;533:99;;;:::o;638:159::-;712:11;746:6;741:3;734:19;786:4;781:3;777:14;762:29;;638:159;;;;:::o;803:139::-;892:6;887:3;882;876:23;933:1;924:6;919:3;915:16;908:27;803:139;;;:::o;948:102::-;989:6;1040:2;1036:7;1031:2;1024:5;1020:14;1016:28;1006:38;;948:102;;;:::o;1056:357::-;1134:3;1162:39;1195:5;1162:39;:::i;:::-;1217:61;1271:6;1266:3;1217:61;:::i;:::-;1210:68;;1287:65;1345:6;1340:3;1333:4;1326:5;1322:16;1287:65;:::i;:::-;1377:29;1399:6;1377:29;:::i;:::-;1372:3;1368:39;1361:46;;1138:275;1056:357;;;;:::o;1419:77::-;1456:7;1485:5;1474:16;;1419:77;;;:::o;1502:108::-;1579:24;1597:5;1579:24;:::i;:::-;1574:3;1567:37;1502:108;;:::o;1682:599::-;1793:3;1829:4;1824:3;1820:14;1916:4;1909:5;1905:16;1899:23;1969:3;1963:4;1959:14;1952:4;1947:3;1943:14;1936:38;1995:73;2063:4;2049:12;1995:73;:::i;:::-;1987:81;;1844:235;2162:4;2155:5;2151:16;2145:23;2181:63;2238:4;2233:3;2229:14;2215:12;2181:63;:::i;:::-;2089:165;2271:4;2264:11;;1798:483;1682:599;;;;:::o;2287:260::-;2408:10;2443:98;2537:3;2529:6;2443:98;:::i;:::-;2429:112;;2287:260;;;;:::o;2553:139::-;2649:4;2681;2676:3;2672:14;2664:22;;2553:139;;;:::o;2768:1119::-;2939:3;2968:80;3042:5;2968:80;:::i;:::-;3064:112;3169:6;3164:3;3064:112;:::i;:::-;3057:119;;3202:3;3247:4;3239:6;3235:17;3230:3;3226:27;3277:82;3353:5;3277:82;:::i;:::-;3382:7;3413:1;3398:444;3423:6;3420:1;3417:13;3398:444;;;3494:9;3488:4;3484:20;3479:3;3472:33;3545:6;3539:13;3573:116;3684:4;3669:13;3573:116;:::i;:::-;3565:124;;3712:86;3791:6;3712:86;:::i;:::-;3702:96;;3827:4;3822:3;3818:14;3811:21;;3458:384;3445:1;3442;3438:9;3433:14;;3398:444;;;3402:14;3858:4;3851:11;;3878:3;3871:10;;2944:943;;;;;2768:1119;;;;:::o;3893:477::-;4088:4;4126:2;4115:9;4111:18;4103:26;;4175:9;4169:4;4165:20;4161:1;4150:9;4146:17;4139:47;4203:160;4358:4;4349:6;4203:160;:::i;:::-;4195:168;;3893:477;;;;:::o;4376:75::-;4409:6;4442:2;4436:9;4426:19;;4376:75;:::o;4457:117::-;4566:1;4563;4556:12;4580:117;4689:1;4686;4679:12;4703:117;4812:1;4809;4802:12;4826:117;4935:1;4932;4925:12;4949:180;4997:77;4994:1;4987:88;5094:4;5091:1;5084:15;5118:4;5115:1;5108:15;5135:281;5218:27;5240:4;5218:27;:::i;:::-;5210:6;5206:40;5348:6;5336:10;5333:22;5312:18;5300:10;5297:34;5294:62;5291:88;;;5359:18;;:::i;:::-;5291:88;5399:10;5395:2;5388:22;5178:238;5135:281;;:::o;5422:129::-;5456:6;5483:20;;:::i;:::-;5473:30;;5512:33;5540:4;5532:6;5512:33;:::i;:::-;5422:129;;;:::o;5557:308::-;5619:4;5709:18;5701:6;5698:30;5695:56;;;5731:18;;:::i;:::-;5695:56;5769:29;5791:6;5769:29;:::i;:::-;5761:37;;5853:4;5847;5843:15;5835:23;;5557:308;;;:::o;5871:148::-;5969:6;5964:3;5959;5946:30;6010:1;6001:6;5996:3;5992:16;5985:27;5871:148;;;:::o;6025:425::-;6103:5;6128:66;6144:49;6186:6;6144:49;:::i;:::-;6128:66;:::i;:::-;6119:75;;6217:6;6210:5;6203:21;6255:4;6248:5;6244:16;6293:3;6284:6;6279:3;6275:16;6272:25;6269:112;;;6300:79;;:::i;:::-;6269:112;6390:54;6437:6;6432:3;6427;6390:54;:::i;:::-;6109:341;6025:425;;;;;:::o;6470:340::-;6526:5;6575:3;6568:4;6560:6;6556:17;6552:27;6542:122;;6583:79;;:::i;:::-;6542:122;6700:6;6687:20;6725:79;6800:3;6792:6;6785:4;6777:6;6773:17;6725:79;:::i;:::-;6716:88;;6532:278;6470:340;;;;:::o;6816:509::-;6885:6;6934:2;6922:9;6913:7;6909:23;6905:32;6902:119;;;6940:79;;:::i;:::-;6902:119;7088:1;7077:9;7073:17;7060:31;7118:18;7110:6;7107:30;7104:117;;;7140:79;;:::i;:::-;7104:117;7245:63;7300:7;7291:6;7280:9;7276:22;7245:63;:::i;:::-;7235:73;;7031:287;6816:509;;;;:::o;7331:122::-;7404:24;7422:5;7404:24;:::i;:::-;7397:5;7394:35;7384:63;;7443:1;7440;7433:12;7384:63;7331:122;:::o;7459:139::-;7505:5;7543:6;7530:20;7521:29;;7559:33;7586:5;7559:33;:::i;:::-;7459:139;;;;:::o;7604:329::-;7663:6;7712:2;7700:9;7691:7;7687:23;7683:32;7680:119;;;7718:79;;:::i;:::-;7680:119;7838:1;7863:53;7908:7;7899:6;7888:9;7884:22;7863:53;:::i;:::-;7853:63;;7809:117;7604:329;;;;:::o;7939:169::-;8023:11;8057:6;8052:3;8045:19;8097:4;8092:3;8088:14;8073:29;;7939:169;;;;:::o;8114:377::-;8202:3;8230:39;8263:5;8230:39;:::i;:::-;8285:71;8349:6;8344:3;8285:71;:::i;:::-;8278:78;;8365:65;8423:6;8418:3;8411:4;8404:5;8400:16;8365:65;:::i;:::-;8455:29;8477:6;8455:29;:::i;:::-;8450:3;8446:39;8439:46;;8206:285;8114:377;;;;:::o;8497:118::-;8584:24;8602:5;8584:24;:::i;:::-;8579:3;8572:37;8497:118;;:::o;8621:423::-;8762:4;8800:2;8789:9;8785:18;8777:26;;8849:9;8843:4;8839:20;8835:1;8824:9;8820:17;8813:47;8877:78;8950:4;8941:6;8877:78;:::i;:::-;8869:86;;8965:72;9033:2;9022:9;9018:18;9009:6;8965:72;:::i;:::-;8621:423;;;;;:::o;9050:180::-;9098:77;9095:1;9088:88;9195:4;9192:1;9185:15;9219:4;9216:1;9209:15;9236:320;9280:6;9317:1;9311:4;9307:12;9297:22;;9364:1;9358:4;9354:12;9385:18;9375:81;;9441:4;9433:6;9429:17;9419:27;;9375:81;9503:2;9495:6;9492:14;9472:18;9469:38;9466:84;;9522:18;;:::i;:::-;9466:84;9287:269;9236:320;;;:::o;9562:141::-;9611:4;9634:3;9626:11;;9657:3;9654:1;9647:14;9691:4;9688:1;9678:18;9670:26;;9562:141;;;:::o;9709:93::-;9746:6;9793:2;9788;9781:5;9777:14;9773:23;9763:33;;9709:93;;;:::o;9808:107::-;9852:8;9902:5;9896:4;9892:16;9871:37;;9808:107;;;;:::o;9921:393::-;9990:6;10040:1;10028:10;10024:18;10063:97;10093:66;10082:9;10063:97;:::i;:::-;10181:39;10211:8;10200:9;10181:39;:::i;:::-;10169:51;;10253:4;10249:9;10242:5;10238:21;10229:30;;10302:4;10292:8;10288:19;10281:5;10278:30;10268:40;;9997:317;;9921:393;;;;;:::o;10320:60::-;10348:3;10369:5;10362:12;;10320:60;;;:::o;10386:142::-;10436:9;10469:53;10487:34;10496:24;10514:5;10496:24;:::i;:::-;10487:34;:::i;:::-;10469:53;:::i;:::-;10456:66;;10386:142;;;:::o;10534:75::-;10577:3;10598:5;10591:12;;10534:75;;;:::o;10615:269::-;10725:39;10756:7;10725:39;:::i;:::-;10786:91;10835:41;10859:16;10835:41;:::i;:::-;10827:6;10820:4;10814:11;10786:91;:::i;:::-;10780:4;10773:105;10691:193;10615:269;;;:::o;10890:73::-;10935:3;10890:73;:::o;10969:189::-;11046:32;;:::i;:::-;11087:65;11145:6;11137;11131:4;11087:65;:::i;:::-;11022:136;10969:189;;:::o;11164:186::-;11224:120;11241:3;11234:5;11231:14;11224:120;;;11295:39;11332:1;11325:5;11295:39;:::i;:::-;11268:1;11261:5;11257:13;11248:22;;11224:120;;;11164:186;;:::o;11356:543::-;11457:2;11452:3;11449:11;11446:446;;;11491:38;11523:5;11491:38;:::i;:::-;11575:29;11593:10;11575:29;:::i;:::-;11565:8;11561:44;11758:2;11746:10;11743:18;11740:49;;;11779:8;11764:23;;11740:49;11802:80;11858:22;11876:3;11858:22;:::i;:::-;11848:8;11844:37;11831:11;11802:80;:::i;:::-;11461:431;;11446:446;11356:543;;;:::o;11905:117::-;11959:8;12009:5;12003:4;11999:16;11978:37;;11905:117;;;;:::o;12028:169::-;12072:6;12105:51;12153:1;12149:6;12141:5;12138:1;12134:13;12105:51;:::i;:::-;12101:56;12186:4;12180;12176:15;12166:25;;12079:118;12028:169;;;;:::o;12202:295::-;12278:4;12424:29;12449:3;12443:4;12424:29;:::i;:::-;12416:37;;12486:3;12483:1;12479:11;12473:4;12470:21;12462:29;;12202:295;;;;:::o;12502:1395::-;12619:37;12652:3;12619:37;:::i;:::-;12721:18;12713:6;12710:30;12707:56;;;12743:18;;:::i;:::-;12707:56;12787:38;12819:4;12813:11;12787:38;:::i;:::-;12872:67;12932:6;12924;12918:4;12872:67;:::i;:::-;12966:1;12990:4;12977:17;;13022:2;13014:6;13011:14;13039:1;13034:618;;;;13696:1;13713:6;13710:77;;;13762:9;13757:3;13753:19;13747:26;13738:35;;13710:77;13813:67;13873:6;13866:5;13813:67;:::i;:::-;13807:4;13800:81;13669:222;13004:887;;13034:618;13086:4;13082:9;13074:6;13070:22;13120:37;13152:4;13120:37;:::i;:::-;13179:1;13193:208;13207:7;13204:1;13201:14;13193:208;;;13286:9;13281:3;13277:19;13271:26;13263:6;13256:42;13337:1;13329:6;13325:14;13315:24;;13384:2;13373:9;13369:18;13356:31;;13230:4;13227:1;13223:12;13218:17;;13193:208;;;13429:6;13420:7;13417:19;13414:179;;;13487:9;13482:3;13478:19;13472:26;13530:48;13572:4;13564:6;13560:17;13549:9;13530:48;:::i;:::-;13522:6;13515:64;13437:156;13414:179;13639:1;13635;13627:6;13623:14;13619:22;13613:4;13606:36;13041:611;;;13004:887;;12594:1303;;;12502:1395;;:::o;13903:313::-;14016:4;14054:2;14043:9;14039:18;14031:26;;14103:9;14097:4;14093:20;14089:1;14078:9;14074:17;14067:47;14131:78;14204:4;14195:6;14131:78;:::i;:::-;14123:86;;13903:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "513200",
								"executionCost": "547",
								"totalCost": "513747"
							},
							"external": {
								"agregarCandidato(string)": "infinite",
								"candidatos(uint256)": "infinite",
								"getAllCandidatos()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 120,
									"end": 901,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 901,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072265078d568fd3eed930ff89df0eacbd131fad9a98f6d722efc76b280b53dba64736f6c63430008190033",
									".code": [
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "198CC691"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "503C560F"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "8F023F85"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 901,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 120,
											"end": 901,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 785,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 785,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 544,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 544,
											"end": 707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 357,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 357,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 785,
											"end": 898,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 842,
											"end": 860,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 880,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 873,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 873,
											"end": 890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 873,
											"end": 890,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 873,
											"end": 890,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 785,
											"end": 898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 544,
											"end": 707,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 645,
											"end": 652,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 654,
											"end": 655,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 656,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 635,
											"end": 656,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "33"
										},
										{
											"begin": 619,
											"end": 657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 619,
											"end": 657,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 619,
											"end": 657,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "566C2D39711B082CC685ADE507DEE6291F47044333D9ABA4037034CDC3CFAC9E"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 673,
											"end": 699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 673,
											"end": 699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 673,
											"end": 699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 673,
											"end": 699,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 544,
											"end": 707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 357,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 357,
											"end": 386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 357,
											"end": 386,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 357,
											"end": 386,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 147,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 7,
											"end": 147,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 100,
											"end": 106,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 128,
											"end": 140,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 118,
											"end": 140,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 118,
											"end": 140,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 147,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 153,
											"end": 363,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 153,
											"end": 363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 278,
											"end": 289,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 307,
											"end": 310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 300,
											"end": 319,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 352,
											"end": 356,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 347,
											"end": 350,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 343,
											"end": 357,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 328,
											"end": 357,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 328,
											"end": 357,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 153,
											"end": 363,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 153,
											"end": 363,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 153,
											"end": 363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 153,
											"end": 363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 153,
											"end": 363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 369,
											"end": 527,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 369,
											"end": 527,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 462,
											"end": 466,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 477,
											"end": 488,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 477,
											"end": 488,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 515,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 510,
											"end": 513,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 506,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 498,
											"end": 520,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 498,
											"end": 520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 369,
											"end": 527,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 369,
											"end": 527,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 369,
											"end": 527,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 369,
											"end": 527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 632,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 533,
											"end": 632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 585,
											"end": 591,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 624,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 613,
											"end": 625,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 603,
											"end": 625,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 603,
											"end": 625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 632,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 533,
											"end": 632,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 533,
											"end": 632,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 533,
											"end": 632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 797,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 638,
											"end": 797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 712,
											"end": 723,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 746,
											"end": 752,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 741,
											"end": 744,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 734,
											"end": 753,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 786,
											"end": 790,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 777,
											"end": 791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 762,
											"end": 791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 762,
											"end": 791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 638,
											"end": 797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 638,
											"end": 797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 638,
											"end": 797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 942,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 803,
											"end": 942,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 892,
											"end": 898,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 887,
											"end": 890,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 882,
											"end": 885,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 876,
											"end": 899,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 933,
											"end": 934,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 919,
											"end": 922,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 915,
											"end": 931,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 908,
											"end": 935,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 803,
											"end": 942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 942,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 803,
											"end": 942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 989,
											"end": 995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1040,
											"end": 1042,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1036,
											"end": 1043,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1024,
											"end": 1029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1020,
											"end": 1034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1016,
											"end": 1044,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1044,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1050,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 948,
											"end": 1050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1413,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1056,
											"end": 1413,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1137,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 1162,
											"end": 1201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 1162,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1271,
											"end": 1277,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1266,
											"end": 1269,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1217,
											"end": 1278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1278,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1278,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1340,
											"end": 1343,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1331,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1322,
											"end": 1338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1352,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1287,
											"end": 1352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1287,
											"end": 1352,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 1287,
											"end": 1352,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1377,
											"end": 1406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 1377,
											"end": 1406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1375,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1368,
											"end": 1407,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1361,
											"end": 1407,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1138,
											"end": 1413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1413,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1413,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1413,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1496,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1419,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1490,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1474,
											"end": 1490,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1496,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1496,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1496,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1419,
											"end": 1496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1610,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 1502,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1597,
											"end": 1602,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 1579,
											"end": 1603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 1579,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1574,
											"end": 1577,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1567,
											"end": 1604,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1610,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1502,
											"end": 1610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1682,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1793,
											"end": 1796,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1829,
											"end": 1833,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1824,
											"end": 1827,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1834,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1916,
											"end": 1920,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1914,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1899,
											"end": 1922,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1969,
											"end": 1972,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1967,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1973,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1952,
											"end": 1956,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1947,
											"end": 1950,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1936,
											"end": 1974,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 2063,
											"end": 2067,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1995,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1995,
											"end": 2068,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 1995,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1987,
											"end": 2068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 2079,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2162,
											"end": 2166,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2155,
											"end": 2160,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2151,
											"end": 2167,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2145,
											"end": 2168,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2238,
											"end": 2242,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2229,
											"end": 2243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2215,
											"end": 2227,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 2181,
											"end": 2244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2181,
											"end": 2244,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 2181,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2089,
											"end": 2254,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2275,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2275,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2264,
											"end": 2275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1798,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 2281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 2281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1682,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2547,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 2287,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2408,
											"end": 2418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2443,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2537,
											"end": 2540,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2529,
											"end": 2535,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2541,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 2443,
											"end": 2541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2443,
											"end": 2541,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 2443,
											"end": 2541,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2541,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2541,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2547,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2692,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2553,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2681,
											"end": 2685,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2672,
											"end": 2686,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2686,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2664,
											"end": 2686,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2692,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2692,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2692,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2553,
											"end": 2692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 3887,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 2768,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2942,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 3042,
											"end": 3047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2968,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3048,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 2968,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3169,
											"end": 3175,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3164,
											"end": 3167,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3176,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3064,
											"end": 3176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3064,
											"end": 3176,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 3064,
											"end": 3176,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3176,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3057,
											"end": 3176,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3247,
											"end": 3251,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3239,
											"end": 3245,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3252,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3230,
											"end": 3233,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3226,
											"end": 3253,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3353,
											"end": 3358,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3359,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 3277,
											"end": 3359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3277,
											"end": 3359,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3277,
											"end": 3359,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3382,
											"end": 3389,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3413,
											"end": 3414,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3420,
											"end": 3421,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3417,
											"end": 3430,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3494,
											"end": 3503,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3504,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3479,
											"end": 3482,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 3472,
											"end": 3505,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3545,
											"end": 3551,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3539,
											"end": 3552,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3684,
											"end": 3688,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3669,
											"end": 3682,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 3573,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3573,
											"end": 3689,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 3573,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3689,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3565,
											"end": 3689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3791,
											"end": 3797,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 3712,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3712,
											"end": 3798,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 3712,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3702,
											"end": 3798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3827,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3822,
											"end": 3825,
											"name": "DUP11",
											"source": 6
										},
										{
											"begin": 3818,
											"end": 3832,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3832,
											"name": "SWAP10",
											"source": 6
										},
										{
											"begin": 3811,
											"end": 3832,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3458,
											"end": 3842,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3446,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3447,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3433,
											"end": 3447,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 3398,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3402,
											"end": 3416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3858,
											"end": 3862,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3862,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": 3851,
											"end": 3862,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3878,
											"end": 3881,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3871,
											"end": 3881,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2944,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 3887,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 3887,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 3887,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2768,
											"end": 3887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 4370,
											"name": "tag",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 3893,
											"end": 4370,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4088,
											"end": 4092,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4126,
											"end": 4128,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4115,
											"end": 4124,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4111,
											"end": 4129,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4129,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4103,
											"end": 4129,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4175,
											"end": 4184,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4169,
											"end": 4173,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4165,
											"end": 4185,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4161,
											"end": 4162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4159,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4146,
											"end": 4163,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4139,
											"end": 4186,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4358,
											"end": 4362,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4363,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 4203,
											"end": 4363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4203,
											"end": 4363,
											"name": "tag",
											"source": 6,
											"value": "122"
										},
										{
											"begin": 4203,
											"end": 4363,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4363,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4195,
											"end": 4363,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 4370,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 4370,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3893,
											"end": 4370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4451,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 4376,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4409,
											"end": 4415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4444,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4445,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4426,
											"end": 4445,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4451,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4376,
											"end": 4451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4457,
											"end": 4574,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 4457,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4566,
											"end": 4567,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 4564,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4556,
											"end": 4568,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4697,
											"name": "tag",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 4580,
											"end": 4697,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4689,
											"end": 4690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4687,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4679,
											"end": 4691,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4703,
											"end": 4820,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 4703,
											"end": 4820,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4809,
											"end": 4810,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4802,
											"end": 4814,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4826,
											"end": 4943,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 4826,
											"end": 4943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4935,
											"end": 4936,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4932,
											"end": 4933,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4925,
											"end": 4937,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4949,
											"end": 5129,
											"name": "tag",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 4949,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4997,
											"end": 5074,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4994,
											"end": 4995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5075,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5094,
											"end": 5098,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 5091,
											"end": 5092,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5084,
											"end": 5099,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5118,
											"end": 5122,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5115,
											"end": 5116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5123,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5416,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5135,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5240,
											"end": 5244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5218,
											"end": 5245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5218,
											"end": 5245,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5210,
											"end": 5216,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5336,
											"end": 5346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5333,
											"end": 5355,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5312,
											"end": 5330,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5300,
											"end": 5310,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5297,
											"end": 5331,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5294,
											"end": 5356,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5379,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5291,
											"end": 5379,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5359,
											"end": 5377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 5359,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5291,
											"end": 5379,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 5291,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5399,
											"end": 5409,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5395,
											"end": 5397,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5388,
											"end": 5410,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5178,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5416,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5551,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5422,
											"end": 5551,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5456,
											"end": 5462,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5483,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5483,
											"end": 5503,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 5483,
											"end": 5503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5483,
											"end": 5503,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 5483,
											"end": 5503,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5503,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5503,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5532,
											"end": 5538,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5545,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 5512,
											"end": 5545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5512,
											"end": 5545,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 5512,
											"end": 5545,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5551,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5551,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5551,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5422,
											"end": 5551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5865,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5557,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5619,
											"end": 5623,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5709,
											"end": 5727,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5701,
											"end": 5707,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5698,
											"end": 5728,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5751,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5695,
											"end": 5751,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 5731,
											"end": 5749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 5731,
											"end": 5749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5695,
											"end": 5751,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 5695,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 5769,
											"end": 5798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5769,
											"end": 5798,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 5769,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5761,
											"end": 5798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5853,
											"end": 5857,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5847,
											"end": 5851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5843,
											"end": 5858,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5835,
											"end": 5858,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5835,
											"end": 5858,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5865,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5557,
											"end": 5865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6019,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5871,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5969,
											"end": 5975,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5964,
											"end": 5967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5959,
											"end": 5962,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5946,
											"end": 5976,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 6010,
											"end": 6011,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6001,
											"end": 6007,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5996,
											"end": 5999,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5992,
											"end": 6008,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5985,
											"end": 6012,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6019,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5871,
											"end": 6019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6103,
											"end": 6108,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6144,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6186,
											"end": 6192,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 6144,
											"end": 6193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6144,
											"end": 6193,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 6144,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6194,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 6128,
											"end": 6194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6128,
											"end": 6194,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 6128,
											"end": 6194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6119,
											"end": 6194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6119,
											"end": 6194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6217,
											"end": 6223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6210,
											"end": 6215,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6203,
											"end": 6224,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6255,
											"end": 6259,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6248,
											"end": 6253,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6244,
											"end": 6260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6293,
											"end": 6296,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6284,
											"end": 6290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6279,
											"end": 6282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6275,
											"end": 6291,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6272,
											"end": 6297,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6381,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6269,
											"end": 6381,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6300,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 6300,
											"end": 6379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6300,
											"end": 6379,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 6300,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6269,
											"end": 6381,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 6269,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6432,
											"end": 6435,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6427,
											"end": 6430,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 6390,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6444,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 6390,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6109,
											"end": 6450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6025,
											"end": 6450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6810,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 6470,
											"end": 6810,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6526,
											"end": 6531,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6575,
											"end": 6578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6568,
											"end": 6572,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 6560,
											"end": 6566,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6556,
											"end": 6573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6579,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6664,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6542,
											"end": 6664,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6583,
											"end": 6662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6583,
											"end": 6662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6583,
											"end": 6662,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 6583,
											"end": 6662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6542,
											"end": 6664,
											"name": "tag",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 6542,
											"end": 6664,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6700,
											"end": 6706,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6707,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6800,
											"end": 6803,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6792,
											"end": 6798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6785,
											"end": 6789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6777,
											"end": 6783,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6773,
											"end": 6790,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 6725,
											"end": 6804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 6725,
											"end": 6804,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6804,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6716,
											"end": 6804,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6532,
											"end": 6810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6810,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6810,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6810,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6470,
											"end": 6810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 7325,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 6816,
											"end": 7325,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6885,
											"end": 6891,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6934,
											"end": 6936,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6922,
											"end": 6931,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6913,
											"end": 6920,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6909,
											"end": 6932,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6905,
											"end": 6937,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 7021,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 7021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6902,
											"end": 7021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6940,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 6940,
											"end": 7019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6940,
											"end": 7019,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 6940,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 7021,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 6902,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7088,
											"end": 7089,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7073,
											"end": 7090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7060,
											"end": 7091,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7118,
											"end": 7136,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7110,
											"end": 7116,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7107,
											"end": 7137,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7221,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7104,
											"end": 7221,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 7140,
											"end": 7219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 7140,
											"end": 7219,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7104,
											"end": 7221,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 7104,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7300,
											"end": 7307,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7291,
											"end": 7297,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7280,
											"end": 7289,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7276,
											"end": 7298,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 7245,
											"end": 7308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 7245,
											"end": 7308,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7308,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7235,
											"end": 7308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7031,
											"end": 7318,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 7325,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 7325,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 7325,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6816,
											"end": 7325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7453,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7331,
											"end": 7453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7422,
											"end": 7427,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 7404,
											"end": 7428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 7404,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7397,
											"end": 7402,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7429,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7443,
											"end": 7444,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7440,
											"end": 7441,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7433,
											"end": 7445,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 7384,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7331,
											"end": 7453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7598,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7459,
											"end": 7598,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7505,
											"end": 7510,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7543,
											"end": 7549,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7550,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7521,
											"end": 7550,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7586,
											"end": 7591,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7592,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 7559,
											"end": 7592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7559,
											"end": 7592,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 7559,
											"end": 7592,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7598,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7598,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7598,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7459,
											"end": 7598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7604,
											"end": 7933,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 7604,
											"end": 7933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7663,
											"end": 7669,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7712,
											"end": 7714,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7700,
											"end": 7709,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7691,
											"end": 7698,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7687,
											"end": 7710,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7683,
											"end": 7715,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7718,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 7718,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7718,
											"end": 7797,
											"name": "tag",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 7718,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 7680,
											"end": 7799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7839,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7863,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7908,
											"end": 7915,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7899,
											"end": 7905,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7888,
											"end": 7897,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7884,
											"end": 7906,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7863,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 7863,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7863,
											"end": 7916,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 7863,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7916,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7853,
											"end": 7916,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7809,
											"end": 7926,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7604,
											"end": 7933,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7604,
											"end": 7933,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7604,
											"end": 7933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7604,
											"end": 7933,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7604,
											"end": 7933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8108,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 7939,
											"end": 8108,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8023,
											"end": 8034,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8052,
											"end": 8055,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8045,
											"end": 8064,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8101,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8092,
											"end": 8095,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8088,
											"end": 8102,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8102,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8073,
											"end": 8102,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8108,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8108,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8108,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7939,
											"end": 8108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8491,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 8114,
											"end": 8491,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8202,
											"end": 8205,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8230,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8263,
											"end": 8268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8269,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 8230,
											"end": 8269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8269,
											"name": "tag",
											"source": 6,
											"value": "168"
										},
										{
											"begin": 8230,
											"end": 8269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 8285,
											"end": 8356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "tag",
											"source": 6,
											"value": "169"
										},
										{
											"begin": 8285,
											"end": 8356,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8356,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8278,
											"end": 8356,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8423,
											"end": 8429,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8418,
											"end": 8421,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8411,
											"end": 8415,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8404,
											"end": 8409,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8400,
											"end": 8416,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 8365,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8365,
											"end": 8430,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 8365,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8484,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 8455,
											"end": 8484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8455,
											"end": 8484,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 8455,
											"end": 8484,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8453,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8446,
											"end": 8485,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8439,
											"end": 8485,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8439,
											"end": 8485,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8206,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8491,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8491,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8114,
											"end": 8491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8615,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 8497,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8602,
											"end": 8607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 8584,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 8584,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8579,
											"end": 8582,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8572,
											"end": 8609,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8615,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8497,
											"end": 8615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8766,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8800,
											"end": 8802,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8785,
											"end": 8803,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8777,
											"end": 8803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8849,
											"end": 8858,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8843,
											"end": 8847,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8839,
											"end": 8859,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8835,
											"end": 8836,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8824,
											"end": 8833,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8820,
											"end": 8837,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8813,
											"end": 8860,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8877,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8950,
											"end": 8954,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8941,
											"end": 8947,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8877,
											"end": 8955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 8877,
											"end": 8955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8877,
											"end": 8955,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 8877,
											"end": 8955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8869,
											"end": 8955,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8869,
											"end": 8955,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 9033,
											"end": 9035,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9022,
											"end": 9031,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9018,
											"end": 9036,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9015,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 8965,
											"end": 9037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8965,
											"end": 9037,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 8965,
											"end": 9037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8621,
											"end": 9044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9050,
											"end": 9230,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 9050,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9098,
											"end": 9175,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9095,
											"end": 9096,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9088,
											"end": 9176,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9199,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 9192,
											"end": 9193,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9185,
											"end": 9200,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9219,
											"end": 9223,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9216,
											"end": 9217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9224,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9317,
											"end": 9318,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9311,
											"end": 9315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9307,
											"end": 9319,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9319,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9297,
											"end": 9319,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9364,
											"end": 9365,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9358,
											"end": 9362,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9366,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9385,
											"end": 9403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9441,
											"end": 9445,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 9433,
											"end": 9439,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9429,
											"end": 9446,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9419,
											"end": 9446,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 9375,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9503,
											"end": 9505,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9495,
											"end": 9501,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9492,
											"end": 9506,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9490,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9469,
											"end": 9507,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 9522,
											"end": 9540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "tag",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 9522,
											"end": 9540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 9466,
											"end": 9550,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9287,
											"end": 9556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9556,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9236,
											"end": 9556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9562,
											"end": 9703,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 9562,
											"end": 9703,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9611,
											"end": 9615,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9637,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9626,
											"end": 9637,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9626,
											"end": 9637,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9657,
											"end": 9660,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9654,
											"end": 9655,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9647,
											"end": 9661,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9691,
											"end": 9695,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9688,
											"end": 9689,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9678,
											"end": 9696,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9670,
											"end": 9696,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9670,
											"end": 9696,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9562,
											"end": 9703,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9562,
											"end": 9703,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9562,
											"end": 9703,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9562,
											"end": 9703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9802,
											"name": "tag",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 9709,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9746,
											"end": 9752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9793,
											"end": 9795,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9788,
											"end": 9790,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 9781,
											"end": 9786,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9777,
											"end": 9791,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9773,
											"end": 9796,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9763,
											"end": 9796,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9763,
											"end": 9796,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9802,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9802,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9802,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9709,
											"end": 9802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9915,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 9808,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9852,
											"end": 9860,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9896,
											"end": 9900,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9892,
											"end": 9908,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 9908,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9871,
											"end": 9908,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9915,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9915,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9915,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9808,
											"end": 9915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9990,
											"end": 9996,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10040,
											"end": 10041,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 10028,
											"end": 10038,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10024,
											"end": 10042,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 10093,
											"end": 10159,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10082,
											"end": 10091,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10160,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 10063,
											"end": 10160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10063,
											"end": 10160,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 10063,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10211,
											"end": 10219,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10200,
											"end": 10209,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10220,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 10181,
											"end": 10220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10181,
											"end": 10220,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 10181,
											"end": 10220,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10169,
											"end": 10220,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10169,
											"end": 10220,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10253,
											"end": 10257,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10249,
											"end": 10258,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 10242,
											"end": 10247,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10238,
											"end": 10259,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10259,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 10229,
											"end": 10259,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10302,
											"end": 10306,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10292,
											"end": 10300,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10288,
											"end": 10307,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10281,
											"end": 10286,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10278,
											"end": 10308,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10268,
											"end": 10308,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10268,
											"end": 10308,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9997,
											"end": 10314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9997,
											"end": 10314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9921,
											"end": 10314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10380,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 10320,
											"end": 10380,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10369,
											"end": 10374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10362,
											"end": 10374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10380,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10380,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10380,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10320,
											"end": 10380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10528,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10386,
											"end": 10528,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10469,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 10496,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10514,
											"end": 10519,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10520,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 10496,
											"end": 10520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10520,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 10496,
											"end": 10520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 10487,
											"end": 10521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 10487,
											"end": 10521,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10469,
											"end": 10522,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 10469,
											"end": 10522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10469,
											"end": 10522,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 10469,
											"end": 10522,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10522,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10456,
											"end": 10522,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10528,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10386,
											"end": 10528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10609,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 10534,
											"end": 10609,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10577,
											"end": 10580,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10603,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10603,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10603,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10609,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10609,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10609,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10534,
											"end": 10609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10884,
											"name": "tag",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 10615,
											"end": 10884,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10725,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10756,
											"end": 10763,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10725,
											"end": 10764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 10725,
											"end": 10764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10725,
											"end": 10764,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 10725,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10835,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10859,
											"end": 10875,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10876,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 10835,
											"end": 10876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10876,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 10835,
											"end": 10876,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10827,
											"end": 10833,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10820,
											"end": 10824,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10814,
											"end": 10825,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 10786,
											"end": 10877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10786,
											"end": 10877,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 10786,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10780,
											"end": 10784,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10773,
											"end": 10878,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 10691,
											"end": 10884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10884,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10615,
											"end": 10884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10890,
											"end": 10963,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 10890,
											"end": 10963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10935,
											"end": 10938,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10963,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10890,
											"end": 10963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 11158,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 10969,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11046,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 11046,
											"end": 11078,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 11046,
											"end": 11078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11046,
											"end": 11078,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 11046,
											"end": 11078,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11087,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 11145,
											"end": 11151,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11137,
											"end": 11143,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11131,
											"end": 11135,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11087,
											"end": 11152,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 11087,
											"end": 11152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11087,
											"end": 11152,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 11087,
											"end": 11152,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11022,
											"end": 11158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 11158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 11158,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10969,
											"end": 11158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11164,
											"end": 11350,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 11164,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11241,
											"end": 11244,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11234,
											"end": 11239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11231,
											"end": 11245,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11332,
											"end": 11333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11325,
											"end": 11330,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11334,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11295,
											"end": 11334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11295,
											"end": 11334,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 11295,
											"end": 11334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11268,
											"end": 11269,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11261,
											"end": 11266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11257,
											"end": 11270,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11270,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11248,
											"end": 11270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 11224,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11164,
											"end": 11350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11164,
											"end": 11350,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11164,
											"end": 11350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11899,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 11356,
											"end": 11899,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 11452,
											"end": 11455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11449,
											"end": 11460,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11892,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11446,
											"end": 11892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 11491,
											"end": 11529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11491,
											"end": 11529,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 11491,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11575,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11593,
											"end": 11603,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11575,
											"end": 11604,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 11575,
											"end": 11604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11575,
											"end": 11604,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 11575,
											"end": 11604,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11565,
											"end": 11573,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11561,
											"end": 11605,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11758,
											"end": 11760,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11746,
											"end": 11756,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11789,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 11740,
											"end": 11789,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11779,
											"end": 11787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 11787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11764,
											"end": 11787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11740,
											"end": 11789,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 11740,
											"end": 11789,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11802,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 11858,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 11876,
											"end": 11879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 11858,
											"end": 11880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 11858,
											"end": 11880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11858,
											"end": 11880,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 11858,
											"end": 11880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11856,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11844,
											"end": 11881,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11831,
											"end": 11842,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11802,
											"end": 11882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 11802,
											"end": 11882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11802,
											"end": 11882,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 11802,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11461,
											"end": 11892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11461,
											"end": 11892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11446,
											"end": 11892,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 11446,
											"end": 11892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11356,
											"end": 11899,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11959,
											"end": 11967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12009,
											"end": 12014,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12003,
											"end": 12007,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11999,
											"end": 12015,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 11978,
											"end": 12015,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11978,
											"end": 12015,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 12022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11905,
											"end": 12022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12197,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 12028,
											"end": 12197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12072,
											"end": 12078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 12153,
											"end": 12154,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12149,
											"end": 12155,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12141,
											"end": 12146,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12138,
											"end": 12139,
											"name": "PUSH",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 12134,
											"end": 12147,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 12105,
											"end": 12156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 12105,
											"end": 12156,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12101,
											"end": 12157,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12186,
											"end": 12190,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12180,
											"end": 12184,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12176,
											"end": 12191,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12191,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12166,
											"end": 12191,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12079,
											"end": 12197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12197,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12028,
											"end": 12197,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12497,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 12202,
											"end": 12497,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12278,
											"end": 12282,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12424,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 12449,
											"end": 12452,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12443,
											"end": 12447,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12424,
											"end": 12453,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 12424,
											"end": 12453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12424,
											"end": 12453,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 12424,
											"end": 12453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12416,
											"end": 12453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12416,
											"end": 12453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12486,
											"end": 12489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12483,
											"end": 12484,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12479,
											"end": 12490,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12473,
											"end": 12477,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12470,
											"end": 12491,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12462,
											"end": 12491,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12462,
											"end": 12491,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12497,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12497,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12497,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12202,
											"end": 12497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 13897,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 12502,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 12652,
											"end": 12655,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12656,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 12619,
											"end": 12656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12619,
											"end": 12656,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 12619,
											"end": 12656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12721,
											"end": 12739,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12713,
											"end": 12719,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12710,
											"end": 12740,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 12707,
											"end": 12763,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12707,
											"end": 12763,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 12707,
											"end": 12763,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "62"
										},
										{
											"begin": 12743,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 12743,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12707,
											"end": 12763,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 12707,
											"end": 12763,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12819,
											"end": 12823,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12813,
											"end": 12824,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 12825,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 12787,
											"end": 12825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 12825,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 12787,
											"end": 12825,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12872,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12932,
											"end": 12938,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12924,
											"end": 12930,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12918,
											"end": 12922,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12872,
											"end": 12939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 12872,
											"end": 12939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12872,
											"end": 12939,
											"name": "tag",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 12872,
											"end": 12939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12966,
											"end": 12967,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12990,
											"end": 12994,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12977,
											"end": 12994,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12977,
											"end": 12994,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13022,
											"end": 13024,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13014,
											"end": 13020,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13011,
											"end": 13025,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 13039,
											"end": 13040,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13034,
											"end": 13652,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13034,
											"end": 13652,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 13034,
											"end": 13652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 13034,
											"end": 13652,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13696,
											"end": 13697,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13713,
											"end": 13719,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13710,
											"end": 13787,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13710,
											"end": 13787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 13710,
											"end": 13787,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13762,
											"end": 13771,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13757,
											"end": 13760,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13753,
											"end": 13772,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13747,
											"end": 13773,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13738,
											"end": 13773,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13738,
											"end": 13773,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13710,
											"end": 13787,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 13710,
											"end": 13787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 13880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 13873,
											"end": 13879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13866,
											"end": 13871,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 13880,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 13813,
											"end": 13880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13813,
											"end": 13880,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 13813,
											"end": 13880,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13807,
											"end": 13811,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13800,
											"end": 13881,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 13669,
											"end": 13891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13004,
											"end": 13891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13004,
											"end": 13891,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13034,
											"end": 13652,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 13034,
											"end": 13652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13086,
											"end": 13090,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13082,
											"end": 13091,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 13074,
											"end": 13080,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13070,
											"end": 13092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13120,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 13152,
											"end": 13156,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13120,
											"end": 13157,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 13120,
											"end": 13157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13120,
											"end": 13157,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 13120,
											"end": 13157,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13179,
											"end": 13180,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13207,
											"end": 13214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13204,
											"end": 13205,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13201,
											"end": 13215,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13286,
											"end": 13295,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13281,
											"end": 13284,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13277,
											"end": 13296,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13271,
											"end": 13297,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13263,
											"end": 13269,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13256,
											"end": 13298,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 13337,
											"end": 13338,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13329,
											"end": 13335,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13325,
											"end": 13339,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13339,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13315,
											"end": 13339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13384,
											"end": 13386,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13373,
											"end": 13382,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13369,
											"end": 13387,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13356,
											"end": 13387,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13356,
											"end": 13387,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13230,
											"end": 13234,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13227,
											"end": 13228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 13223,
											"end": 13235,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13235,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13218,
											"end": 13235,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "tag",
											"source": 6,
											"value": "232"
										},
										{
											"begin": 13193,
											"end": 13401,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13429,
											"end": 13435,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13420,
											"end": 13427,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13417,
											"end": 13436,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 13414,
											"end": 13593,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13414,
											"end": 13593,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 13414,
											"end": 13593,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13487,
											"end": 13496,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13482,
											"end": 13485,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13478,
											"end": 13497,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13472,
											"end": 13498,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 13530,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 13572,
											"end": 13576,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 13564,
											"end": 13570,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 13560,
											"end": 13577,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 13549,
											"end": 13558,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13530,
											"end": 13578,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 13530,
											"end": 13578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13530,
											"end": 13578,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 13530,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13522,
											"end": 13528,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13515,
											"end": 13579,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 13437,
											"end": 13593,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13414,
											"end": 13593,
											"name": "tag",
											"source": 6,
											"value": "233"
										},
										{
											"begin": 13414,
											"end": 13593,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13639,
											"end": 13640,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 13635,
											"end": 13636,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 13627,
											"end": 13633,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13623,
											"end": 13637,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 13619,
											"end": 13641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13613,
											"end": 13617,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 13606,
											"end": 13642,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 13041,
											"end": 13652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13041,
											"end": 13652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13041,
											"end": 13652,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13004,
											"end": 13891,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 13004,
											"end": 13891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13004,
											"end": 13891,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12594,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12594,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12594,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12502,
											"end": 13897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 14216,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 13903,
											"end": 14216,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14016,
											"end": 14020,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14054,
											"end": 14056,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14043,
											"end": 14052,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14039,
											"end": 14057,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14031,
											"end": 14057,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14031,
											"end": 14057,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14103,
											"end": 14112,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14097,
											"end": 14101,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14093,
											"end": 14113,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 14089,
											"end": 14090,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14078,
											"end": 14087,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14074,
											"end": 14091,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14067,
											"end": 14114,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 14131,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 14204,
											"end": 14208,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 14195,
											"end": 14201,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14131,
											"end": 14209,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 14131,
											"end": 14209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14131,
											"end": 14209,
											"name": "tag",
											"source": 6,
											"value": "236"
										},
										{
											"begin": 14131,
											"end": 14209,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14123,
											"end": 14209,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14123,
											"end": 14209,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 14216,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 14216,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 14216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 14216,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13903,
											"end": 14216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/CandidatosFactory.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"agregarCandidato(string)": "503c560f",
							"candidatos(uint256)": "8f023f85",
							"getAllCandidatos()": "198cc691"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"nombre\",\"type\":\"string\"}],\"name\":\"CandidatoAgregado\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nombre\",\"type\":\"string\"}],\"name\":\"agregarCandidato\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"candidatos\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votos\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCandidatos\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votos\",\"type\":\"uint256\"}],\"internalType\":\"struct Candidatos.Candidato[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CandidatosFactory.sol\":\"Candidatos\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/CandidatosFactory.sol\":{\"keccak256\":\"0x2b6955b0314f3599372c6f12d0c3e9596c1cb4aa98c3f5485b7900de3b71fade\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99e22cb221d851fcbb910d3f0d0702579b9382a6c51e4fae6972744b08c13d02\",\"dweb:/ipfs/QmRq53xB4exgKE8no35xRaHXPBer2gSRLJGJgMW5aTAw47\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 797,
								"contract": "contracts/CandidatosFactory.sol:Candidatos",
								"label": "candidatos",
								"offset": 0,
								"slot": "0",
								"type": "t_array(t_struct(Candidato)793_storage)dyn_storage"
							}
						],
						"types": {
							"t_array(t_struct(Candidato)793_storage)dyn_storage": {
								"base": "t_struct(Candidato)793_storage",
								"encoding": "dynamic_array",
								"label": "struct Candidatos.Candidato[]",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Candidato)793_storage": {
								"encoding": "inplace",
								"label": "struct Candidatos.Candidato",
								"members": [
									{
										"astId": 790,
										"contract": "contracts/CandidatosFactory.sol:Candidatos",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 792,
										"contract": "contracts/CandidatosFactory.sol:Candidatos",
										"label": "votos",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 652,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 730,
							"src": "131:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 139,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "139:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 142,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 756,
							"src": "168:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 141,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 755,
										"src": "176:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 144,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 786,
							"src": "232:48:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 143,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 785,
										"src": "240:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 146,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 652,
							"sourceUnit": 137,
							"src": "281:65:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 145,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 148,
										"name": "Context",
										"nameLocations": [
											"1428:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 785,
										"src": "1428:7:1"
									},
									"id": 149,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:1"
								},
								{
									"baseName": {
										"id": 150,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "1437:6:1"
									},
									"id": 151,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:1"
								},
								{
									"baseName": {
										"id": 152,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 755,
										"src": "1445:14:1"
									},
									"id": 153,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:1"
								},
								{
									"baseName": {
										"id": 154,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:1"
									},
									"id": 155,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 147,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 651,
							"linearizedBaseContracts": [
								651,
								41,
								755,
								729,
								785
							],
							"name": "ERC20",
							"nameLocation": "1419:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 159,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1480:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 158,
										"keyName": "account",
										"keyNameLocation": "1496:7:1",
										"keyType": {
											"id": 156,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 157,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 165,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1540:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 164,
										"keyName": "account",
										"keyNameLocation": "1556:7:1",
										"keyType": {
											"id": 160,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 163,
											"keyName": "spender",
											"keyNameLocation": "1583:7:1",
											"keyType": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 167,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1630:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 169,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1665:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 168,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 171,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 651,
									"src": "1691:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 170,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1952:57:1",
										"statements": [
											{
												"expression": {
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 179,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 169,
														"src": "1962:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 180,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1970:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:1"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 183,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "1985:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 176,
														"src": "1995:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 188,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1908:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1929:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:1"
									},
									"scope": 651,
									"src": "1896:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2134:29:1",
										"statements": [
											{
												"expression": {
													"id": 194,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 169,
													"src": "2151:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 193,
												"id": 195,
												"nodeType": "Return",
												"src": "2144:12:1"
											}
										]
									},
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:1"
									},
									"returnParameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2119:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 191,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:1"
									},
									"scope": 651,
									"src": "2074:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										748
									],
									"body": {
										"id": 205,
										"nodeType": "Block",
										"src": "2338:31:1",
										"statements": [
											{
												"expression": {
													"id": 203,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 171,
													"src": "2355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 202,
												"id": 204,
												"nodeType": "Return",
												"src": "2348:14:1"
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "2323:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 200,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:1"
									},
									"scope": 651,
									"src": "2276:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										754
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3058:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 211,
												"id": 213,
												"nodeType": "Return",
												"src": "3068:9:1"
											}
										]
									},
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3051:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 209,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:1"
									},
									"scope": 651,
									"src": "3002:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										678
									],
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3205:36:1",
										"statements": [
											{
												"expression": {
													"id": 221,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "3222:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3215:19:1"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3196:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:1"
									},
									"scope": 651,
									"src": "3144:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										686
									],
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "3373:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 232,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 159,
														"src": "3390:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 234,
													"indexExpression": {
														"id": 233,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3400:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 231,
												"id": 235,
												"nodeType": "Return",
												"src": "3383:25:1"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3318:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "3364:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:1"
									},
									"scope": 651,
									"src": "3299:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										696
									],
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3685:103:1",
										"statements": [
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 260,
														"src": "3695:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 247,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 249,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "3711:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 253,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "3743:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 254,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "3750:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 255,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 242,
															"src": "3754:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3733:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 257,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 246,
												"id": 259,
												"nodeType": "Return",
												"src": "3770:11:1"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3628:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3640:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:1"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3679:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:1"
									},
									"scope": 651,
									"src": "3610:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										706
									],
									"body": {
										"id": 277,
										"nodeType": "Block",
										"src": "3935:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 271,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 165,
															"src": "3952:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "3964:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 275,
													"indexExpression": {
														"id": 274,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "3971:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 270,
												"id": 276,
												"nodeType": "Return",
												"src": "3945:34:1"
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3865:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3880:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:1"
									},
									"returnParameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "3926:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:1"
									},
									"scope": 651,
									"src": "3846:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										716
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4372:107:1",
										"statements": [
											{
												"assignments": [
													289
												],
												"declarations": [
													{
														"constant": false,
														"id": 289,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4382:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 288,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 292,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 290,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "4398:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 294,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "4429:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 295,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 296,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 283,
															"src": "4445:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 293,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 542,
														"src": "4420:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 287,
												"id": 300,
												"nodeType": "Return",
												"src": "4461:11:1"
											}
										]
									},
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4310:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4327:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4366:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:1"
									},
									"scope": 651,
									"src": "4293:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 333,
										"nodeType": "Block",
										"src": "5132:151:1",
										"statements": [
											{
												"assignments": [
													315
												],
												"declarations": [
													{
														"constant": false,
														"id": 315,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 333,
														"src": "5142:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 314,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 318,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 316,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 767,
														"src": "5160:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5198:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 315,
															"src": "5204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5213:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 319,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "5182:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 326,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "5239:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 327,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "5245:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 328,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "5249:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 325,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "5229:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 313,
												"id": 332,
												"nodeType": "Return",
												"src": "5265:11:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 334,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5061:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5075:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5087:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "5126:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:1"
									},
									"scope": 651,
									"src": "5039:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "5725:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 344,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "5739:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 345,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 348,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 358,
												"nodeType": "IfStatement",
												"src": "5735:86:1",
												"trueBody": {
													"id": 357,
													"nodeType": "Block",
													"src": "5759:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 351,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 350,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 355,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 356,
															"nodeType": "RevertStatement",
															"src": "5773:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 359,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "5834:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 362,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 360,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 373,
												"nodeType": "IfStatement",
												"src": "5830:86:1",
												"trueBody": {
													"id": 372,
													"nodeType": "Block",
													"src": "5852:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 368,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 366,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 365,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 371,
															"nodeType": "RevertStatement",
															"src": "5866:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 375,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 337,
															"src": "5933:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "5939:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 377,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "5943:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 374,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "5925:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 379,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:1"
											}
										]
									},
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5675:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5689:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 338,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "5701:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:1"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:1"
									},
									"scope": 651,
									"src": "5656:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 457,
										"nodeType": "Block",
										"src": "6346:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 384,
														"src": "6360:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 392,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 428,
													"nodeType": "Block",
													"src": "6534:362:1",
													"statements": [
														{
															"assignments": [
																403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 403,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 428,
																	"src": "6548:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 407,
															"initialValue": {
																"baseExpression": {
																	"id": 404,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 159,
																	"src": "6570:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 406,
																"indexExpression": {
																	"id": 405,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 384,
																	"src": "6580:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 408,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "6603:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 409,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6617:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 418,
															"nodeType": "IfStatement",
															"src": "6599:115:1",
															"trueBody": {
																"id": 417,
																"nodeType": "Block",
																"src": "6624:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 412,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 384,
																					"src": "6674:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 413,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "6680:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 414,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 388,
																					"src": "6693:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 411,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 415,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 416,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:1"
																	}
																]
															}
														},
														{
															"id": 427,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 419,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6834:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 421,
																			"indexExpression": {
																				"id": 420,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 384,
																				"src": "6844:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 424,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 422,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "6852:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 423,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 388,
																				"src": "6866:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 426,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:1"
																}
															]
														}
													]
												},
												"id": 429,
												"nodeType": "IfStatement",
												"src": "6356:540:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "6380:148:1",
													"statements": [
														{
															"expression": {
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 397,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "6496:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 398,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 388,
																	"src": "6512:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 400,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 430,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "6910:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 433,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 431,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 449,
													"nodeType": "Block",
													"src": "7125:206:1",
													"statements": [
														{
															"id": 448,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 442,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "7284:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 444,
																			"indexExpression": {
																				"id": 443,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 386,
																				"src": "7294:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 445,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7301:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 447,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:1"
																}
															]
														}
													]
												},
												"id": 450,
												"nodeType": "IfStatement",
												"src": "6906:425:1",
												"trueBody": {
													"id": 441,
													"nodeType": "Block",
													"src": "6928:191:1",
													"statements": [
														{
															"id": 440,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 436,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 167,
																			"src": "7073:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 437,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 388,
																			"src": "7089:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 439,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 452,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "7355:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 453,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "7361:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 454,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "7365:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 451,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "7346:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 456,
												"nodeType": "EmitStatement",
												"src": "7341:30:1"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6288:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6302:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "6314:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:1"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:1"
									},
									"scope": 651,
									"src": "6271:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "7777:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7791:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 467,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 470,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 480,
												"nodeType": "IfStatement",
												"src": "7787:91:1",
												"trueBody": {
													"id": 479,
													"nodeType": "Block",
													"src": "7814:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 475,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 473,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 476,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 472,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 478,
															"nodeType": "RevertStatement",
															"src": "7828:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 482,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 486,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "7907:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "7916:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 481,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "7887:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 489,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:1"
											}
										]
									},
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7736:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "7753:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:1"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:1"
									},
									"scope": 651,
									"src": "7721:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "8303:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 499,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 494,
														"src": "8317:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 500,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 513,
												"nodeType": "IfStatement",
												"src": "8313:89:1",
												"trueBody": {
													"id": 512,
													"nodeType": "Block",
													"src": "8340:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 508,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 506,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 505,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 511,
															"nodeType": "RevertStatement",
															"src": "8354:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 515,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "8419:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 520,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "8440:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 514,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 458,
														"src": "8411:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:1"
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "8279:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:1"
									},
									"scope": 651,
									"src": "8247:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "9063:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 535,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 527,
															"src": "9082:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 536,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 529,
															"src": "9089:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 537,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 531,
															"src": "9098:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 534,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															542,
															602
														],
														"referencedDeclaration": 602,
														"src": "9073:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 540,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:1"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9007:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "9039:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:1"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:1"
									},
									"scope": 651,
									"src": "8989:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 601,
										"nodeType": "Block",
										"src": "10047:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "10061:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 555,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 568,
												"nodeType": "IfStatement",
												"src": "10057:89:1",
												"trueBody": {
													"id": 567,
													"nodeType": "Block",
													"src": "10082:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 563,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 562,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 561,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 564,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 560,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 566,
															"nodeType": "RevertStatement",
															"src": "10096:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 569,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "10159:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 570,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 583,
												"nodeType": "IfStatement",
												"src": "10155:90:1",
												"trueBody": {
													"id": 582,
													"nodeType": "Block",
													"src": "10182:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 578,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 576,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 575,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 580,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 581,
															"nodeType": "RevertStatement",
															"src": "10196:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 584,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 165,
																"src": "10254:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 587,
															"indexExpression": {
																"id": 585,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "10266:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 588,
														"indexExpression": {
															"id": 586,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "10273:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 589,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 549,
														"src": "10284:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 591,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:1"
											},
											{
												"condition": {
													"id": 592,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 551,
													"src": "10303:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "10299:76:1",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "10314:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 594,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10342:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 595,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 547,
																		"src": "10349:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 596,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "10358:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 593,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "10333:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 598,
															"nodeType": "EmitStatement",
															"src": "10328:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9967:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 544,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9982:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "9999:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 602,
												"src": "10014:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 550,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:1"
									},
									"scope": 651,
									"src": "9949:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "10752:388:1",
										"statements": [
											{
												"assignments": [
													613
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 649,
														"src": "10762:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 612,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 618,
												"initialValue": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "10799:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 607,
															"src": "10806:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 614,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "10789:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 613,
														"src": "10828:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 621,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 620,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10824:310:1",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10867:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 628,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 626,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 613,
																	"src": "10885:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 627,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "10904:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 636,
															"nodeType": "IfStatement",
															"src": "10881:130:1",
															"trueBody": {
																"id": 635,
																"nodeType": "Block",
																"src": "10911:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 630,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "10963:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 631,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "10972:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 632,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "10990:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 629,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 634,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:1"
																	}
																]
															}
														},
														{
															"id": 646,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 638,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 605,
																				"src": "11061:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 639,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 607,
																				"src": "11068:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 642,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 640,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 613,
																					"src": "11077:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 641,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 609,
																					"src": "11096:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 637,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				542,
																				602
																			],
																			"referencedDeclaration": 602,
																			"src": "11052:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 645,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 603,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10688:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "10720:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:1"
									},
									"scope": 651,
									"src": "10663:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 652,
							"src": "1401:9741:1",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "105:11038:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						]
					},
					"id": 730,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 653,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 654,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 729,
							"linearizedBaseContracts": [
								729
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 663,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 672,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 678,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 729,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 729,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 696,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 693,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 729,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 729,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 729,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 729,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 730,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							729
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 756,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 731,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 733,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 756,
							"sourceUnit": 730,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 732,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 729,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 735,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 729,
										"src": "305:6:3"
									},
									"id": 736,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755,
								729
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 737,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 755,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 745,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 755,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 751,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 755,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 756,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								663,
								672
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							785
						]
					},
					"id": 786,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 757,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 758,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 785,
							"linearizedBaseContracts": [
								785
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 766,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 763,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 765,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 767,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 785,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 772,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 771,
												"id": 774,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 769,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 785,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 780,
												"id": 782,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 785,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 786,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"contracts/CandidatosFactory.sol": {
				"ast": {
					"absolutePath": "contracts/CandidatosFactory.sol",
					"exportedSymbols": {
						"Candidatos": [
							831
						],
						"Context": [
							785
						],
						"ERC20": [
							651
						],
						"IERC20": [
							729
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							755
						]
					},
					"id": 832,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 787,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 788,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 832,
							"sourceUnit": 652,
							"src": "61:55:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Candidatos",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 831,
							"linearizedBaseContracts": [
								831
							],
							"name": "Candidatos",
							"nameLocation": "129:10:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Candidatos.Candidato",
									"id": 793,
									"members": [
										{
											"constant": false,
											"id": 790,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "246:4:5",
											"nodeType": "VariableDeclaration",
											"scope": 793,
											"src": "239:11:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 789,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "239:6:5",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 792,
											"mutability": "mutable",
											"name": "votos",
											"nameLocation": "269:5:5",
											"nodeType": "VariableDeclaration",
											"scope": 793,
											"src": "261:13:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 791,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:5",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Candidato",
									"nameLocation": "218:9:5",
									"nodeType": "StructDefinition",
									"scope": 831,
									"src": "211:71:5",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f023f85",
									"id": 797,
									"mutability": "mutable",
									"name": "candidatos",
									"nameLocation": "376:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 831,
									"src": "357:29:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Candidato_$793_storage_$dyn_storage",
										"typeString": "struct Candidatos.Candidato[]"
									},
									"typeName": {
										"baseType": {
											"id": 795,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 794,
												"name": "Candidato",
												"nameLocations": [
													"357:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 793,
												"src": "357:9:5"
											},
											"referencedDeclaration": 793,
											"src": "357:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Candidato_$793_storage_ptr",
												"typeString": "struct Candidatos.Candidato"
											}
										},
										"id": 796,
										"nodeType": "ArrayTypeName",
										"src": "357:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Candidato_$793_storage_$dyn_storage_ptr",
											"typeString": "struct Candidatos.Candidato[]"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "566c2d39711b082cc685ade507dee6291f47044333d9aba4037034cdc3cfac9e",
									"id": 801,
									"name": "CandidatoAgregado",
									"nameLocation": "454:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"indexed": false,
												"mutability": "mutable",
												"name": "nombre",
												"nameLocation": "479:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "472:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 798,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "472:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "471:15:5"
									},
									"src": "448:39:5"
								},
								{
									"body": {
										"id": 819,
										"nodeType": "Block",
										"src": "608:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 810,
																	"name": "_nombre",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 803,
																	"src": "645:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "654:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 809,
																"name": "Candidato",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "635:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Candidato_$793_storage_ptr_$",
																	"typeString": "type(struct Candidatos.Candidato storage pointer)"
																}
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "635:21:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Candidato_$793_memory_ptr",
																"typeString": "struct Candidatos.Candidato memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Candidato_$793_memory_ptr",
																"typeString": "struct Candidatos.Candidato memory"
															}
														],
														"expression": {
															"id": 806,
															"name": "candidatos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "619:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Candidato_$793_storage_$dyn_storage",
																"typeString": "struct Candidatos.Candidato storage ref[] storage ref"
															}
														},
														"id": 808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "630:4:5",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "619:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Candidato_$793_storage_$dyn_storage_ptr_$_t_struct$_Candidato_$793_storage_$returns$__$attached_to$_t_array$_t_struct$_Candidato_$793_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Candidatos.Candidato storage ref[] storage pointer,struct Candidatos.Candidato storage ref)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "619:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "619:38:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 816,
															"name": "_nombre",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 803,
															"src": "691:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 815,
														"name": "CandidatoAgregado",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 801,
														"src": "673:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "673:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "EmitStatement",
												"src": "668:31:5"
											}
										]
									},
									"functionSelector": "503c560f",
									"id": 820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "agregarCandidato",
									"nameLocation": "553:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "_nombre",
												"nameLocation": "584:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "570:21:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 802,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "570:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "569:23:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "608:0:5"
									},
									"scope": 831,
									"src": "544:163:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "862:36:5",
										"statements": [
											{
												"expression": {
													"id": 827,
													"name": "candidatos",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 797,
													"src": "880:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Candidato_$793_storage_$dyn_storage",
														"typeString": "struct Candidatos.Candidato storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 826,
												"id": 828,
												"nodeType": "Return",
												"src": "873:17:5"
											}
										]
									},
									"functionSelector": "198cc691",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllCandidatos",
									"nameLocation": "794:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "810:2:5"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "842:18:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Candidato_$793_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Candidatos.Candidato[]"
												},
												"typeName": {
													"baseType": {
														"id": 823,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 822,
															"name": "Candidato",
															"nameLocations": [
																"842:9:5"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 793,
															"src": "842:9:5"
														},
														"referencedDeclaration": 793,
														"src": "842:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Candidato_$793_storage_ptr",
															"typeString": "struct Candidatos.Candidato"
														}
													},
													"id": 824,
													"nodeType": "ArrayTypeName",
													"src": "842:11:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Candidato_$793_storage_$dyn_storage_ptr",
														"typeString": "struct Candidatos.Candidato[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "841:20:5"
									},
									"scope": 831,
									"src": "785:113:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 832,
							"src": "120:781:5",
							"usedErrors": [],
							"usedEvents": [
								801
							]
						}
					],
					"src": "33:870:5"
				},
				"id": 5
			}
		}
	}
}